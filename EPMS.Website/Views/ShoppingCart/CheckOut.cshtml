@using System.Globalization
@using EPMS.WebModels.Resources.WebsiteClient.ShoppingCart
@using EPMS.Website.Resources.Shared
@model EPMS.WebModels.ViewModels.WebsiteClient.ShoppingCartListViewModel

@{
    ViewBag.Title = Cart.CheckOut;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var today = DateTime.Now;
}

<div id="page_header" class="gradient bottom-shadow">
    <div class="bgback bg3"></div>
    <div class="container">
        <div class="row">
            <div class="span6">
                <ul class="breadcrumbs fixclear">
                    <li><a href="/Home/Index">@EPMS.WebModels.Resources.WebsiteClient.Common.Common.HomePage</a></li>
                    <li>@ViewBag.Title</li>
                </ul>
                <span id="current-date">@today.ToString("dddd, dd MMMM yyyy", CultureInfo.CreateSpecificCulture("en-US"))</span>
            </div>
            <div class="span6">
                <div class="header-titles">
                    <h2>@ViewBag.Title</h2>
                </div>
            </div>
        </div>
    </div>
    <div class="shadowUP"></div>
</div>

<section id="content">
    <div class="container">
        <div id="mainbody">
            <div class="row">
                <div class="span12 directionR ">
                    <div class="controls">
                        <label>
                            <input id="Paypal" type="radio" name="PaymentMethod" value="Paypal" class="no-margin-top">
                            @Cart.PayWithPaypal
                        </label>
                        <br />
                        <div id="PaypalDiv" class="hide">
                            @using (Html.BeginForm("PostTotPaypal", "Paypal", FormMethod.Post, new { @class = "form-horizontal", @id = "PaymentForm", role = "form", enctype = "multipart/form-data" }))
                            {
                                if (Model.ShoppingCart != null && Model.ShoppingCart.ShoppingCartItems.Any())
                                {
                                    for (int i = 0; i < Model.ShoppingCart.ShoppingCartItems.Count; i++)
                                    {
                                        @Html.HiddenFor(model => model.ShoppingCart.CartId)
                                        @Html.HiddenFor(model => model.ShoppingCart.UserCartId)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].ProductId)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].ImagePath)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].ItemNameEn)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].ItemNameAr)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].SkuCode)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].Quantity)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].UnitPrice)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].ItemTotal,
                                        new
                                        {
                                            @id = "ItemTotal-" + Model.ShoppingCart.ShoppingCartItems[i].ProductId,
                                            @Value = Model.ShoppingCart.ShoppingCartItems[i].Quantity * Model.ShoppingCart.ShoppingCartItems[i].UnitPrice
                                        })
                                    }
                                }
                                <input type="image" name="submit" src="https://www.paypal.com/en_US/i/btn/btn_xpressCheckout.gif" border="0" alt="Submit" />
                            }
                        </div>
                        <label>
                            <input id="Offline" type="radio" name="PaymentMethod" value="Offline" class="no-margin-top">
                            @Cart.PayOffline
                        </label>
                        <br />
                        <div id="OfflineDiv" class="hide">
                            @using (Html.BeginForm("OfflinePayment", "Paypal", FormMethod.Post, new { @class = "form-horizontal", @id = "PaymentForm", role = "form", enctype = "multipart/form-data" }))
                            {
                                if (Model.ShoppingCart != null && Model.ShoppingCart.ShoppingCartItems.Any())
                                {
                                    for (int i = 0; i < Model.ShoppingCart.ShoppingCartItems.Count; i++)
                                    {
                                        @Html.HiddenFor(model => model.ShoppingCart.CartId)
                                        @Html.HiddenFor(model => model.ShoppingCart.UserCartId)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].ProductId)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].ImagePath)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].ItemNameEn)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].ItemNameAr)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].SkuCode)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].Quantity)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].UnitPrice)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].ItemTotal,
                                        new
                                        {
                                            @id = "ItemTotal-" + Model.ShoppingCart.ShoppingCartItems[i].ProductId,
                                            @Value = Model.ShoppingCart.ShoppingCartItems[i].Quantity * Model.ShoppingCart.ShoppingCartItems[i].UnitPrice
                                        })
                                    }
                                }
                                <input type="submit" class="btn" value="@Cart.PayOffline" />
                            }
                        </div>
                        <label>
                            <input id="ManualDelivery" type="radio" name="PaymentMethod" value="ManualDelivery" class="no-margin-top">
                            @Cart.ManualOnDelivery
                        </label>
                        <br />
                        <div id="ManualDeliveryDiv" class="hide">
                            @using (Html.BeginForm("OnDeliveryPayment", "Paypal", FormMethod.Post, new { @class = "form-horizontal", @id = "PaymentForm", role = "form", enctype = "multipart/form-data" }))
                            {
                                if (Model.ShoppingCart != null && Model.ShoppingCart.ShoppingCartItems.Any())
                                {
                                    for (int i = 0; i < Model.ShoppingCart.ShoppingCartItems.Count; i++)
                                    {
                                        @Html.HiddenFor(model => model.ShoppingCart.CartId)
                                        @Html.HiddenFor(model => model.ShoppingCart.UserCartId)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].ProductId)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].ImagePath)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].ItemNameEn)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].ItemNameAr)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].SkuCode)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].Quantity)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].UnitPrice)
                                        @Html.HiddenFor(model => model.ShoppingCart.ShoppingCartItems[i].ItemTotal,
                                        new
                                        {
                                            @id = "ItemTotal-" + Model.ShoppingCart.ShoppingCartItems[i].ProductId,
                                            @Value = Model.ShoppingCart.ShoppingCartItems[i].Quantity * Model.ShoppingCart.ShoppingCartItems[i].UnitPrice
                                        })
                                    }
                                }
                                <input type="submit" class="btn" value="@Cart.ManualOnDelivery" />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    $(document).ready(function () {
        $("input[name=PaymentMethod]:radio").change(function () {
            if ($(this).val() == "Paypal") {
                $("#PaypalDiv").show();
                $("#OfflineDiv").hide();
                $("#ManualDeliveryDiv").hide();
            }
            if ($(this).val() == "Offline") {
                $("#OfflineDiv").show();
                $("#PaypalDiv").hide();
                $("#ManualDeliveryDiv").hide();
            }
            if ($(this).val() == "ManualDelivery") {
                $("#ManualDeliveryDiv").show();
                $("#PaypalDiv").hide();
                $("#OfflineDiv").hide();
            }
        });
    });
</script>
