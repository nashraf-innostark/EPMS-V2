@model  EPMS.Models.ResponseModels.NotificationResponseModel.NotificationViewModel
@{
    ViewBag.Title = EPMS.WebModels.Resources.Notification.Notification.NewNotification;
    var direction = EPMS.WebModels.Resources.Shared.Common.TextDirection;
    var pageheading = "";
    var breadcrumb = "";
    var submitBtn = "";
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (Model.NotificationResponse.NotificationId > 0)
    {
        ViewBag.Title = EPMS.WebModels.Resources.Notification.Notification.Edit + " " + (direction == "ltr" ? " " + Model.NotificationResponse.TitleE : " " + Model.NotificationResponse.TitleA);
        pageheading = ViewBag.Title;
        breadcrumb = ViewBag.Title;
        submitBtn = EPMS.WebModels.Resources.Notification.Notification.SaveChanges;
    }
    else
    {
        ViewBag.Title = EPMS.WebModels.Resources.Notification.Notification.NewNotification;
        breadcrumb = ViewBag.Title;
        pageheading = EPMS.WebModels.Resources.Notification.Notification.CreateNewNotification;
        submitBtn = EPMS.WebModels.Resources.Notification.Notification.Create;
    }
}

<!-- Navigation Bar -->
<div class="breadcrumb-container" dir="ltr">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/Notification/Index">
                @EPMS.WebModels.Resources.Notification.Notification.NotificationList
            </a>
        </li>
        <li class="current">
            <a href="javascript:;">@breadcrumb</a>
        </li>
    </ul>
</div>
<!-- Page heading -->
<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@pageheading</small></h2>
</header>
<!--Notifications begin-->
@Html.Partial("_Alert")

@using (Html.BeginForm("Create", "Notification", FormMethod.Post, new { @id="notif",@class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(x => x.NotificationResponse.NotificationId)
    @Html.HiddenFor(x => x.NotificationResponse.RecCreatedBy)
    @Html.HiddenFor(x => x.NotificationResponse.RecCreatedDate)
    <div class="container-fluid">
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Notification.Notification.NotificationNameE</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.NotificationResponse.TitleE)
                    @Html.ValidationMessageFor(m => m.NotificationResponse.TitleE, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Notification.Notification.NotificationNameA</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.NotificationResponse.TitleA)
                    @Html.ValidationMessageFor(m => m.NotificationResponse.TitleA, "", new { @class = "required" })
                </div>
            </div>
        </div>


        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Notification.Notification.CategoryName</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @Html.DropDownListFor(model => model.NotificationResponse.CategoryId, new[]
                    {
                        new SelectListItem { Value = "2" , Text = EPMS.WebModels.Resources.Notification.Notification.Documents },
                        new SelectListItem { Value = "3" , Text = EPMS.WebModels.Resources.Notification.Notification.Employees },
                        new SelectListItem { Value = "4" , Text = EPMS.WebModels.Resources.Notification.Notification.Meetings },
                        new SelectListItem { Value = "1" , Text = EPMS.WebModels.Resources.Notification.Notification.Company },
                        new SelectListItem { Value = "5" , Text = EPMS.WebModels.Resources.Notification.Notification.Other }
                    }, new { @id = "NotificationCategory", @class = "select2me" })
                    @Html.ValidationMessageFor(m => m.NotificationResponse.CategoryId, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Notification.Notification.AlertTime</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @Html.DropDownListFor(model => model.NotificationResponse.AlertBefore, new[]
                    {
                        new SelectListItem { Value = "30" , Text = EPMS.WebModels.Resources.Notification.Notification.BeforeOneMonth },
                        new SelectListItem { Value = "7" , Text = EPMS.WebModels.Resources.Notification.Notification.BeforeOneWeek },
                        new SelectListItem { Value = "1" , Text = EPMS.WebModels.Resources.Notification.Notification.BeforeOneDay }
                    }, new { @id = "NotificationAlertBefore", @class = "select2me" })
                    @Html.ValidationMessageFor(m => m.NotificationResponse.AlertBefore, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Notification.Notification.NotificationType</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @Html.DropDownListFor(model => model.NotificationResponse.AlertDateType, new[]
                    {
                        new SelectListItem { Value = "1" , Text = EPMS.WebModels.Resources.Notification.Notification.Gregorian },
                        new SelectListItem { Value = "0" , Text = EPMS.WebModels.Resources.Notification.Notification.Hijri }
                    }, new { @id = "dateTypeDDl", @class = "select2me", onchange = "AlertDateType('#dateTypeDDl');" })
                    @Html.ValidationMessageFor(m => m.NotificationResponse.AlertDateType, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">
                    @EPMS.WebModels.Resources.Notification.Notification.AlertEndDate
                    <a href="javascript:;" class="bootstrap-tooltip" data-placement="top" data-original-title="(dd/mm/yyyy)"><i class="icon-photon info-circle"></i></a>
                </label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.NotificationResponse.AlertDate, new { @class = "datepickerGregorian cursorHand span3", @id = "AlertEndDateE", @readonly = true, @placeholder = "", onchange = "GregorianToHijri(this,'#AlertEndDateA')" })
                    @Html.TextBoxFor(model => model.NotificationResponse.AlertDateHijri, new { @class = "datepickerArabic cursorHand span3", @id = "AlertEndDateA", @readonly = true, @placeholder = "", onchange = "HijriToGregorian(this,'#AlertEndDateE')" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Notification.Notification.EmployeeName</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @(direction == "ltr" ? @Html.DropDownListFor(m => m.NotificationResponse.EmployeeId, new SelectList(Model.EmployeeDDL, "EmployeeId", "EmployeeNameE"), "Not Employee", new { @class = "select2me", @id = "emp" }) : @Html.DropDownListFor(m => m.NotificationResponse.EmployeeId, new SelectList(Model.EmployeeDDL, "EmployeeId", "EmployeeNameA"), "ليس موظف", new { @class = "select2me", @id = "emp" }))
                </div>
            </div>
        </div>

        <!--Input Field begin-->
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Notification.Notification.MobileNumber</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.NotificationResponse.MobileNo, new { @class = "number", @id = "mobile" })
                    @Html.ValidationMessageFor(m => m.NotificationResponse.MobileNo, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <!--Input Field end-->
        <!--Input Field begin-->
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Notification.Notification.Email</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.NotificationResponse.Email, new { @id = "mailAlert"})
                    @Html.ValidationMessageFor(m => m.NotificationResponse.Email, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <!--Input Field end-->
        @if (Model.NotificationResponse.NotificationId > 0)
        {
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">@EPMS.WebModels.Resources.Notification.Notification.Notified</label>
                </div>
                <div class="span9 span-inset">
                    <div data-on-label="YES" data-off-label="NO" class="switch switch-small" data-on="success" data-off="danger">
                        @Html.CheckBoxFor(model => model.NotificationResponse.ReadStatus)
                    </div>
                </div>

            </div>
        }
        

        <div class="control-group row-fluid">
            <div class="span3 span-inset">
                <button type="submit" class="btn">@submitBtn</button>
            </div>
        </div>
    </div>
   
}
<script src="~/Scripts/plugins/jquery.blockUI.js"></script>
<script>
    $(document).ready(function () {
        //Convert Gregorian to Hijri
        if ($("#AlertEndDateE").val() != null && $("#AlertEndDateE").val() != "") {
            $("#AlertEndDateA").val(ConvertDates($("#AlertEndDateE").val(), "gregorian", "islamic"));
        }
        $("#emp").on("change", function () {
            var employOrNot = $("#emp option:selected").val();
            NotificationContact(employOrNot);
        });
        $(".uniformCheckbox").uniform();
        AlertDateType("#dateTypeDDl");
        NotificationContact($("#emp option:selected").val());
    });
    function BusyIndicator() {
        var siteUrl = $('#siteURL').val();
        $.blockUI({
            message: '<img src="' + siteUrl + '/Images/Gallery/ajax_loader.gif" style="width:75px; height:75"/>',
            css: { backgroundColor: '#FFFAFA', left: "47%", width: "6%" }
        });
    }
    $("#notif").bind("ajax:complete", function (event) {
        BusyIndicator();
    });
    // set Employee's Email & Mobile number
    function SetEmployeeContacts() {
        var empId = $("#emp").val();
        if (empId != "") {
            var employeesList = '@Html.Raw(Json.Encode(Model.EmployeeDDL))';
            var parsed = JSON.parse(employeesList);

            $.each(parsed, function (key, value) {
                if (value.EmployeeId == empId) {
                    $("#mobile").val(value.MobileNo);
                    $("#mailAlert").val(value.Email);
                }
            });
        } else {
            $("#mobile").val("");
            $("#mailAlert").val("");
        }
    };
    function NotificationContact(employOrNot) {
        if (employOrNot == "") {
            $("#mobile").removeAttr('readonly');
            $("#mailAlert").removeAttr('readonly');

        }
        else {
            $("#mobile").attr('readonly', 'readonly');
            $("#mailAlert").attr('readonly', 'readonly');
            SetEmployeeContacts();
        }
    }
    function AlertDateType(dateType) {
        if ($(dateType).val()==1) {
            $("#AlertEndDateA").hide();
            $("#AlertEndDateE").show();
        } else {
            $("#AlertEndDateE").hide();
            $("#AlertEndDateA").show();
        }
    }
</script>