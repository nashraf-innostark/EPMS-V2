@using System.Configuration
@using EPMS.WebModels.WebsiteModels.Common
@model EPMS.WebModels.ViewModels.Reports.DetailVeiwModel
@{
    ViewBag.Title = EPMS.WebModels.Resources.Reports.Reports.ViewProjectReport;
    Layout = "~/Views/Shared/_Layout.cshtml";
    int taskSerial = 1;
}
<!-- Navigation Bar Start-->
<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="@(ConfigurationManager.AppSettings["SiteURL"].ToString())/Report/ProjectsAndTasks/Index">
                @EPMS.WebModels.Resources.Reports.Reports.ProjectManagementReportList
            </a>

        </li>
        <li class="current">
            @EPMS.WebModels.Resources.Reports.Reports.ViewProjectReport
        </li>
    </ul>
</div>
<!-- Navigation Bar End-->
<!-- Page Heading Start-->
<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@EPMS.WebModels.Resources.Reports.Reports.ProjectReport</small></h2>
</header>
<!-- Page Heading End-->

<form class="form-horizontal" id="validation_form">
    <div class="container-fluid" id="container">
        <div class="control-group row-fluid">
            <!--Simple Chart begin-->
            <div class="control-group row-fluid">
                <div class="span12 span-inset-more">
                    <div id="chart_01" style="height:250px;"></div>
                    <div id="choices" style="height:20px;"></div>
                </div>
            </div>
            <!--Simple Chart end-->
        </div>
        <script>
            var img;
            var theCanvas;
            $(".auto-resize").keyup(function () {
                autoGrowField($(this).get(0));
            });

            $(document).ready(function () {
                $(".disableBtn").attr("disabled", true);
                $('#tableSortableResMed,#tableSortableResMed2').dataTable({
                    "sPaginationType": "bootstrap",
                    "fnInitComplete": function () {
                        $(".dataTables_wrapper select").select2({
                            dropdownCssClass: 'noSearch'
                        });
                    }
                });
                DrawGraph();
                // html to canvas
                // here I am converting the html of graph to canvas
                html2canvas($("#chart_01"), {
                    onrendered: function (canvas) {
                        // save canvas
                        theCanvas = canvas;
                        var imgId = "report_" + '@Model.ReportId';
                        SaveCanvasAsImage(theCanvas, imgId);
                        UploadImage(imgId);
                    }
                });
            });
            function DrawGraph() {
                var markings = [

                    { color: "#F6F6F6", lineWidth: 1, xaxis: { from: '@Model.GrpahStartTimeStamp', to: '@Model.GrpahEndTimeStamp' } }
                ];

                var graphItems = '@Html.Raw(Json.Encode(Model.GraphItems))';

                var parsed = JSON.parse(graphItems);


                var datasets = [];

                $.each(parsed, function (index, val) {
                    var dataset = {
                        label: val.ItemLabel,
                        data: [[val.ItemValue[0].data[0].dataValue[0].TimeStamp, val.ItemValue[0].data[0].dataValue[0].Value], [val.ItemValue[0].data[0].dataValue[1].TimeStamp, val.ItemValue[0].data[0].dataValue[1].Value]]
                    };
                    datasets.push(dataset);
                });
                var i = 0;
                $.each(datasets, function (key, val) {
                    val.color = i;
                    ++i;
                });

                // insert checkboxes
                var choiceContainer = $("#choices");
                $.each(datasets, function (key, val) {
                    choiceContainer.append("<input type='checkbox' style='float:left;margin-left: 20px;' name='" + key +
                        "' checked='checked' id='id" + key + "'></input>" +
                        "<label style='float:left;'for='id" + key + "'>"
                        + val.label + "</label>");
                });


                choiceContainer.find("input").click(plotAccordingToChoices);
                function plotAccordingToChoices() {

                    var data = [];
                    var dataArray = [];

                    var xmaxl = 0;
                    var xminl = 500000000;
                    var ymaxl = 0;
                    var yminl = 500000000;
                    choiceContainer.find("input:checked").each(function () {
                        var xmax = 0;
                        var xmin = 5000000000;
                        var ymax = 0;
                        var ymin = 5000000000;
                        var key = $(this).attr("name");
                        var datalenght = datasets[key].data.length;

                        for (n = 0; n < datalenght; n++) {

                            var x = datasets[key].data[n] + "";

                            var d = x.split(',');
                            var d1 = parseInt(d[0]);
                            var d2 = parseInt(d[1]);
                            // alert(x);
                            if (xmax < d1) {
                                xmax = d1;
                            }
                            if (xmin > d1) {
                                xmin = d1;
                            }
                            if (ymax < d2) {
                                ymax = d2;
                            }
                            if (ymin > d2) {
                                ymin = d2;
                            }
                        }

                        if (xmaxl < xmax) {
                            xmaxl = xmax;
                        }
                        if (xminl > xmin) {
                            xminl = xmin;
                        }
                        if (ymaxl < ymax) {
                            ymaxl = ymax;
                        }
                        if (yminl > ymin) {
                            yminl = ymin;
                        }



                        if (key && datasets[key]) {
                            data.push(datasets[key]);
                        }


                    });

                    var xzoomMin = xminl; var xZoomMax = xmaxl; var xPanMin = xminl; var xPanMax = xmaxl; var yzoomMin = yminl; var yZoomMax = ymaxl; var yPanMin = yminl; var yPanMax = ymaxl;
                    if (data.length > 0) {
                        $.plot("#chart_01", data, {
                            series: {
                                lines: { show: true, fill: true }
                            },
                            grid: { hoverable: true, clickable: true, borderWidth: 1, color: '#bbb', markings: markings },

                            xaxis: {
                                mode: "time",
                                timeformat: "%y,%m",
                                zoomRange: [xzoomMin, xZoomMax],
                                panRange: [xPanMin, xPanMax]
                            },
                            yaxis: {
                                zoomRange: [yzoomMin, yZoomMax],
                                panRange: [yPanMin, yPanMax]
                            },
                            zoom: {
                                interactive: true
                            },
                            pan: {
                                interactive: true
                            }
                        });
                    }
                }

                plotAccordingToChoices();
                // drawByChoice(datasets);

                $("<div id='tooltip'></div>").css({
                    position: "absolute",
                    "z-index": "500",
                    display: "none",
                    border: "1px solid #fdd",
                    padding: "2px",
                    "background-color": "#fee",
                    opacity: 0.80
                }).appendTo("body");

                $("#chart_01").bind("plothover", function (event, pos, item) {
                    var str = "(" + pos.x.toFixed(2) + ", " + pos.y.toFixed(2) + ")";

                    $("#hoverdata").text(str);
                    if (item) {
                        var DATE_FORMAT = "%y,%m";
                        var x = $.plot.formatDate(new Date(item.datapoint[0]), DATE_FORMAT),
                            y = item.datapoint[1];

                        $("#tooltip").html(item.series.label + " of " + y + " in " + x)
                            .css({ top: item.pageY + 5, left: item.pageX + 5 })
                            .fadeIn(200);
                    } else {
                        $("#tooltip").hide();
                    }

                });

                $("#chart_01").bind("plotpan", function (event, plot) {
                    var axes = plot.getAxes();
                    $(".message").html("Panning to x: " + axes.xaxis.min.toFixed(2)
                        + " &ndash; " + axes.xaxis.max.toFixed(2)
                        + " and y: " + axes.yaxis.min.toFixed(2)
                        + " &ndash; " + axes.yaxis.max.toFixed(2));
                });

                $("#chart_01").bind("plotzoom", function (event, plot) {
                    var axes = plot.getAxes();
                    $(".message").html("Zooming to x: " + axes.xaxis.min.toFixed(2)
                        + " &ndash; " + axes.xaxis.max.toFixed(2)
                        + " and y: " + axes.yaxis.min.toFixed(2)
                        + " &ndash; " + axes.yaxis.max.toFixed(2));
                });

                // drawGraphs();
            }
        </script>


        <!--Input Field begin-->
        <div class="control-group row-fluid">
            <!--Sortable Responsive Media Table begin-->
            <div class="row-fluid">
                <div class="span12">
                    <table class="table table-striped table-responsive" id="tableSortableResMed">
                        <thead class="cf sorthead">
                            <tr>
                                <th>Serial</th>
                                <th>Project Name</th>
                                <th>Price</th>
                                <th>Cost</th>
                                <th>Start Date</th>
                                <th>Delivery Date</th>
                                <th>Total Number of Tasks</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var project in Model.Projects)
                            {
                                <tr class="gradeX">

                                    <td>1</td>
                                    <td>@project.NameE</td>
                                    <td>
                                        @project.Price
                                    </td>
                                    <td>
                                        @project.OtherCost
                                    </td>
                                    <td>
                                        @project.StartDate
                                    </td>
                                    <td>
                                        @project.EndDate
                                    </td>
                                    <td>
                                        @project.TotalTasks
                                    </td>
                                    <td>
                                        @((ProjectStatus)project.Status)
                                    </td>

                                </tr>
                            }
                        </tbody>
                    </table>

                </div>
            </div>
            <!--Sortable Responsive Media Table end-->

            <div class="row-fluid">
                <div class="span12">
                    <table class="table table-striped table-responsive" id="tableSortableResMed2">
                        <thead class="cf sorthead">
                            <tr>
                                <th>Serial</th>
                                <th>Task Name</th>

                                <th>Cost</th>
                                <th>Start Date</th>
                                <th>Delivery Date</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var task in Model.ProjectTasks)
                            {
                                <tr class="gradeX">

                                    <td>@(taskSerial++)</td>
                                    <td>@task.TaskNameE</td>
                                    <td>
                                        @task.TotalCost
                                    </td>
                                    <td>
                                        @task.StartDate
                                    </td>
                                    <td>
                                        @task.EndDate
                                    </td>
                                    <td>
                                        @(task.TaskProgressText)
                                    </td>

                                </tr>
                            }


                        </tbody>
                    </table>

                </div>
            </div>

        </div>
        <!--Input Field end-->







        <div class="control-group row-fluid">
            <div class="span3 span-inset">
                <a class="btn disableBtn" href="~/Report/Project/GeneratePdf?ReportId=@Model.ReportId">Generate Report As PDF</a>
                @*<button type="button" class="btn" id="generatePDF" onclick="demoFromHTML();">Generate Report As PDF</button>*@
            </div>

        </div>
    </div><!-- end form -->
</form>
<div id="GraphImage" style="display: none">
    <img id="report_@Model.ReportId" />
</div>
<script src="~/Scripts/jsPDF/jsPDF.js"></script>
<script src="~/Scripts/html2canvas.js"></script>
<script>

    (function () {
        var
            form = $('#container'),
            cache_width = form.width(),
            a4 = [595.28, 841.89];  // for a4 size paper width and height

        $('#generatePDF').on('click', function () {
            $('body').scrollTop(0);
            createPDF();
        });
        //create pdf
        function createPDF() {
            getCanvas().then(function (canvas) {
                var
                    img = canvas.toDataURL("image/png"),
                    doc = new jsPDF({
                        unit: 'px',
                        format: 'a4'
                    });
                doc.addImage(img, 'JPEG', 20, 20);
                doc.save('Project-Report.pdf');
                form.width(cache_width);
            });
        }

        // create canvas object
        function getCanvas() {
            form.width((a4[0] * 1.33333) - 80).css('max-width', 'none');
            return html2canvas(form, {
                imageTimeout: 2000,
                removeContainer: true
            });
        }
    }());
</script>