@using Newtonsoft.Json
@model EPMS.WebModels.ViewModels.Reports.QuotationOrderDetailViewModel
@{
    Layout = null;
        var direction = EPMS.WebModels.Resources.Shared.Common.TextDirection;
    ViewBag.Title = Model.QuotationOrderReports.Count() > 1 ? EPMS.WebModels.Resources.Reports.Reports.QOReportView : (direction == "ltr" ? Model.QuotationOrderReports.FirstOrDefault().CustomerNameE : Model.QuotationOrderReports.FirstOrDefault().CustomerNameA) + " " + EPMS.WebModels.Resources.Reports.Reports.Report;

    int serialX = 1;
    int serialY = 1;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0">
    <meta name="description" content="">
    <meta name="keywords" content="">
    <meta name="author" content="">

    <title>@ViewBag.Title</title>

    <!-- shortcut icon -->
    <link rel="shortcut icon" href="~/Images/favicon.ico" />
    <link rel="stylesheet" href="~/Content/css/photon.css" media="all" />
    <link rel="stylesheet" href="~/Content/css/photon-pt2.css" media="all" />
    @*<link rel="stylesheet" href="~/Content/css/photon-responsive.css" media="all" />*@
    @*<link rel="stylesheet" href="~/Content/css/help-photon.css" media="all" />*@


    @if (EPMS.Web.Helper.CultureHelper.IsRighToLeft())
    {
        <link rel="stylesheet" href="~/Content/css/arabic.css" media="all" />
    }
    <link href="~/Content/CSS/styleIST.css" rel="stylesheet" media="all" />
    <!-- Calendar -->
    <link rel="stylesheet" href="~/Content/CSS/Admin/style/fullcalendar.css">
    <link href="~/Content/jquery.calendars.picker.css" rel="stylesheet" />

    <script type="text/javascript" src="~/Scripts/jquery-1.8.3.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jqueryui-1.10.0.min.js"></script>

    <script type="text/javascript" src="~/Scripts/bootstrap/bootstrap.min.js"></script>
    <script type="text/javascript" src="~/Scripts/plugins/jquery.flot.js"></script>
    <script type="text/javascript" src="~/Scripts/plugins/jquery.flot.stack.js"></script>
    <script type="text/javascript" src="~/Scripts/plugins/jquery.flot.pie.js"></script>
    <script type="text/javascript" src="~/Scripts/plugins/jquery.flot.resize.js"></script>
    <script type="text/javascript" src="~/Scripts/plugins/jquery.form.js"></script>
    <script src="~/Scripts/html2canvas/html2canvas.js"></script>
    <style type="text/css">
        #Reports table thead tr th {
            font-size: 15px !important;
        }

        path.highcharts-tracker {
            display: none;
        }

        g.highcharts-tracker, g.highcharts-tooltip, path[isShadow] {
            display: none;
        }

        .main-content {
            left: 0 !important;
        }

        body {
            background-color: #F6F6F6;
        }
    </style>
</head>
<body>
    <div class="main-content">
        <div class="breadcrumb-container">
            <ul class="xbreadcrumbs">
               
            </ul>
        </div>
        <!-- Page Heading Start-->
        <header>
            <i class="icon-big-notepad"></i>
            <h2><small>@ViewBag.Title</small></h2>
        </header>
        <!-- Page Heading End-->
        <!--Notifications begin-->
        @Html.Partial("_Alert")
        <!--Notifications end-->

        <form class="form-horizontal">
            <div class="container-fluid">

                <div class="control-group row-fluid">
                    <!--Simple Chart begin-->
                    <div class="control-group row-fluid">
                        <div class="span12 span-inset-more">
                            <img src="@Model.ImageSrc" />
                            <div id="choices" style="height:20px;"></div>
                        </div>
                    </div>
                    <!--Simple Chart end-->

                </div>

                <div class="control-group row-fluid">
                    <div class="span12">
                        <table class="table table-striped table-responsive" id="tableSortableResMed">
                            <thead class="cf sorthead">
                                <tr>
                                    <th>@EPMS.WebModels.Resources.Reports.Reports.Serial</th>
                                    <th>@EPMS.WebModels.Resources.Reports.Reports.CustomerName</th>
                                    <th>@EPMS.WebModels.Resources.Reports.Reports.QONoOfRFQs</th>
                                    <th>@EPMS.WebModels.Resources.Reports.Reports.QONoOfOrders</th>
                                    <th>@EPMS.WebModels.Resources.Reports.Reports.QOFromTo</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var qo in Model.QuotationOrderReports)
                                {
                                    <tr>
                                        <td>1</td>
                                        <td>
                                            @(direction == "ltr" ? qo.CustomerNameE : qo.CustomerNameA)
                                        </td>
                                        <td>@qo.NoOfRFQ</td>
                                        <td>@qo.NoOfOrders</td>
                                        <td>@qo.ReportFromDateString - @qo.ReportToDateString</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </form>

    </div>
    <script>
            var img;
            var theCanvas;
            var reportId;
            $(document).ready(function () {
                reportId = '@Model.ReportId';
                DrawGraph();
            });

            function DrawGraph() {
                var markings = [
                    { color: "#F6F6F6", lineWidth: 1, xaxis: { from: '@Model.GraphStartTimeStamp', to: '@Model.GraphEndTimeStamp' } }
                ];

                var graphItems = '@Html.Raw(Json.Encode(Model.GraphItems))';
                var parsed = JSON.parse(graphItems);
                //var datasets = [];

                //Parsing Quotation DataSet and making Array of Values
                var quotationDataSet = '@Html.Raw(Json.Encode(Model.RFQsDataSet))';
                var quotationDataSetParsed = JSON.parse(quotationDataSet);
                var quotationtimeStamp = [];
                $.each(quotationDataSetParsed, function (index, val) {
                    var values = [val.TimeStamp, val.Value];
                    quotationtimeStamp.push(values);
                });

                //Parsing Invoice DataSet and making Array of Values
                var invoiceDataSet = '@Html.Raw(Json.Encode(Model.OrdersDataSet))';
                var invoiceDataSetParsed = JSON.parse(invoiceDataSet);
                var invoiceTimeStamp = [];
                $.each(invoiceDataSetParsed, function (index, val) {
                    var values = [val.TimeStamp, val.Value];
                    invoiceTimeStamp.push(values);
                });


                var datasets = {
                    "quotation": {
                        label: "RFQs",
                        data: quotationtimeStamp
                    },
                    "invoice": {
                        label: "Orders",
                        data: invoiceTimeStamp
                    }

                };

                var i = 0;
                $.each(datasets, function (key, val) {
                    val.color = i;
                    ++i;
                });

                // insert checkboxes
                var choiceContainer = $("#choices");
                $.each(datasets, function (key, val) {
                    choiceContainer.append("<input type='checkbox' style='float:left;margin-left: 20px;' name='" + key +
                        "' checked='checked' id='id" + key + "'></input>" +
                        "<label style='float:left;'for='id" + key + "'>"
                        + val.label + "</label>");
                });
                choiceContainer.find("input").click(plotAccordingToChoices);
                function plotAccordingToChoices() {
                    var data = [];
                    var dataArray = [];
                    var xmaxl = 0;
                    var xminl = 500000000;
                    var ymaxl = 0;
                    var yminl = 500000000;
                    choiceContainer.find("input:checked").each(function () {
                        var xmax = 0;
                        var xmin = 5000000000;
                        var ymax = 0;
                        var ymin = 5000000000;
                        var key = $(this).attr("name");
                        var datalenght = datasets[key].data.length;
                        for (n = 0; n < datalenght; n++) {
                            var x = datasets[key].data[n] + "";
                            var d = x.split(',');
                            var d1 = parseInt(d[0]);
                            var d2 = parseInt(d[1]);
                            // alert(x);
                            if (xmax < d1) {
                                xmax = d1;
                            }
                            if (xmin > d1) {
                                xmin = d1;
                            }
                            if (ymax < d2) {
                                ymax = d2;
                            }
                            if (ymin > d2) {
                                ymin = d2;
                            }
                        }
                        if (xmaxl < xmax) {
                            xmaxl = xmax;
                        }
                        if (xminl > xmin) {
                            xminl = xmin;
                        }
                        if (ymaxl < ymax) {
                            ymaxl = ymax;
                        }
                        if (yminl > ymin) {
                            yminl = ymin;
                        }
                        if (key && datasets[key]) {
                            data.push(datasets[key]);
                        }
                    });

                    var xzoomMin = xminl; var xZoomMax = xmaxl; var xPanMin = xminl; var xPanMax = xmaxl; var yzoomMin = yminl; var yZoomMax = ymaxl; var yPanMin = yminl; var yPanMax = ymaxl;
                    if (data.length > 0) {
                        $.plot("#chart_01", data, {
                            series: {
                                lines: { show: true, fill: true }
                            },
                            grid: { hoverable: true, clickable: true, borderWidth: 1, color: '#bbb', markings: markings },

                            xaxis: {
                                mode: "time",
                                timeformat: "%y,%m,%d",
                                zoomRange: [xzoomMin, xZoomMax],
                                panRange: [xPanMin, xPanMax]
                            },
                            yaxis: {
                                zoomRange: [yzoomMin, yZoomMax],
                                panRange: [yPanMin, yPanMax]
                            },
                            zoom: {
                                interactive: true
                            },
                            pan: {
                                interactive: true
                            }
                        });
                    }
                }

                plotAccordingToChoices();
                // drawByChoice(datasets);

                $("<div id='tooltip'></div>").css({
                    position: "absolute",
                    "z-index": "500",
                    display: "none",
                    border: "1px solid #fdd",
                    padding: "2px",
                    "background-color": "#fee",
                    opacity: 0.80
                }).appendTo("body");

                $("#chart_01").bind("plothover", function (event, pos, item) {
                    var str = "(" + pos.x.toFixed(2) + ", " + pos.y.toFixed(2) + ")";

                    $("#hoverdata").text(str);
                    if (item) {
                        var DATE_FORMAT = "%y,%m,%d";
                        var x = $.plot.formatDate(new Date(item.datapoint[0]), DATE_FORMAT),
                            y = item.datapoint[1];

                        $("#tooltip").html(item.series.label + " of " + y + " in " + x)
                            .css({ top: item.pageY + 5, left: item.pageX + 5 })
                            .fadeIn(200);
                    } else {
                        $("#tooltip").hide();
                    }

                });

                $("#chart_01").bind("plotpan", function (event, plot) {
                    var axes = plot.getAxes();
                    $(".message").html("Panning to x: " + axes.xaxis.min.toFixed(2)
                        + " &ndash; " + axes.xaxis.max.toFixed(2)
                        + " and y: " + axes.yaxis.min.toFixed(2)
                        + " &ndash; " + axes.yaxis.max.toFixed(2));
                });

                $("#chart_01").bind("plotzoom", function (event, plot) {
                    var axes = plot.getAxes();
                    $(".message").html("Zooming to x: " + axes.xaxis.min.toFixed(2)
                        + " &ndash; " + axes.xaxis.max.toFixed(2)
                        + " and y: " + axes.yaxis.min.toFixed(2)
                        + " &ndash; " + axes.yaxis.max.toFixed(2));
                });

                // drawGraphs();
            }
    </script>
</body>
</html>