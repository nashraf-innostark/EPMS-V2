@model EPMS.WebModels.ViewModels.PhysicalCount.PhysicalCountViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.CreatePageTitle;
    string direction = EPMS.WebModels.Resources.Shared.Common.TextDirection;
}

<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/Inventory/PhysicalCount/Index">
                @EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.CreatePageListBreadcrumbs
            </a>
        </li>
        <li class="current">
            <a href="javascript:;">@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.CreatePageTitle</a>
        </li>
    </ul>
</div>

<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.CreatePageTitle</small></h2>
</header>
<!--Notifications begin-->
@Html.Partial("_Alert")
<!--Notifications end-->
@using (Html.BeginForm("Create", "PhysicalCount", FormMethod.Post, new { @id = "PhysicalCountForm", @class = "form-horizontal", role = "form" }))
{
    @Html.HiddenFor(m => m.PhysicalCount.PCId)
    @Html.HiddenFor(m => m.PhysicalCount.RecCreatedBy)
    @Html.HiddenFor(m => m.PhysicalCount.RecCreatedDate)
    <div class="container-fluid">
        <div class="control-group row-fluid">
            <div class="form-legend centTitle">
                @EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.CreatePageHeading
            </div>

            <div class="invoice-info">
                <div class="controls">
                    <a href="javascript:print()" rel="tooltip" title="" data-original-title="Print statistics" class="print"><i class="icon-print"></i> Print</a>
                </div>
                <div class="control-group row-fluid">
                    <div class="span6">
                        <div class="invoice-from">
                            <table>
                                <tbody>
                                    <tr>
                                        <th>@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.EmployeeName:</th>
                                        <td>@Model.PhysicalCount.RequesterName</td>
                                    </tr>
                                    <tr>
                                        <th>@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.EmployeeId:</th>
                                        <td>@Model.PhysicalCount.RequesterEmpId</td>
                                    </tr>
                                    <tr>
                                        <th>@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.PCNo:</th>
                                        <td>@Model.PhysicalCount.PCId</td>
                                    </tr>
                                </tbody>
                            </table>

                        </div>
                    </div>


                    <div class="span6">
                        <div class="invoice-infos">
                            <table>
                                <tbody>
                                    <tr>
                                        <th>@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.Date:</th>
                                        <td>@Model.PhysicalCount.RecCreatedDate.ToShortDateString()</td>
                                    </tr>

                                    <tr>
                                        <th>@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.Warhouse:</th>
                                        <td>
                                            <div class="control-group row-fluid">
                                                <div class="span11">
                                                    <div class="controls">
                                                        @Html.DropDownListFor(m => m.PhysicalCount.WarehouseId, new SelectList(Model.Warehouses, "WarehouseId", "WarehouseNumber"), "--Select--", new { @id = "warehouse", @class = "select2me disableDdl" })
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <label id="warehouseValidationError" class="required"></label>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!--Input Field end-->
        <!--Basic Responsive Table begin-->
        <div class="row-fluid" id="ress">
            <div class="span12">
                <table class="table table-striped table-responsive ">
                    <thead class="">
                        <tr>
                            <th>@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.Serial</th>
                            <th>@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.ItemBarcode</th>
                            <th>@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.ItemDetails</th>
                            <th>@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.ItemsInPackage</th>
                            <th>@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.NumberOfPackages</th>
                            <th>@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.TotalItemsInPackages</th>
                            <th>@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.ItemsInWharewhouse</th>
                            <th>@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.TotalItemsCount</th>
                            <th>@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.TotalItemsCountInWarehouse</th>
                            <th>@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.Delete</th>
                        </tr>
                    </thead>
                    <tbody class="qouteAdd" id="PCItemsTableBody">
                        @if (Model.PhysicalCountItems.Any())
                        {
                            for (int i = 0; i < Model.PhysicalCountItems.Count(); i++)
                            {
                                <tr data-id=@i>
                                    <td style='display: none'>
                                        <input name='PhysicalCountItems.Index' type='hidden' value=@i />
                                        @Html.HiddenFor(m => m.PhysicalCountItems[i].PcItemId)
                                        @Html.HiddenFor(m => m.PhysicalCountItems[i].PcId)
                                        @Html.HiddenFor(m => m.PhysicalCountItems[i].ItemVariationId)
                                        @Html.HiddenFor(m => m.PhysicalCountItems[i].WarehouseId)
                                        @Html.HiddenFor(m => m.PhysicalCountItems[i].RecCreatedBy)
                                        @Html.HiddenFor(m => m.PhysicalCountItems[i].RecCreatedDate)
                                    </td>
                                    <td>
                                        <div class="control-group row-fluid">
                                            <div class="span1">
                                                <label class="control-label serialNumber">@(i + 1)</label>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        @Html.TextAreaFor(m => m.PhysicalCountItems[i].ItemBarcode, new { @class = "auto-resize tableDbM itemBarcode disableOnLoad", @rows = 2 })
                                        @Html.ValidationMessageFor(m => m.PhysicalCountItems[i].ItemBarcode, null, new { @class = "required" })
                                    </td>
                                    <td class="quantity">
                                        <label class="n1 tableDbM" id='ItemDetailsEn_@i'>@Model.PhysicalCountItems[i].ItemDetailsEn</label>
                                    </td>

                                    <td>
                                        <label class="n1 tableDbM" id='ItemsInPackage_@i'>@Model.PhysicalCountItems[i].ItemsInPackage</label>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(m => m.PhysicalCountItems[i].NoOfPackagesInWarehouse, new { @class = "n1 tableDbM NoOfPackages disableOnLoad" })
                                        @Html.ValidationMessageFor(m => m.PhysicalCountItems[i].NoOfPackagesInWarehouse, null, new { @class = "required" })
                                    </td>
                                    <td>
                                        <label class="n1 tableDbM" id='TotalItemsInPackages_@i'>@Model.PhysicalCountItems[i].TotalItemsInPackages</label>
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(m => m.PhysicalCountItems[i].NoOfItemInWarehouse, new { @class = "n1 tableDbM NoOfItems disableOnLoad" })
                                        @Html.ValidationMessageFor(m => m.PhysicalCountItems[i].NoOfItemInWarehouse, null, new { @class = "required" })
                                    </td>
                                    <td>
                                        <label class="n1 tableDbM" id='TotalItemsCount_@i'>@Model.PhysicalCountItems[i].TotalItemsCount</label>
                                    </td>
                                    <td>
                                        <label class="n1 tableDbM" id='TotalItemsCountInWarehouse_@i'>@Model.PhysicalCountItems[i].TotalItemsCountInWarehouse</label>
                                    </td>
                                    <td class="delete">
                                        <i class="icon-photon minus deleteRow"></i>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {

                            <tr data-id=0>
                                <td style='display: none'>
                                    <input name='PhysicalCountItems.Index' type='hidden' value=0 />
                                    <input name='PhysicalCountItems[0].PcItemId' id='PhysicalCountItems_0__PcItemId' type='hidden' />
                                    <input name='PhysicalCountItems[0].PcId' id='PhysicalCountItems_0__PcId' type='hidden' />
                                    <input name='PhysicalCountItems[0].ItemVariationId' id='PhysicalCountItems_0__ItemVariationId' type='hidden' />
                                    <input name='PhysicalCountItems[0].WarehouseId' id='PhysicalCountItems_0__WarehouseId' type='hidden' />
                                </td>
                                <td>
                                    <div class="control-group row-fluid">
                                        <div class="span1">
                                            <label class="control-label serialNumber">1</label>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <textarea rows="2" class="auto-resize tableDbM itemBarcode disableOnLoad" name='PhysicalCountItems[0].ItemBarcode' id='PhysicalCountItems_0__ItemBarcode' data-val="true" data-val-required="The Item Barcode field is required."></textarea>
                                    <span class="field-validation-valid required" data-valmsg-for="PhysicalCountItems[0].ItemBarcode" data-valmsg-replace="true"></span>
                                </td>
                                <td class="quantity">
                                    <label class="n1 tableDbM" id='ItemDetailsEn_0'></label>
                                </td>
                                <td>
                                    <label class="n1 tableDbM" id='ItemsInPackage_0'></label>
                                </td>
                                <td>
                                    <input type="text" class="n1 tableDbM NoOfPackages disableOnLoad" name='PhysicalCountItems[0].NoOfPackagesInWarehouse' id='PhysicalCountItems_0__NoOfPackagesInWarehouse' data-val="true" data-val-number="The Number of Packages in Wharewhouse field must be a number." data-val-range="Please enter valid number" data-val-range-max="2147483647" data-val-range-min="1" data-val-required="The Number of Packages in Wharewhouse field is required." />
                                    <span class="field-validation-valid required" data-valmsg-for="PhysicalCountItems[0].NoOfPackagesInWarehouse" data-valmsg-replace="true"></span>
                                </td>
                                <td>
                                    <label class="n1 tableDbM" id='TotalItemsInPackages_0'></label>
                                </td>
                                <td>
                                    <input type="text" class="n1 tableDbM NoOfItems disableOnLoad" name='PhysicalCountItems[0].NoOfItemInWarehouse' id='PhysicalCountItems_0__NoOfItemInWarehouse' data-val="true" data-val-number="The Number of Items in Wharewhouse field must be a number." data-val-range="Please enter valid number" data-val-range-max="2147483647" data-val-range-min="1" data-val-required="The Number of Items in Wharewhouse field is required." />
                                    <span class="field-validation-valid required" data-valmsg-for="PhysicalCountItems[0].NoOfItemInWarehouse" data-valmsg-replace="true"></span>
                                </td>
                                <td>
                                    <label class="n1 tableDbM" id='TotalItemsCount_0'></label>
                                </td>
                                <td>
                                    <label class="n1 tableDbM" id='TotalItemsCountInWarehouse_0'></label>
                                </td>
                                <td class="delete">
                                    <i class="icon-photon minus deleteRow"></i>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="control-group row-fluid">
                <div class="span3 span-inset">
                    <button type="button" class="btn trAdder disableBtn">@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.Add</button>
                </div>

            </div>
        </div>
        <!--Basic Responsive Table end-->
        <!--Input Field begin-->
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="ExtraInformation">@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.Notes</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextAreaFor(model => model.PhysicalCount.NotesEn, new { @id = "NotesEn", @class = "" })
                </div>
            </div>
        </div>
        <!--Input Field end-->
        <!--Input Field begin-->
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="ExtraInformation">@EPMS.WebModels.Resources.Inventory.PC.PhysicalCount.NotesAr</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextAreaFor(model => model.PhysicalCount.NotesAr, new { @id = "NotesAr", @class = "" })
                </div>
            </div>
        </div>
        <!--Input Field end-->
        <div class="control-group row-fluid">
            <div class="span3 span-inset">
                <button type="submit" class="btn disableBtn" onclick="validateForm(event)">@EPMS.WebModels.Resources.RFI.RFI.Submit</button>
            </div>
        </div>
    </div>
}

<script src="~/RichTextEditor/ckeditor.js"></script>
<script>
    var dir = '@direction';
    var warehouseId;
    var isError;
    function ProductLoaded(rowId, data) {
        
        $.unblockUI();
        if (data == null) {
            clearTableRow(rowId);
            var m = $(".alert-error");
            m.children("span").text("No record found");
            m.show();
            isError = true;
        } else {
            if (isError) {
                var m = $(".alert-error");
                m.children("span").text("");
                m.hide();
            }
            $("#PhysicalCountItems_" + rowId + "__ItemVariationId").val(data.ItemVariationId);
            $("#PhysicalCountItems_" + rowId + "__ItemBarcode").val(data.ItemBarcode);
            var itemDetails;
            if (dir == "ltr") {
                itemDetails = data.ItemNameEn + " - " + data.SKUDescriptionEn;
            } else {
                itemDetails = data.ItemNameAr + " - " + data.SKUDescriptionAr;
            }
            $("#ItemDetailsEn_" + rowId).text(itemDetails);
            $("#ItemsInPackage_" + rowId).text(data.ItemsInPackage);
            $("#TotalItemsCountInWarehouse_" + rowId).text(data.TotalItemsCountInWarehouse);
            $("#ItemDetailsEn_" + rowId).val(itemDetails);
            $("#ItemsInPackage_" + rowId).val(data.ItemsInPackage);
            $("#TotalItemsCountInWarehouse_" + rowId).val(data.TotalItemsCountInWarehouse);
            $("#PhysicalCountItems_" + rowId + "__WarehouseId").val(warehouseId);
        }
    }
    function clearTableRow(rowId) {
        $("#PhysicalCountItems_" + rowId + "__NoOfPackagesInWarehouse").val("");
        $("#PhysicalCountItems_" + rowId + "__NoOfItemInWarehouse").val("");
        $("#PhysicalCountItems_" + rowId + "__ItemVariationId").val("");
        $("#ItemDetailsEn_" + rowId).text("");
        $("#ItemsInPackage_" + rowId).text("");
        $("#TotalItemsInPackages_" + rowId).text("");
        $("#TotalItemsCount_" + rowId).text("");
        $("#ItemDetailsEn_" + rowId).val("");
        $("#ItemsInPackage_" + rowId).val("");
        $("#TotalItemsInPackages_" + rowId).val("");
        $("#TotalItemsCount_" + rowId).val("");
        $("#TotalItemsCountInWarehouse_" + rowId).val("");
    }
    function LoadDataByBarcode(barcode, rowId) {
        var siteUrl = $("#siteURL").val();
        if (barcode != "") {
            $.blockUI({ message: '<h3><img src="../../Images/loading.gif" height=55px; width=55px; /> Fetching Data...</h2>' });
            $.ajax({
                url: siteUrl + "/Inventory/ItemVariation/GetItemVariationByBarcode",
                type: "GET",
                data: { id: barcode },
                dataType: "json",
                success: function (data) {
                    ProductLoaded(rowId, data);
                },
                error: function (textStatus, errorThrown) {
                    clearTableRow(rowId);
                    $.unblockUI();
                    var m = $(".alert-error");
                    m.children("span").text("No record found");
                    m.show();
                    isError = true;
                }
            });
        }
    }
    $(document).on('focusout', '.itemBarcode', function (ev) {
        var rowId = $(this).parent().parent().data("id");

        var barcode = $("#PhysicalCountItems_" + rowId + "__ItemBarcode").val();
        LoadDataByBarcode(barcode, rowId);
        return false;
    });
    $(document).on('focusout', '.NoOfPackages', function (ev) {
        var rowId = $(this).parent().parent().data("id");
        var noOfPkgs = parseInt($(this).val());
        var itemsInPkg = parseInt($("#ItemsInPackage_" + rowId).val());
        if (!isNaN(noOfPkgs) && !isNaN(itemsInPkg)) {
            $("#TotalItemsInPackages_" + rowId).val(itemsInPkg * noOfPkgs);
            $("#TotalItemsInPackages_" + rowId).text(itemsInPkg * noOfPkgs);
        } else {
            //$("#ItemsInPackage_" + rowId).val("");
            $("#TotalItemsInPackages_" + rowId).val("");
            $("#TotalItemsInPackages_" + rowId).text("");
            $("#PhysicalCountItems_" + rowId + "__NoOfPackagesInWarehouse").val("");
        }
        return true;
    });
    $(document).on('focusout', '.NoOfItems', function (ev) {
        var rowId = $(this).parent().parent().data("id");
        var noOfItems = parseInt($(this).val());
        var totalItems = parseInt($("#TotalItemsInPackages_" + rowId).val());
        if (!isNaN(noOfItems) && !isNaN(totalItems)) {
            $("#TotalItemsCount_" + rowId).val(noOfItems + totalItems);
            $("#TotalItemsCount_" + rowId).text(noOfItems + totalItems);
        } else {
            //$("#TotalItemsInPackages_" + rowId).val("");
            $("#TotalItemsCount_" + rowId).val("");
            $("#TotalItemsCount_" + rowId).text("");
            $("#PhysicalCountItems_" + rowId + "__NoOfItemInWarehouse").val("");
        }
        return true;
    });

    $(document).ready(function () {
        CKEDITOR.replace('NotesEn', {
            filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
        });
        CKEDITOR.replace('NotesAr', {
            filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
        });
        var pcId = parseInt('@Model.PhysicalCount.PCId');
        warehouseId = parseInt($("#warehouse").val());
        if ((warehouseId == 0 || isNaN(warehouseId)) && pcId == 0) {
            $('.' + 'disableOnLoad' + ':input').attr('readonly', true);
            $("button.disableBtn").attr("disabled", true);
        }
        if (pcId > 0) {
            $('.disableDdl').select2('disable');
        }

        $('.trAdder').on("click", function () {
            var index = $("#PCItemsTableBody").children("tr").length;
            var indexCell = "<td style='display: none'>" +
                                    "<input name='PhysicalCountItems.Index' type='hidden' value=" + index + " />" +
                                    "<input name='PhysicalCountItems[" + index + "].PcItemId' id='PhysicalCountItems_" + index + "__PcItemId' type='hidden' />" +
                                    "<input name='PhysicalCountItems[" + index + "].PcId' id='PhysicalCountItems_" + index + "__PcId' type='hidden' />" +
                                    "<input name='PhysicalCountItems[" + index + "].ItemVariationId' id='PhysicalCountItems_" + index + "__ItemVariationId' type='hidden' />" +
                                    "<input name='PhysicalCountItems[" + index + "].WarehouseId' id='PhysicalCountItems_" + index + "__WarehouseId' type='hidden' />" +
                                "</td>";
            var html = '<tr data-id=' + index + '>' +
                               indexCell +
                                '<td>' +
                                    '<div class="control-group row-fluid">' +
                                        '<div class="span1">' +
                                        '<label class="control-label serialNumber">' + index + '</label>' +
                                        '</div>' +
                                    '</div>' +
                                '</td>' +
                                '<td>' +
                                    '<textarea rows="2" class="auto-resize tableDbM itemBarcode disableOnLoad" name="PhysicalCountItems[' + index + '].ItemBarcode" id="PhysicalCountItems_' + index + '__ItemBarcode" data-val="true" data-val-required="The Item Barcode field is required."></textarea>' +
                                    '<span class="field-validation-valid required" data-valmsg-for="PhysicalCountItems[' + index + '].ItemBarcode" data-valmsg-replace="true"></span>' +
                                '</td>' +
                                '<td class="quantity">' +
                                    '<label class="n1 tableDbM" id="ItemDetailsEn_' + index + '"></label>' +
                                '</td>' +
                                '<td>' +
                                    '<label class="n1 tableDbM" id="ItemsInPackage_' + index + '"></label>' +
                                '</td>' +
                                '<td>' +
                                    '<input type="text" class="n1 tableDbM NoOfPackages disableOnLoad" name="PhysicalCountItems[' + index + '].NoOfPackagesInWarehouse" id="PhysicalCountItems_' + index + '__NoOfPackagesInWarehouse" data-val="true" data-val-number="The Number of Packages in Wharewhouse field must be a number." data-val-range="Please enter valid number" data-val-range-max="2147483647" data-val-range-min="1" data-val-required="The Number of Packages in Wharewhouse field is required." />' +
                                    '<span class="field-validation-valid required" data-valmsg-for="PhysicalCountItems[' + index + '].NoOfPackagesInWarehouse" data-valmsg-replace="true"></span>' +
                                '</td>' +
                                '<td>' +
                                    '<label class="n1 tableDbM" id="TotalItemsInPackages_' + index + '"></label>' +
                                '</td>' +
                                '<td>' +
                                    '<input type="text" class="n1 tableDbM NoOfItems disableOnLoad" name="PhysicalCountItems[' + index + '].NoOfItemInWarehouse" id="PhysicalCountItems_' + index + '__NoOfItemInWarehouse" data-val="true" data-val-number="The Number of Items in Wharewhouse field must be a number." data-val-range="Please enter valid number" data-val-range-max="2147483647" data-val-range-min="1" data-val-required="The Number of Items in Wharewhouse field is required." />' +
                                    '<span class="field-validation-valid required" data-valmsg-for="PhysicalCountItems[' + index + '].NoOfItemInWarehouse" data-valmsg-replace="true"></span>' +
                                '</td>' +
                                '<td>' +
                                    '<label class="n1 tableDbM" id="TotalItemsCount_' + index + '"></label>' +
                                '</td>' +
                                '<td>' +
                                    '<label class="n1 tableDbM" id="TotalItemsCountInWarehouse_' + index + '"></label>' +
                                '</td>' +
                                '<td class="delete">' +
                                    '<i class="icon-photon minus deleteRow"></i>' +
                                '</td>' +
                            '</tr>';

            $('.qouteAdd').append(html);
            //remove validation
            $("form").removeData("validator").removeData("unobtrusiveValidation");

            //Parse the form again to apply new validations
            $.validator.unobtrusive.parse("form");
            activateSerial();
            reActivateDelete();
        });
        reActivateDelete();
        //reactivateCount();
        function reActivateDelete() {
            $('.deleteRow').on("click", function () {
                var count = $('.qouteAdd tr').length;
                if (count > 1) {
                    $(this).parent().parent().remove();
                }
                activateSerial();
            });
        }
        function activateSerial() {
            var count = $('.qouteAdd tr').length;
            var add = 0;
            $('.qouteAdd tr').each(function () {
                add++;
                $(this).find(".serialNumber").text(add);
            });
        }

        $("#warehouse").on("change", function () {
            warehouseId = parseInt($(this).val());
            if (warehouseId > 0) {
                $('.' + 'disableOnLoad' + ':input').attr('readonly', false);
                $("button.disableBtn").attr("disabled", false);
            } else {
                $('.' + 'disableOnLoad' + ':input').attr('readonly', true);
                $("button.disableBtn").attr("disabled", true);
            }

    });
    });
    function validateForm(event) {
        if (warehouseId == 0 || warehouseId == null || isNaN(warehouseId)) {
            $("#warehouseValidationError").text("Please select warehouse");
            event.preventDefault();
            return false;
        } else {
            $("#warehouseValidationError").text("");
            return true;
        }
    }
</script>