@using EPMS.Models.Common
@model EPMS.WebModels.ViewModels.PurchaseOrder.PurchaseOrderListViewModel

@{
    ViewBag.Title = EPMS.WebModels.Resources.Inventory.PO.PO.PageTitleIndex;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var direction = EPMS.WebModels.Resources.Shared.Common.TextDirection;
    string[] userPermissionsSet = (string[])HttpContext.Current.Session["UserPermissionSet"];
}

<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li class="current">
            <a href="javascript:;">@ViewBag.Title</a>
        </li>
    </ul>
</div>
<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@ViewBag.Title</small></h2>
    @if (userPermissionsSet.Contains("POCreate"))
    {
        <h3><small><a href="~/Inventory/PurchaseOrder/Create">@EPMS.WebModels.Resources.Inventory.PO.PO.CreateNew</a></small></h3>
    }
</header>
<!--Notifications begin-->
@Html.Partial("_Alert")
<!--Notifications end-->
<form class="form-horizontal">
    @Html.HiddenFor(model => model.SearchRequest.SearchString, new { id = "searchString" })
    <div class="container-fluid">
        <!--Sortable Responsive Media Table begin-->
        <div class="row-fluid">
            <div class="span12">
                <table class="table table-striped table-responsive" id="ItemReleaseTable">
                    <thead class="cf sorthead">
                        @if ((UserRole)Convert.ToInt32(Session["RoleKey"].ToString()) == UserRole.InventoryManager ||
                            (UserRole)Convert.ToInt32(Session["RoleKey"].ToString()) == UserRole.Admin)
                        {
                            <tr>
                                <th>@EPMS.WebModels.Resources.Inventory.PO.PO.Serial</th>
                                <th>@EPMS.WebModels.Resources.Inventory.PO.PO.PurchaseOrderNumber</th>
                                <th>@EPMS.WebModels.Resources.Inventory.PO.PO.Requester</th>
                                <th>@EPMS.WebModels.Resources.Inventory.PO.PO.Date</th>
                                <th>@EPMS.WebModels.Resources.Inventory.PO.PO.Status</th>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <th>@EPMS.WebModels.Resources.Inventory.PO.PO.Serial</th>
                                <th>@EPMS.WebModels.Resources.Inventory.PO.PO.PurchaseOrderNumber</th>
                                <th>@EPMS.WebModels.Resources.Inventory.PO.PO.InventoryManager</th>
                                <th>@EPMS.WebModels.Resources.Inventory.PO.PO.Date</th>
                                <th>@EPMS.WebModels.Resources.Inventory.PO.PO.Status</th>
                            </tr>
                        }
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</form>

<script>
    var oTable;
    var dir = '@direction';
    $(document).ready(function () {
        var siteUrl = $('#siteURL').val();
        if ('@((UserRole)Convert.ToInt32(Session["RoleKey"].ToString()))' == '@(UserRole.InventoryManager)' ||
            '@((UserRole)Convert.ToInt32(Session["RoleKey"].ToString()))' == '@(UserRole.Admin)') {
            oTable = $('#ItemReleaseTable').dataTable({
                "sPaginationType": "bootstrap",
                "bProcessing": true,
                "bServerSide": true,
                "aoColumns": [
                    {
                        "aTargets": [0],
                        "sDefaultContent": "",
                        "bVisible": true,
                        "bSortable": false
                    },
                    {
                        "aTargets": [1],
                        "sDefaultContent": "No Data",
                        "mRender": function (data, type, full) {
                            var element;
                            var val;
                            var irfId;
                            val = full["FormNumber"];
                            irfId = full["PurchaseOrderId"];
                            element = '<a href="History/' + irfId + '">' + val + '</a>';
                            return element;
                        }
                    },
                    {
                        "aTargets": [2],
                        "sDefaultContent": "No Data",
                        "mRender": function (data, type, full) {
                            return full["RequesterName"];
                        }
                    },
                    {
                        "aTargets": [3],
                        "sDefaultContent": "No Data",
                        "mRender": function (data, type, full) {
                            return full["RecCreatedDateString"];
                        }
                    },
                    {
                        "aTargets": [4],
                        "sDefaultContent": "No Data",
                        "mRender": function (data, type, full) {
                            var val = "";
                            if (full["Status"] == 3) {
                                val = '@EPMS.WebModels.Resources.CMS.Order.Pending';
                            }
                            else if (full["Status"] == 1) {
                                val = '@EPMS.WebModels.Resources.CMS.Order.Accepted';
                            }
                            else if (full["Status"] == 2) {
                                val = '@EPMS.WebModels.Resources.CMS.Order.Rejected';
                            }
                            return val;
                        }
                    }
                ],
                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "search", "value": $('input').val() });
                },
                "sAjaxSource": siteUrl + "/Inventory/PurchaseOrder/Index",
                "sServerMethod": "POST",
                "oLanguage": {
                    "sProcessing": "Fetching record(s)",
                    //"sProcessing": "<img alt=\"Unread\" id=\"ajaxLoadImg\" src=\"/Images\/Gallery\/ajax_loader_red_512.gif\" />",
                    "sInfoEmpty": "No matching record(s) found",
                    "sEmptyTable": "No record(s) found",
                },
                "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                    var oSettings = oTable.fnSettings();
                    $("td:first", nRow).html(oSettings._iDisplayStart + iDisplayIndex + 1);
                    return nRow;
                },
            });
        } else {
            oTable = $('#ItemReleaseTable').dataTable({
                "sPaginationType": "bootstrap",
                "bProcessing": true,
                "bServerSide": true,
                "aoColumns": [
                    {
                        "aTargets": [0],
                        "sDefaultContent": "",
                        "bVisible": true,
                        "bSortable": false
                    },
                    {
                        "aTargets": [1],
                        "sDefaultContent": "No Data",
                        "mRender": function (data, type, full) {
                            var element;
                            var val;
                            var irfId;
                            val = full["FormNumber"];
                            irfId = full["PurchaseOrderId"];
                            element = '<a href="Details/' + irfId + '">' + val + '</a>';
                            return element;
                        }
                    },
                    {
                        "aTargets": [2],
                        "sDefaultContent": "No Data",
                        "mRender": function (data, type, full) {
                            return full["ManagerName"];
                        }
                    },
                    {
                        "aTargets": [3],
                        "sDefaultContent": "No Data",
                        "mRender": function (data, type, full) {
                            return full["RecCreatedDateString"];
                        }
                    },
                    {
                        "aTargets": [4],
                        "sDefaultContent": "No Data",
                        "mRender": function (data, type, full) {
                            var val = "";
                            if (full["Status"] == 3) {
                                val = '@EPMS.WebModels.Resources.CMS.Order.Pending';
                            }
                            else if (full["Status"] == 1) {
                                val = '@EPMS.WebModels.Resources.CMS.Order.Accepted';
                            }
                            else if (full["Status"] == 2) {
                                val = '@EPMS.WebModels.Resources.CMS.Order.Rejected';
                            }
                            return val;
                        }
                    }
                ],
                "fnServerParams": function (aoData) {
                    aoData.push({ "name": "search", "value": $('input').val() });
                },
                "sAjaxSource": siteUrl + "/Inventory/PurchaseOrder/Index",
                "sServerMethod": "POST",
                "oLanguage": {
                    "sProcessing": "Fetching record(s)",
                    //"sProcessing": "<img alt=\"Unread\" id=\"ajaxLoadImg\" src=\"/Images\/Gallery\/ajax_loader_red_512.gif\" />",
                    "sInfoEmpty": "No matching record(s) found",
                    "sEmptyTable": "No record(s) found",
                },
                "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                    var oSettings = oTable.fnSettings();
                    $("td:first", nRow).html(oSettings._iDisplayStart + iDisplayIndex + 1);
                    return nRow;
                },
            });
        }
        oTable.on('order.dt search.dt', function () {
            t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                cell.innerHTML = i + 1;
            });
        }).fnDraw();
        $(".dataTables_length select").select2({
            dropdownCssClass: 'noSearch'
        });

        //$(".dataTables_processing").hide();
        //$(".dataTables_length label").text("");

        $(".dataTables_filter input").unbind()
            .bind("input", function (e) {
                // Bind our desired behavior
                if (this.value.length >= 3 || e.keyCode == 13) {
                    $("#searchString").val(this.value);
                    oTable.fnDraw();
                }
                if (this.value == "") {
                    $("#searchString").val(this.value);
                    oTable.fnDraw();
                }
                return;
            });
    });
</script>