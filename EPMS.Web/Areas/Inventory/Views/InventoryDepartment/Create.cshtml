@model EPMS.WebModels.ViewModels.InventoryDepartment.InventoryDepartmentViewModel

@{
    ViewBag.Title = EPMS.WebModels.Resources.Inventory.InventoryDepartment.PGTitleCreate;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var direction = EPMS.WebModels.Resources.Shared.Common.TextDirection;
    string[] userPermissionsSet = (string[])HttpContext.Current.Session["UserPermissionSet"];
    long deptId = 0;
    if (ViewBag.InventoryDepartmentId != null)
    {
        deptId = Convert.ToInt64(ViewBag.InventoryDepartmentId);
    }
}
<div class="main-content withPanel">
    <div class="panel">
        <div class="panel-content filler">
            <div class="panel-logo"></div>
            <div class="panel-header">
                <h1><small>@EPMS.WebModels.Resources.Inventory.InventoryDepartment.InventoryDepartmentsJSTreeTitle</small></h1>
                <button type="submit" class="btn btn-mini" onclick="AddNewNode();"><i class="icon-photon move_alt2"></i>@EPMS.WebModels.Resources.Shared.Common.AddNewNode</button>
            </div>
            <div class="panel-search container-fluid">
                <form class="form-horizontal" action="javascript:;">
                    <input id="panelSearch" placeholder="Search" type="text" name="panelSearch">
                    <button class="btn btn-search"></button>
                </form>
            </div>

            <div class="sidebarMenuHolder">
                <div class="JStree">
                    <div class="Jstree_shadow_top"></div>
                    <div id="jstree"></div>
                    <div class="Jstree_shadow_bottom"></div>
                </div>
            </div>
        </div>
        <div class="panel-slider">
            <div class="panel-slider-center">
                <div class="panel-slider-arrow"></div>
            </div>
        </div>
    </div>

    <div class="breadcrumb-container">
        <ul class="xbreadcrumbs">
            <li>
                <a href="~/Dashboard/Index">
                    <i class="icon-photon home"></i>
                </a>
            </li>
            <li>
                <a href="~/Inventory/InventoryDepartment/Index">
                    @EPMS.WebModels.Resources.Inventory.InventoryDepartment.InventoryDepartments
                </a>
            </li>
            <li class="current">
                <a href="javascript:;">
                    @EPMS.WebModels.Resources.Inventory.InventoryDepartment.BCTitleCreate
                </a>
            </li>
        </ul>
    </div>
    
    <header>
        <i class="icon-big-notepad"></i>
        <h2><small>@EPMS.WebModels.Resources.Inventory.InventoryDepartment.BCTitleCreate</small></h2>
    </header>

    <form class="form-horizontal" id="InventoryDepartmentForm">
        @Html.HiddenFor(model => model.InventoryDepartment.DepartmentId, new { @id = "DepartmentId" })
        @Html.HiddenFor(model => model.InventoryDepartment.ParentId, new { @id = "ParentId" })
        @Html.HiddenFor(model => model.RequestFrom, new { @id = "RequestFrom" })
        <div class="container-fluid">
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="nameEn">@EPMS.WebModels.Resources.Inventory.InventoryDepartment.DepartmentName</label>
                </div>
                <div class="span9">
                    <div class="controls nameEnRequired">
                        @Html.TextBoxFor(model => model.InventoryDepartment.DepartmentNameEn, new { @id = "nameEn", @class = "toBeDiabled" })
                        <label id="lblNameEn" class="required"></label>
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="nameAr">@EPMS.WebModels.Resources.Inventory.InventoryDepartment.DepartmentNameArabic</label>
                </div>
                <div class="span9">
                    <div class="controls nameArRequired">
                        @Html.TextBoxFor(model => model.InventoryDepartment.DepartmentNameAr, new { @id = "nameAr", @class = "toBeDiabled" })
                        <label id="lblNameAr" class="required"></label>
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="color">@EPMS.WebModels.Resources.Inventory.InventoryDepartment.DepartmentColor</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.InventoryDepartment.DepartmentColor, new { @id = "color", @class = "toBeDiabled", Value = "#FFF8BE" })
                        <div id="colorpicker"></div>
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid" id="CKEditorDescp">
                <div class="span3">
                    <label class="control-label" for="description">@EPMS.WebModels.Resources.Inventory.InventoryDepartment.Description </label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextAreaFor(model => model.InventoryDepartment.DepartmentDesc, new { @id = "description", @class = "" })
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid" id="Descp">
                <div class="span3">
                    <label class="control-label" for="descpEn">@EPMS.WebModels.Resources.Inventory.InventoryDepartment.Description </label>
                </div>
                <div class="span9">
                    <div class="controls">
                        <input type="text" id="descpEn" class="toBeDiabled" />
                    </div>
                </div>
            </div>
            <div id="Edit" style="display: none">
                <div class="control-group row-fluid">
                    <div class="span3 span-inset">
                        <button type="button" class="btn" id="edit">@EPMS.WebModels.Resources.Inventory.InventoryDepartment.BtnEdit</button>
                    </div>
                </div>
            </div>
            <div id="SaveNewNode" style="display: none">
                <div class="control-group row-fluid">
                    <div class="span3 span-inset">
                        <button type="button" class="btn disableBtn" onclick="SaveNewNode(event);">@EPMS.WebModels.Resources.Inventory.InventoryDepartment.BtnCreate</button>
                    </div>
                </div>
            </div>
            <div id="UpdateNode" style="display: none">
                <div class="control-group row-fluid">
                    <div class="span3 span-inset">
                        <button type="button" class="btn disableBtn" onclick="SaveNewNode(event);">@EPMS.WebModels.Resources.Inventory.InventoryDepartment.BtnUpdate</button>
                    </div>
                </div>
            </div>
            <div id="DeleteNode" style="display: none">
                <div class="control-group row-fluid">
                    <div class="span3 span-inset">
                        <button type="button" class="btn disableBtn" onclick="DeleteNode(event);">@EPMS.Web.Resources.Inventory.InventoryDepartment.BtnDelete</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<script src="~/RTE/ckeditor.js"></script>
<script type="text/javascript">
    var dir = '@direction';
    var myTree;
    var inventoryDepartments = '@Html.Raw(Json.Encode(Model.InventoryDepartments))';
    var parsed = JSON.parse(inventoryDepartments);
    $().ready(function () {
        $("#layoutMainContent").removeClass("main-content");
        $('.' + 'toBeDiabled' + ':input').attr('disabled', true);
        $("#colorpicker").addClass('disableList');
        $("#CKEditorDescp").hide();
        $("#Descp").show();
        $('#colorpicker').farbtastic('#color');
        var treeInitialData;
        if (dir == "ltr") {
            treeInitialData = [
                {
                    "data": {
                        "title": "Departments",
                        "attr": { "href": "#", "onclick": "jsTreeClick(event)" }
                    },
                    "attr": { "id": "parentNode" },
                }
            ];
        } else {
            treeInitialData = [
                {
                    "data": {
                        "title": "القسم",
                        "attr": { "href": "#", "onclick": "jsTreeClick(event)" }
                    },
                    "attr": { "id": "parentNode" },
                }
            ];
        }
        myTree = $("#jstree").jstree({
            "json_data": {
                "data": treeInitialData
            },
            "plugins": ["themes", "json_data", "ui"],
            "ui": {
                "initially_select": ["parentNode"]
            },
            "core": {
                "initially_open": ["parentNode"]
            }
        });
        var position = 'last';
        var parentNode;
        var mainParent;
        var newNode;
        setTimeout(function () {
            $.each(parsed, function (key, value) {
                if (value.ParentId != null) {
                    $('ul li').each(function () {
                        if ($(this).attr('id') == value.ParentId) {
                            parentNode = this;
                        }
                    });
                    if (dir == "ltr") {
                        newNode = {
                            state: "closed",
                            data: {
                                "title": value.DepartmentNameEn,
                                "attr": { "href": "#", "onclick": "jsTreeClick(event)" }
                            },
                            "attr": { "id": value.DepartmentId },
                        };
                    } else {
                        newNode = {
                            state: "closed",
                            data: {
                                "title": value.DepartmentNameAr,
                                "attr": { "href": "#", "onclick": "jsTreeClick(event)" }
                            },
                            "attr": { "id": value.DepartmentId },
                        };
                    }
                    $('#jstree').jstree("create_node", parentNode, position, newNode, false, false);
                } else {
                    mainParent = $('#jstree').jstree('get_selected');
                    if (dir == "ltr") {
                        newNode = {
                            state: "closed",
                            data: {
                                "title": value.DepartmentNameEn,
                                "attr": { "href": "#", "onclick": "jsTreeClick(event)" }
                            },
                            "attr": { "id": value.DepartmentId },
                        };
                    } else {
                        newNode = {
                            state: "closed",
                            data: {
                                "title": value.DepartmentNameAr,
                                "attr": { "href": "#", "onclick": "jsTreeClick(event)" }
                            },
                            "attr": { "id": value.DepartmentId },
                        };
                    }
                    $('#jstree').jstree("create_node", mainParent, position, newNode, false, false);
                }
            });
            $('#jstree').jstree('open_node', '#parentNode');
        }, 0);
        var dpId = parseInt('@deptId');
        setTimeout(function () {
            if (dpId != 0) {
                $('#jstree').jstree('open_node', '#' + dpId);
                $('#jstree').jstree('deselect_all');
                $('#jstree').jstree('select_node', '#' + dpId);
                $.each(parsed, function (key, value) {
                    if (value.DepartmentId == dpId) {
                        for (name in CKEDITOR.instances) {
                            CKEDITOR.instances[name].destroy();
                        }
                        $("#DepartmentId").val(value.DepartmentId);
                        $("#nameEn").val(value.DepartmentNameEn);
                        $("#nameAr").val(value.DepartmentNameAr);
                        $("#color").val(value.DepartmentColor);
                        $("#description").val(value.DepartmentDesc);
                        $("#descpEn").val(value.DepartmentDesc);
                        $("#ParentId").val(value.ParentId);
                        AddEdit();
                        var descpE = $("#descpEn").val();
                        var regex = /(<([^>]+)>)/ig;
                        var result = descpE.replace(regex, "");
                        $("#descpEn").val(result);
                        $('.panel, .main-content').toggleClass('retracted');
                    }
                });
            }
        }, 0);
    });
    $("#edit").click(function (event) {
        $('.' + 'toBeDiabled' + ':input').attr('disabled', false);
        $("#CKEditorDescp").show();
        $("#Descp").hide();
        $("#SaveNewNode").hide();
        $("#UpdateNode").show();
        $("#DeleteNode").show();
        $("#Edit").hide();
        $("#colorpicker").removeClass('disableList');
        CKEDITOR.replace('description', {
            filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
        });
    });
    function AddEdit() {
        var isDetail;
        var val = '@userPermissionsSet.Contains("InventoryDepartmentCreate")';
        if (val == 'True') {
            isDetail = false;
        } else {
            isDetail = true;
        }
        if (isDetail == true) {
            $("#SaveNewNode").hide();
            $("#UpdateNode").hide();
            $("#DeleteNode").hide();
            $("#Edit").hide;
        } else {
            $("#SaveNewNode").hide();
            $("#UpdateNode").hide();
            $("#DeleteNode").hide();
            $("#Edit").show();
        }
    }
    function jsTreeClick(event) {
        var temp = $(event.target).text();
        var text = temp.substring(1, temp.length);
        if (text == "Departments" || text == "") {
            for (name in CKEDITOR.instances) {
                CKEDITOR.instances[name].destroy();
            }
            $("#DepartmentId").val(0);
            $("#nameEn").val("");
            $("#nameAr").val("");
            $("#color").val("#FFF8BE");
            $("#description").val("");
            $("#descpEn").val("");
            $("#ParentId").val(0);
            CKEDITOR.replace('description', {
                filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
            });
            $("#SaveNewNode").hide();
            $("#UpdateNode").hide();
            $("#DeleteNode").hide();
            $("#Edit").hide();
            //$("#InventoryDepartmentForm").valid();
            return true;
        }
        $.each(parsed, function (key, value) {
            if (value.DepartmentNameEn == text || value.DepartmentNameAr == text) {
                for (name in CKEDITOR.instances) {
                    CKEDITOR.instances[name].destroy();
                }
                $("#DepartmentId").val(value.DepartmentId);
                $("#nameEn").val(value.DepartmentNameEn);
                $("#nameAr").val(value.DepartmentNameAr);
                $("#color").val(value.DepartmentColor);
                $("#description").val(value.DepartmentDesc);
                $("#descpEn").val(value.DepartmentDesc);
                $("#ParentId").val(value.ParentId);
            }
        });
        AddEdit();
        var descpE = $("#descpEn").val();
        var regex = /(<([^>]+)>)/ig;
        var result = descpE.replace(regex, "");
        $("#descpEn").val(result);
        $("#CKEditorDescp").hide();
        $("#Descp").show();
        $('.' + 'toBeDiabled' + ':input').attr('disabled', true);
        $("#colorpicker").addClass('disableList');
        //$("#InventoryDepartmentForm").valid();
        return true;
    }
    function AddNewNode() {
        //var parent = $('#jstree').jstree('get_selected');
        //if (parent.hasClass("jstree-leaf")) {
        //    alert("This is Content Node. Please Select a Parent Node");
        //    return false;
        //}
        for (name in CKEDITOR.instances) {
            CKEDITOR.instances[name].destroy();
        }
        $('.' + 'toBeDiabled' + ':input').attr('disabled', false);
        $("#colorpicker").removeClass('disableList');
        $("#nameEn").val("");
        $("#nameAr").val("");
        $("#color").val("#FFF8BE");
        $("#description").val("");
        $("#ParentId").val(parseInt($("#DepartmentId").val()));
        $("#DepartmentId").val(0);
        $("#CKEditorDescp").show();
        $("#Descp").hide();
        CKEDITOR.replace('description', {
            filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
        });
        $("#UpdateNode").hide();
        $("#DeleteNode").hide();
        $("#SaveNewNode").show();
        $("#Edit").hide();
        return true;
    }
    function SaveNewNode(event) {
        //var validStatus = $("#InventoryDepartmentForm").valid();
        //if (validStatus) {
        //    $("button.disableBtn").attr("disabled", true);
            
        //} else {
        //    return false;
        //}
        $("button.disableBtn").attr("disabled", true);
        if ($("#nameEn").val() == "" || $("#nameEn").val() == 0) {
            $("#lblNameEn").text("Department Name is required");
            $("#nameEn").css("background-color", "pink");
            $("button.disableBtn").attr("disabled", false);
            return false;
        } else {
            $("#lblNameEn").text("");
        }
        if ($("#nameAr").val() == "" || $("#nameAr").val() == 0) {
            $("#lblNameAr").text("Department Name Arabic is required");
            $("#nameAr").css("background-color", "pink");
            $("button.disableBtn").attr("disabled", false);
            return false;
        } else {
            $("#lblNameAr").text("");
        }
        var parent = parseInt($('#ParentId').val());
        if (isNaN(parent)) {
            parent = 0;
        }
        var nodeId = parseInt($("#DepartmentId").val());
        var titleEn = $("#nameEn").val();
        var titleAr = $("#nameAr").val();
        var color = $("#color").val();
        var requestFrom = $("#RequestFrom").val();
        var description = CKEDITOR.instances['description'].getData();
        var dataToPost = {
            parent: parent,
            nodeId: nodeId,
            nameEn: titleEn,
            nameAr: titleAr,
            color: color,
            description: description,
            requestFrom: requestFrom,
        };
        var postUrl = $("#siteURL").val() + "/Inventory/InventoryDepartment/SaveInventoryDepartment";
        $.ajax({
            type: "POST",
            datatype: "json",
            url: postUrl,
            data: dataToPost,
            success: function (data) {
                // Set values
                successCreatingNode(data);
            },
            error: callError
        });
        $("button.disableBtn").attr("disabled", false);
    }
    function successCreatingNode(data) {
        if (data != null) {
            if (data == "Department Already Exists") {
                alert(data);
            }
            var href;
            if (data == "Departments Saved") {
                href = window.location.origin + $("#siteURL").val() + "/Inventory/InventoryDepartment/Index/1";
                window.location.href = href;
            }
            if (data == "Section Saved") {
                href = window.location.origin + $("#siteURL").val() + "/Inventory/InventoryDepartment/Index/2";
                window.location.href = href;
            }
            if (data == "Updated") {
                href = window.location.origin + $("#siteURL").val() + "/Inventory/InventoryDepartment/Index/3";
                window.location.href = href;
            }
        }
        else {
            alert("Problem in Saving Changes.");
        }
    }
    function DeleteNode(event) {
        if (confirm('Are you sure you want to Delete')) {
            var nodeId = parseInt($("#DepartmentId").val());
            if (nodeId == 0 || nodeId == "" || isNaN(nodeId)) {
                return;
            } else {
                var postUrl = $("#siteURL").val() + "/Inventory/InventoryDepartment/DeleteInventoryDepartment";
                $.ajax({
                    type: "POST",
                    datatype: "json",
                    url: postUrl,
                    data: {
                        id: nodeId
                    },
                    success: function (data) {
                        // Set values
                        successDeletingDepartment(data);
                    },
                    error: callError
                });
            }
        } else {
        }
    }
    function successDeletingDepartment(data) {
        var href;
        if (data == "Success") {
            href = window.location.origin + $("#siteURL").val() + "/Inventory/InventoryDepartment/Index/4";
            window.location.href = href;
        } else if (data == "Associated") {
            href = window.location.origin + $("#siteURL").val() + "/Inventory/InventoryDepartment/Index/5";
            window.location.href = href;
        } else if (data == "Error") {
            href = window.location.origin + $("#siteURL").val() + "/Inventory/InventoryDepartment/Index/6";
            window.location.href = href;
        }
    }
    function callError() {
        alert("Problem in Saving Changes.");
    }
</script>
