@model EPMS.Web.ViewModels.ItemVariation.ItemVariationViewModel

@{
    ViewBag.Title = Model.ItemVariation.ItemVariationId > 0 ? EPMS.Web.Resources.Inventory.ItemVariation.UpdatePageTitle : EPMS.Web.Resources.Inventory.ItemVariation.CreatePageTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.MessageVM = TempData["message"];
    var direction = EPMS.Web.Resources.Shared.Common.TextDirection;
}

<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/Inventory/InventoryItem/Index">
                @EPMS.Web.Resources.Inventory.Vendor.Label
            </a>
        </li>
        <li>
            <a href="~/Inventory/InventoryItem/Create">
                @EPMS.Web.Resources.Inventory.Vendor.CreatePageTitle
            </a>
        </li>
        <li class="current">
            <a href="">
                @ViewBag.Title
            </a>
        </li>
    </ul>
</div>

<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@ViewBag.Title</small></h2>
</header>

<!--Notifications begin-->
@Html.Partial("_Alert")
<!--Notifications end-->
@using (Html.BeginForm("Create", "ItemVariation", FormMethod.Post, new { @id = "VariationForm", @class = "form-horizontal", role = "form" }))
{
    <div class="container-fluid">

        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.ItemVariation.InventoryItemId)
        @Html.HiddenFor(m => m.ItemVariation.ItemVariationId)
        @Html.HiddenFor(m => m.ItemVariation.RecCreatedBy)
        @Html.HiddenFor(m => m.ItemVariation.RecCreatedDt)
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.Barcode</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.ItemBarcode, new { @dir = "ltr", id = "ItemBarcode", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.ItemBarcode)
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.SKUCode</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.SKUCode, new { @dir = "ltr", id = "SKUCode", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.SKUCode)
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.UnitPrice</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.UnitPrice, new { @dir = "ltr", id = "UnitPrice", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.UnitPrice, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.PackagePrice</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.PackagePrice, new { @dir = "ltr", id = "PackagePrice", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.PackagePrice, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.AddToAveragePrice</label>
            </div>
            <div class="span9 span-inset">
                <div data-on-label="YES" data-off-label="NO" class="switch switch-small" data-on="success" data-off="danger">
                    @Html.CheckBoxFor(model => model.ItemVariation.PriceCalculation, new { @id = "PriceCalculation" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.DescriptionEn</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.DescriptionEn, new { @dir = "ltr", id = "DescriptionEn", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.DescriptionEn)
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.DescriptionAr</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.DescriptionAr, new { @dir = "ltr", id = "DescriptionAr", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.DescriptionAr)
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.SKUDescEn</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.SKUDescriptionEn, new { @dir = "ltr", id = "SKUDescriptionEn", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.SKUDescriptionEn)
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.SKUDescAr</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.SKUDescriptionAr, new { @dir = "ltr", id = "SKUDescriptionAr", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.SKUDescriptionAr)
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.QtyInHand</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.QuantityInHand, new { @dir = "ltr", id = "QuantityInHand", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.QuantityInHand, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.QtySold</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.QuantitySold, new { @dir = "ltr", id = "QuantitySold", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.QuantitySold, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.ReorderPoint</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.ReorderPoint, new { @dir = "ltr", id = "ReorderPoint", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.ReorderPoint, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.QtyUsedInManufacturing</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.QuantityInManufacturing, new { @dir = "ltr", id = "QuantityInManufacturing", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.QuantityInManufacturing, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.Weight</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.Weight, new { @dir = "ltr", id = "Weight", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.Weight, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.Height</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.Height, new { @dir = "ltr", id = "Height", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.Height, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.Width</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.Width, new { @dir = "ltr", id = "Width", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.Width, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.Depth</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.Depth, new { @dir = "ltr", id = "Depth", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.Depth, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.NotesEn</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.NotesEn, new { @dir = "ltr", id = "NotesEn", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.NotesEn, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.NotesAr</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.NotesAr, new { @dir = "ltr", id = "NotesAr", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.NotesAr, "", new { @class = "required" })
                </div>
            </div>
        </div><div class="control-group row-fluid">
                  <div class="span3">
                      <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.Weight</label>
                  </div>
                  <div class="span9">
                      <div class="controls">
                          @Html.TextBoxFor(m => m.ItemVariation.Weight, new { @dir = "ltr", id = "Weight", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                          @Html.ValidationMessageFor(m => m.ItemVariation.Weight, "", new { @class = "required" })
                      </div>
                  </div>
              </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.ItemVariation.AdditionalInfoAr</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.ItemVariation.AdditionalInfoAr, new { @dir = "ltr", id = "AdditionalInfoAr", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.ItemVariation.AdditionalInfoAr, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="alert alert-info alert-block">
            <i class="icon-alert icon-alert-info"></i>
            <strong>Size</strong><a href="#sizeModule" data-toggle="modal">Add New Size</a>
        </div>
        <!--Sortable Responsive Table begin-->

        <div class="row-fluid">
            <div class="span12">
                <table class="table table-striped table-responsive" id="tableSortableVariationsSize">
                    <thead>
                        <tr>
                            <th>Size</th>
                            <th>Delete</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ItemVariation.Sizes.ToList())
                        {
                            <tr class="gradeX">
                                @if (direction == "ltr")
                                {
                                    <td>@item.SizeNameEn</td>
                                }
                                else
                                {
                                    <td>@item.SizeNameAr</td>
                                }
                                <td><a href="#">Delete</a></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <!--Sortable Responsive Table end-->
        @*<div class="alert alert-info alert-block">
                <i class="icon-alert icon-alert-info"></i>
                <strong>Warehouse</strong><a href="#wherehouseModule" data-toggle="modal">Add Warehouse</a>
            </div>*@

        <!--Sortable Responsive Table begin-->
        @*<div class="row-fluid">
                <div class="span12">
                    <table class="table table-striped table-responsive" id="tableSortableVariationsWherehouse">
                        <thead>
                            <tr>
                                <th> Serial</th>
                                <th>Warehouse Number</th>
                                <th>Quantity in Warehouse</th>
                                <th>Place in Warehouse</th>
                                <th>Delete</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.ItemVariation.Warehouses.ToList())
                            {
                                <tr class="gradeX">
                                    <td>@item.WarehouseId</td>
                                    <td>@item.WarehouseNumber</td>
                                    <td></td>
                                    <td></td>
                                    <td><a href="#">Delete</a></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>*@
        <!--Sortable Responsive Table end-->

        <div class="alert alert-info alert-block">
            <i class="icon-alert icon-alert-info"></i>
            <strong>Manufacturer</strong><a href="#manufacturModule" data-toggle="modal">Add Manufacturer</a>
        </div>
        <!--Sortable Responsive Table begin-->

        <div class="row-fluid">
            <div class="span12">
                <table class="table table-striped table-responsive" id="tableSortableVariationsManufacturer">
                    <thead>
                        <tr>
                            <th> Serial</th>
                            <th>Manufacturer</th>
                            <th>Price</th>
                            <th>Delete</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ItemVariation.Manufacturers.ToList())
                        {
                            <tr class="gradeX">
                                <td>@item.ManufacturerId</td>
                                @if (direction == "ltr")
                                {
                                    <td>@item.ManufacturerNameEn</td>
                                }
                                else
                                {
                                    <td>@item.ManufacturerNameAr</td>
                                }
                                <td></td>
                                <td><a href="#">Delete</a></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <!--Sortable Responsive Table end-->

        <div class="alert alert-info alert-block">
            <i class="icon-alert icon-alert-info"></i>
            <strong>Item Status</strong><a href="#itemStatusModule" data-toggle="modal">Add New Status</a>
        </div>
        <!--Sortable Responsive Table begin-->

        <div class="row-fluid">
            <div class="span12">
                <table class="table table-striped table-responsive" id="tableSortableItemStatus">
                    <thead>
                        <tr>
                            <th> Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ItemVariation.Statuses.ToList())
                        {
                            <tr class="gradeX">
                                @if (direction == "ltr")
                                {
                                    <td>@item.StatusNameEn</td>
                                }
                                else
                                {
                                    <td>@item.StatusNameAr</td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <!--Sortable Responsive Table end-->

        <div class="alert alert-info alert-block">
            <i class="icon-alert icon-alert-info"></i>
            <strong>Item Color</strong><a href="#itemColorModule" data-toggle="modal">Add New Color</a>
        </div>
        <!--Sortable Responsive Table begin-->

        <div class="row-fluid">
            <div class="span12">
                <table class="table table-striped table-responsive" id="tableSortableItemColor">
                    <thead>
                        <tr>
                            <th> Color</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ItemVariation.Colors.ToList())
                        {
                            <tr class="gradeX">
                                @if (direction == "ltr")
                                {
                                    <td>@item.ColorNameEn</td>
                                }
                                else
                                {
                                    <td>@item.ColorNameAr</td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <!--Sortable Responsive Table end-->

        <div class="alert alert-info alert-block">
            <i class="icon-alert icon-alert-info"></i>
            <strong>Item Color</strong><a href="#ItemImagerModule" data-toggle="modal">Add New Color</a>
        </div>
        <!--Sortable Responsive Table begin-->

        <div class="row-fluid">
            <div class="span12">
                <table class="table table-striped table-responsive" id="tableSortableVariationsImg">
                    <thead>
                        <tr>
                            <th>Serial</th>
                            <th>Image</th>
                            <th>Order</th>
                            <th>Show</th>
                            <th>Delete</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ItemVariation.ItemImages.ToList())
                        {
                            <tr class="gradeX">
                                <td>@item.ImageId</td>
                                <td>IMAGE</td>
                                <td>@item.ImageOrder</td>
                                <td>@item.ShowImage</td>
                                <td><a href="#">Delete</a></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <!--Sortable Responsive Table end-->
        
        <!--Size Module-->
      


    </div>
   
}


<script>

    var itemVarId = parseInt($('#ItemVariation_ItemVariationId').val());

    $(document).ready(function () {
        if (itemVarId == 0 || itemVarId == "") {
            $('.' + 'tbdisable' + ':input').attr('disabled', false);
            $("#savebtn").show();
            $("#cancel").show();
            $("#edit").hide();
        } else {
            $('.' + 'tbdisable' + ':input').attr('disabled', true);
            $("#savebtn").hide();
            $("#cancel").hide();
            $("#edit").show();
        }
        $('#tableSortableVariationsImg,#tableSortableItemStatus,#tableSortableVariationsManufacturer,#tableSortableVariationsWherehouse,#tableSortableVariationsSize,#tableSortableItemColor').dataTable({
            "sPaginationType": "bootstrap",
            "fnInitComplete": function () {
                $(".dataTables_wrapper select").select2({
                    dropdownCssClass: 'noSearch'
                });
            }
        });
    });

</script>


@section popups
{
    
    <div id="sizeModule" class="modal hide fade">
    <div class="modal-header">
        <button type="button" class="" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h3>Item Size</h3>
    </div>
    <div class="modal-body ">
        <form class="form-horizontal">
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">Item Size</label>
                </div>
                <div class="span2">
                    <div class="controls">
                        <div class="controls">
                            @Html.DropDownListFor(x => x.ItemVariation.Sizes, new SelectList(Model.ItemVariation.Sizes, "SizeId", "SizeNameEn"), EPMS.Web.Resources.HR.JobTitle.SelectDepartment, new { @class = "select2me", id = "sizeId" })
                        </div>
                    </div>
                </div>

            </div>
            <div class="control-group row-fluid">
                <div class="span12">
                    <label class="control-label txt-center" for="inputFielda"><a href="#sizeAddModule" data-toggle="modal">Create New Size</a></label>
                </div>

            </div>
        </form>
    </div>
    <div class="modal-footer">
        <a href="javascript:;" class="btn btn-primary">Save New Size</a>
        <a href="javascript:;" class="btn" data-dismiss="modal">Cancel</a>
    </div>
</div>
<!--Size Module ends-->
<!--Add New Size to DB-->
<div id="sizeAddModule" class="modal hide fade treeSelector">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h3>Add New Item Size</h3>
    </div>
    <div class="modal-body ">
        <form class="form-horizontal">
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="inputFieldSizea">Size </label>
                </div>
                <div class="span9">
                    <div class="controls">
                        <input id="inputFieldSizea" type="text" name="inputField">
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="inputFieldaSize">Size in Arabic</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        <input id="inputFieldaSize" type="text" name="inputField">
                    </div>
                </div>
            </div>
        </form>
    </div>
    <div class="modal-footer">
        <a href="javascript:;" class="btn btn-primary">Add New Size</a>
        <a href="javascript:;" class="btn" data-dismiss="modal">Cancel</a>
    </div>
</div>
<!--Add New Size to DB Ends-->

}
