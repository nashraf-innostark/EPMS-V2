@using System.Configuration
@model EPMS.WebModels.ViewModels.Vendor.VendorViewModel

@{
    ViewBag.Title = Model.Vendor.VendorId > 0 ? EPMS.WebModels.Resources.Inventory.Vendor.UpdatPageTitle : EPMS.WebModels.Resources.Inventory.Vendor.CreatePageTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.MessageVM = TempData["message"];
    var direction = EPMS.WebModels.Resources.Shared.Common.TextDirection;
    string[] userPermissionsSet = (string[])HttpContext.Current.Session["UserPermissionSet"];
}

<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/Inventory/Vendor/Index">
                @EPMS.WebModels.Resources.Inventory.Vendor.Label
            </a>
        </li>
        <li class="current">
            <a href="">
                @ViewBag.Title
            </a>
        </li>
    </ul>
</div>

<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@ViewBag.Title</small></h2>
</header>

<!--Notifications begin-->
@Html.Partial("_Alert")
<!--Notifications end-->
@using (Html.BeginForm("Create", "Vendor", FormMethod.Post, new { @id = "VendorForm", @class = "form-horizontal", role = "form" }))
{
    <div class="container-fluid">

        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Vendor.VendorId)
        @Html.HiddenFor(m => m.Vendor.RecCreatedBy)
        @Html.HiddenFor(m => m.Vendor.RecCreatedDt)
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Inventory.Vendor.VendorNameEn</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.Vendor.VendorNameEn, new { @dir = "ltr", id = "VendorNameEn", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.Vendor.VendorNameEn, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Inventory.Vendor.VendorNameAr</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.Vendor.VendorNameAr, new { id = "VendorNameAr", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.Vendor.VendorNameAr, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Inventory.Vendor.ContactPerson</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.Vendor.ContactPerson, new { id = "ContactPerson", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.Vendor.ContactPerson, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Inventory.Vendor.Email</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.Vendor.VendorEmail, new { id = "Email", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.Vendor.VendorEmail, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Inventory.Vendor.Number</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.Vendor.VendorContact, new { id = "VendorContact", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.Vendor.VendorContact, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Inventory.Vendor.FieldOnCreate</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.Vendor.VendorField, new { id = "VendorField", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.Vendor.VendorField, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid NotesCK">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Inventory.Vendor.Notes</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextAreaFor(m => m.Vendor.DetailsEn, new { id = "DetailsEn", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.Vendor.DetailsEn, "", new { @class = "required" })
                </div>
            </div>
        </div>
        
        <div class="control-group row-fluid ckDetails">
            <div class="span3">
                <label class="control-label" for="LocationText">@EPMS.WebModels.Resources.Inventory.Vendor.Notes</label>
            </div>
            <div class="span9">
                <div class="controls">
                    <input type="text" id="NotesEn" class="tbdisable" />
                </div>
            </div>
        </div>

        <div class="control-group row-fluid NotesCK">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Inventory.Vendor.NotesAr</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextAreaFor(m => m.Vendor.DetailsAr, new { id = "DetailsAr", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.Vendor.DetailsAr, "", new { @class = "required" })
                </div>
            </div>
        </div>
        
        <div class="control-group row-fluid ckDetails">
            <div class="span3">
                <label class="control-label" for="LocationText">@EPMS.WebModels.Resources.Inventory.Vendor.NotesAr</label>
            </div>
            <div class="span9">
                <div class="controls">
                    <input type="text" id="NotesAr" class="tbdisable" />
                </div>
            </div>
        </div>

        <div id="poTable">
            <div class="alert alert-info alert-block">
                <i class="icon-alert icon-alert-info"></i>
                <strong>Vendor Transactions</strong>
            </div>
            <!--Sortable Responsive Table begin-->
            <div class="row-fluid">
                <div class="span12">
                    <table class="table table-striped table-responsive" id="poTableBody">
                        <thead>
                            <tr>
                                <th> Serial</th>
                                <th>PO Number</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.PurchaseOrders != null)
                            {
                                var serial = 0;
                                foreach (var item in Model.PurchaseOrders.ToList())
                                {
                                    serial = serial + 1;
                                    <tr class="gradeX">
                                        <td>@serial</td>
                                        <td><a href="~/Inventory/PurchaseOrder/Details/@item.PurchaseOrderId">@item.FormNumber</a></td>
                                    </tr>
                                }
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div id="vendorItemTable">
            <div class="alert alert-info alert-block">
                <i class="icon-alert icon-alert-info"></i>
                <strong>Items Offered by the Vendor</strong>
            </div>
            <!--Sortable Responsive Table begin-->
            <div class="row-fluid">
                <div class="span12">
                    <table class="table table-striped table-responsive" id="vendorItemTableBody">
                        <thead>
                            <tr>
                                <th> Serial</th>
                                <th>Item Name</th>
                                <th>Item Code</th>
                                <th>SKU Code</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.PurchaseOrders != null)
                            {
                                var serial = 0;
                                foreach (var item in Model.Vendor.PurchaseOrderItems.ToList())
                                {
                                    serial = serial + 1;
                                    <tr class="gradeX">
                                        <td>@serial</td>
                                        @if (item.ItemVariationId == null)
                                        {
                                            <td>@item.ItemDetails</td>
                                            <td></td>
                                            <td></td>
                                        }
                                        else
                                        {
                                            <td>@item.ItemName</td>
                                            <td>@item.ItemCode</td>
                                            <td>@item.ItemSKUCode</td>
                                        }
                                    </tr>
                                }
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        @*<div id="itemAddition">
            <!--WYSIWYG Editor - Minimum Options begin-->
            <div id="WYSIWYG_Editor_-_Minimum_Options" class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">Excel Import</label>
                </div>
                <div class="span9">
                    <div class="controls elrte-wrapper">
                        <textarea id="tiny" rows="2" class="auto-resize"></textarea>
                        <script>
                            $('#tiny').elrte({
                                lang: "en",
                                styleWithCSS: false,
                                height: 200,
                                toolbar: 'tiny'
                            });
                        </script>
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid">
                <div class="span3 span-inset">
                    <button type="button" id="importEx" class="btn">Import</button>
                </div>
            </div>

            <!--Basic Responsive Table begin-->
            <div class="row-fluid" id="ress">
                <div class="span12">
                    <table class="table table-striped table-responsive ">
                        <thead class="">
                            <tr>
                                <th>Serial</th>
                                <th style="width:85%">Item Details</th>


                                <th style="width:4%">Delete</th>
                            </tr>
                        </thead>
                        <tbody class="qouteAdd" id="vitemdetail">
                            @if (Model.Vendor.VendorItems.Any())
                            {
                                var serial = 0;
                                for (int i = 0; i < Model.Vendor.VendorItems.Count(); i++)
                                {
                                    serial = serial + 1;
                                    <tr data-id="@i">
                                        <td style='display:none'><input name='Vendor.VendorItems.Index' type='hidden' value='@i' /></td>
                                        @Html.HiddenFor(m => m.Vendor.VendorItems[i].IsItemDescription)
                                        @Html.HiddenFor(m => m.Vendor.VendorItems[i].IsItemSKU)
                                        @Html.HiddenFor(m => m.Vendor.VendorItems[i].ItemVariationId)
                                        @Html.HiddenFor(m => m.Vendor.VendorItems[i].ItemId)
                                        @Html.HiddenFor(m => m.Vendor.VendorItems[i].PlaceInDepartment)
                                        @Html.HiddenFor(m => m.Vendor.VendorItems[i].RecCreatedBy)
                                        @Html.HiddenFor(m => m.Vendor.VendorItems[i].RecCreatedDate)
                                        <td>
                                            <div class="control-group row-fluid">
                                                <div class="span1">
                                                    <label class="control-label serialNumber">@serial</label>
                                                </div>

                                            </div>
                                        </td>
                                        <td>
                                            @Html.TextAreaFor(model => model.Vendor.VendorItems[i].ItemDetails, new { @class = "auto-resize vendorItem" })
                                            <button type="button" class="btn itemAdder" data-toggle="modal" data-target="#itemSearcher">+</button>
                                        </td>
                                        <td class="delete">
                                            <i class="icon-photon minus deleteRow"></i>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr data-id="0">
                                    <td style='display:none'><input name='Vendor.VendorItems.Index' type='hidden' value='0' /></td>
                                    <td style='display:none'>
                                        <input name='Vendor.VendorItems[0].IsItemDescription' id='Vendor_VendorItems_0__IsItemDescription' type='hidden' />
                                        <input name='Vendor.VendorItems[0].IsItemSKU' id='Vendor_VendorItems_0__IsItemSKU' type='hidden' />
                                        <input name='Vendor.VendorItems[0].ItemVariationId' id='Vendor_VendorItems_0__ItemVariationId' type='hidden' />
                                        <input name='Vendor.VendorItems[0].PlaceInDepartment' id='Vendor_VendorItems_0__PlaceInDepartment' type='hidden' />
                                    </td>
                                    <td>
                                        <div class="control-group row-fluid">
                                            <div class="span1">
                                                <label class="control-label serialNumber">1</label>
                                            </div>

                                        </div>
                                    </td>
                                    <td>
                                        <textarea rows="2" class="auto-resize" name="Vendor.VendorItems[0].ItemDetails" id="Vendor_VendorItems_0__ItemDetails"></textarea>
                                        <button type="button" class="btn itemAdder" data-toggle="modal" data-target="#itemSearcher">+</button>
                                    </td>
                                    <td class="delete">
                                        <i class="icon-photon minus deleteRow"></i>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="control-group row-fluid">
                    <div class="span3 span-inset">
                        <button type="button" class="btn trAdder">Add</button>
                    </div>
                </div>
            </div>
        </div>*@
        
        @if (userPermissionsSet.Contains("VendorCreate"))
        {
            <div class="control-group row-fluid">
                <div class="span3">
                    <div class="span3 span-inset">
                        <button id="edit" class="btn">@EPMS.WebModels.Resources.Inventory.Vendor.EditButton</button>
                        <button id="savebtn" class="btn" type="submit">@EPMS.WebModels.Resources.Inventory.Vendor.SaveButton</button>
                    </div>
                    <div class="span3 span-inset">
                        <button id="cancel" class="btn" onclick="window.location.href = '@(ConfigurationManager.AppSettings["SiteURL"])/Inventory/Vendor/Index'" type="reset">@EPMS.WebModels.Resources.HR.JobTitle.CancelButton</button>
                    </div>
                </div>
            </div>
        }

    </div>
}

@section popups{

    <div id="itemSearcher" class="modal hide fade treeSelector">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h3>@EPMS.WebModels.Resources.RFI.RFI.ItemSearch</h3>
        </div>
        <div class="modal-body ">
            <form class="form-horizontal">
                <input id='ItemModalIndex' type='hidden' />
                <div id="Simple_Select_Box_with_Filter_Search" class="control-group row-fluid">
                    <div class="span3">
                        <label class="control-label" for="selectBoxFilter">@EPMS.WebModels.Resources.RFI.RFI.SelectItem</label>
                    </div>
                    <div class="span6">
                        <div class="controls">
                            @Html.DropDownList("ItemVariationDropDownList", new SelectList(Model.ItemVariationDropDownList, "ItemVariationId", "ItemCodeSKUCode"), "", new { @class = "select2me", @id = "ItemVariationDropDownList" })
                        </div>
                        <label id="ItemVariationDropDownListValidation"></label>
                    </div>
                </div>

                <div class="control-group row-fluid">
                    <div class="span4">
                        <label class="control-label" for="selectBoxFilter">@EPMS.WebModels.Resources.RFI.RFI.ItemTreeSelector</label>
                    </div>
                    <div class="span8 span-inset">
                        <button type="button" id="btnTreeSelector" class="btn itemAdder">+</button>
                        <label id="txtSelectedDepartmentName"></label>
                    </div>

                </div>
                <div class="control-group row-fluid">

                    <div class="span9 ">
                        <label class="control-label">
                            <input type="checkbox" id="ItemDescriptionModalChk" class="uniformCheckbox" style="margin: -1px 2px 0 0;">@EPMS.WebModels.Resources.RFI.RFI.AddItemDescription
                        </label>

                        <label class="control-label">
                            <input type="checkbox" id="ItemSKUModalChk" class="uniformCheckbox" style="margin: -1px 2px 0 0;">@EPMS.WebModels.Resources.RFI.RFI.AddItemSKU
                        </label>
                    </div>

                </div>

            </form>
        </div>
        <div class="modal-footer">
            <a href="javascript:;" class="btn btn-primary" id="SaveChanges">@EPMS.WebModels.Resources.RFI.RFI.SaveChanges</a>
            <a href="javascript:;" class="btn" data-dismiss="modal">@EPMS.WebModels.Resources.RFI.RFI.Cancel</a>
        </div>
    </div>

    <div id="itemTreeSelector" class="modal hide fade treeSelector">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h3>@EPMS.WebModels.Resources.RFI.RFI.PlaceInWarehouseTree</h3>
        </div>
        <div class="modal-body ">
            <form class="form-horizontal">
                <div class="sidebarMenuHolder">
                    <div class="JStree">
                        <div class="Jstree_shadow_top"></div>
                        <div id="jstree"></div>
                        <div class="Jstree_shadow_bottom"></div>
                    </div>
                </div>
            </form>
        </div>

        <div class="modal-footer">
            <a href="javascript:;" class="btn btn-primary" id="selectDepartment">@EPMS.WebModels.Resources.RFI.RFI.Select</a>
            <a href="javascript:;" class="btn" data-dismiss="modal">@EPMS.WebModels.Resources.RFI.RFI.Cancel</a>
        </div>
    </div>

}


<script src="~/RTB/ckfinder.js"></script>
<script src="~/RTE/ckeditor.js"></script>
<script>
    var itemsCount;
    var siteUrl = $('#siteURL').val();
    var iExcelData = false;
    var isUpdate = false;
    var elementToDelete;
    var textTillParent;
    var dir = '@direction';
    var vendorId = parseInt($('#Vendor_VendorId').val());
    $(document).ready(function () {

        $('#vendorItemTableBody, #poTableBody').dataTable({
            "sPaginationType": "bootstrap",
            "fnInitComplete": function () {
                $(".dataTables_wrapper select").select2({
                    dropdownCssClass: 'noSearch'
                });
            }
        });

        if (vendorId == 0 || vendorId == "") {
            $('.' + 'tbdisable' + ':input').attr('disabled', false);
            $("#savebtn").show();
            $("#cancel").show();
            $("#edit").hide();
            $(".NotesCK").show();
            $(".ckDetails").hide();
            $("#poTable").hide();
            $("#vendorItemTable").hide();
            itemsCount = 0;
            showCkEditors();
        } else {
            $('.' + 'tbdisable' + ':input').attr('disabled', true);
            $("#savebtn").hide();
            $("#cancel").hide();
            $("#edit").show();
            $(".deleteRow").hide();
            $(".itemAdder").hide();
            $(".trAdder").hide();
            $("#itemAddition").hide();
            $(".NotesCK").hide();
            $(".ckDetails").show();
            //itemsCount = parseInt('@Model.Vendor.VendorItems.Count');
        }
        $("#JobTitleForm").validate({
            errorElement: "span",
            errorClass: "error",
            onclick: true,
            rules: {
                "req": {
                    required: true
                },
                "numbers": {
                    required: false,
                    digits: true
                },
                "email": {
                    email: true
                },
                "url": {
                    url: true
                },
                "date": {
                    date: true
                }
            }
        });
        $("#selectBoxFilter").select2();

        var treeInitialData;
        if (dir == "ltr") {
            treeInitialData = [
                {
                    "data": {
                        "title": "Departments",
                        "attr": { "href": "#", "onclick": "jsTreeClick(event)" }
                    },
                    "attr": { "id": "parentNode" },
                }
            ];
        } else {
            treeInitialData = [
                {
                    "data": {
                        "title": "الإدارات",
                        "attr": { "href": "#", "onclick": "jsTreeClick(event)" }
                    },
                    "attr": { "id": "parentNode" },
                }
            ];
        }
        $("#jstree").jstree({
            "json_data": {
                "data": treeInitialData
            },
            "plugins": ["themes", "json_data", "ui"],
            "ui": {
                "initially_select": ["parentNode"]
            },
            "core": {
                "initially_open": ["parentNode"]
            }
        }).bind("select_node.jstree", function (event, data) {
            //`data.rslt.obj` is the jquery extended node that was clicked
            if (data.inst._get_parent(data.rslt.obj) != -1) {
                var parents = [];
                textTillParent = "";
                data.rslt.obj.parents("li").each(function () {
                    parents.push({ id: $(this).attr("id"), description: $(this).children("a").text() });
                });
                $.each(parents, function (key, value) {
                    textTillParent = value.description + " >" + textTillParent;
                });
                textTillParent = textTillParent + $(".jstree-clicked").text();
            }
        });

        var requestUrl = "/Inventory/InventoryDepartment/GetAllDepartments";
        populateTree(0, "jstree", requestUrl);

        $("#btnTreeSelector").click(function (event) {
            $('#itemTreeSelector').modal('show');
            event.preventDefault();
            $.fn.modal.Constructor.prototype.enforceFocus = function () { };
        });

        $("#selectDepartment").on("click", function () {
            var index = parseInt($("#ItemModalIndex").val());
            $("#Vendor_VendorItems_" + index + "__PlaceInDepartment").val(textTillParent);
            $("#txtSelectedDepartmentName").text("Selected :" + textTillParent);
            $('#itemTreeSelector').modal('toggle');
            return true;
        });

        $("#SaveChanges").on("click", function () {
            if (validateSelect2Ddl("#ItemVariationDropDownList")) {
                getModalControlsValues();
            }
        });
        $('#itemSearcher').on('show', function () {
            //clear DDL required value label
            $("#ItemVariationDropDownListValidation").text("");
            $("#ItemVariationDropDownListValidation").removeClass("Error");

            //get the id from tr that is selected for the item popup
            var index = $(event.target).closest('tr').data('id');
            $("#ItemModalIndex").val(index);
            //get item's values
            var isItemDescription = $("#TirItems_" + index + "__IsItemDescription").val();
            var isItemSKU = $("#TirItems_" + index + "__IsItemSKU").val();
            var itemVariationId = $("#TirItems_" + index + "__ItemVariationId").val();
            var placeInDepartment = $("#TirItems_" + index + "__PlaceInDepartment").val();
            // clear selected department label text
            $("#txtSelectedDepartmentName").text("");

            //set modal fields according to modal values
            $("#ItemVariationDropDownList").select2("val", itemVariationId); //set the value

            if (isItemDescription == "false" || isItemDescription == "False" || isItemDescription == "") {
                $('#ItemDescriptionModalChk').attr('checked', false);
            } else {
                $('#ItemDescriptionModalChk').attr('checked', true);
            }

            if (isItemSKU == "false" || isItemSKU == "False" || isItemSKU == "") {
                $('#ItemSKUModalChk').attr('checked', false);
            } else {
                $('#ItemSKUModalChk').attr('checked', true);
            }
            $("#txtSelectedDepartmentName").text("Selected :" + placeInDepartment);
        });

        var notesEn = $("#DetailsEn").val();
        var regexEn = /(<([^>]+)>)/ig;
        var resultEn = notesEn.replace(regexEn, "");
        $("#NotesEn").val(resultEn);

        var notesAr = $("#DetailsAr").val();
        var regexAr = /(<([^>]+)>)/ig;
        var resultAr = notesAr.replace(regexAr, "");
        $("#NotesAr").val(resultAr);

    });


    function getModalControlsValues() {
        debugger;
        //get item's values
        var isItemDescription = $('#ItemDescriptionModalChk').is(':checked');
        var isItemSku = $('#ItemSKUModalChk').is(':checked');
        var itemVariationId = $("#ItemVariationDropDownList").val();

        //set item's values
        var index = $("#ItemModalIndex").val();
        $("#Vendor_VendorItems_" + index + "__IsItemDescription").val(isItemDescription);
        $("#Vendor_VendorItems_" + index + "__IsItemSKU").val(isItemSku);
        $("#Vendor_VendorItems_" + index + "__ItemVariationId").val(itemVariationId);

        //set item sku and description in details text area
        var vendorItems = '@Html.Raw(Json.Encode(Model.ItemVariationDropDownList))';
        var parsedRfiItems = JSON.parse(vendorItems);

        $.each(parsedRfiItems, function (key, value) {
            if (value.ItemVariationId == itemVariationId) {
                $("#Vendor_VendorItems_" + index + "__ItemDetails").val("");
                var textToAppend = "";
                if ('@direction' == "ltr") {
                    textToAppend = textToAppend + "Name: " + value.ItemNameE;
                } else {
                    textToAppend = textToAppend + "Name: " + value.ItemNameA;
                }
                if (isItemSku) {
                    textToAppend = textToAppend + "\nSKU Code: " + value.SKUCode;
                }
                if (isItemDescription) {
                    if ('@direction' == "ltr") {
                        textToAppend = textToAppend + "\nDescription: " + value.ItemVariationDescriptionE;
                    } else {
                        textToAppend = textToAppend + "\nDescription: " + value.ItemVariationDescriptionA;
                    }
                }
                $("#Vendor_VendorItems_" + index + "__ItemDetails").val(textToAppend);
            }
        });
        $('#itemSearcher').modal('toggle');
    };

    $("#edit").click(function (event) {
        $('.' + 'tbdisable' + ':input').attr('disabled', false);
        $("#savebtn").show();
        $("#cancel").show();
        $("#edit").hide();
        $(".deleteRow").show();
        $(".itemAdder").show();
        $(".trAdder").show();
        $("#itemAddition").show();
        $("#poTable").hide();
        $("#vendorItemTable").hide();
        $(".NotesCK").show();
        $(".ckDetails").hide();
        showCkEditors();
        event.preventDefault();
    });


    $("#importEx").on("click", function () {

        var excel = $("#WYSIWYG_Editor_-_Minimum_Options iframe").contents().find("body table");
        var coln = $(excel).find("tr:first td").length;
        var count = 0;
        var x = 0;
        itemsCount = 0;
        if (coln == 1) {
            $(excel).find("tr").each(function () {
                var y = 0;
                var t1 = "";
                var t2 = 0;
                var t3 = 0;
                var t4 = 0;
                $(this).find("td").each(function () {
                    if (y == 0) {
                        t1 = $(this).text();
                    }
                    else if (y == 1) {
                        t2 = parseInt($(this).text());
                    }
                    else if (y == 2) {
                        t3 = parseInt($(this).text());
                    }
                    y++;
                });
                var html = '<tr data-id=' + itemsCount + '>' + '<td style="display:none"><input name="RfiItem.Index" type="hidden" value=' + itemsCount + ' /></td>' +
                    '<td style="display:none">' +
                    '<input name="Vendor.VendorItems[' + itemsCount + '].IsItemDescription" id="Vendor_VendorItems_' + index + '__IsItemDescription" type="hidden" />' +
                    '<input name="Vendor.VendorItems[' + itemsCount + '].IsItemSKU" id=Vendor_VendorItems_' + index + '__IsItemSKU type="hidden" />' +
                    '<input name="Vendor.VendorItems[' + itemsCount + '].ItemVariationId" id="Vendor_VendorItems_' + index + '__ItemVariationId" type="hidden" />' +
                    '<input name="Vendor.VendorItems[' + itemsCount + '].PlaceInDepartment" id=Vendor_VendorItems_' + index + '__PlaceInDepartment" type="hidden" />' +
                    '</td>' +
                    '<td >' +
                    '<div class="control-group row-fluid">' +
                    '<div class="span1">' +
                    '<label class="control-label serialNumber">' +
                    '</label>' +
                    '</div>' +
                    '</div>' +
                    '</td>' +
                    '<td >' +
                    '<textarea rows="2" class="auto-resize" name = "Vendor.VendorItems[' + itemsCount + '].ItemDetails" id="Vendor_VendorItems_' + itemsCount + '__ItemDetails> </textarea>' +
                    '<button type="button" class="btn itemAdder" data-toggle="modal" data-target="#itemSearcher" >+</button>' +
                    '</td>' +
                    '<td class="delete">' +
                    '<i class="icon-photon minus deleteRow"></i> ' +
                    '</td>' +
                    '</tr>';
                itemsCount = itemsCount + 1;
                iExcelData = true;
                if (count == 0) {
                    $('.qouteAdd').html("");
                }
                $('.qouteAdd').append(html);
                reActivateDelete();
                //reactivateCount();
                count++;
            });
            activateSerial();
        }
        else {

            $.pnotify({
                title: 'Sorry',
                type: 'info',
                text: 'The sheet you are trying to import is not supported, please check if the feilds match.'
            });

        }

    });

    $('.trAdder').on("click", function (event) {
        var index = $("#vitemdetail").children("tr").length;
        itemsCount = itemsCount;
        var html = ' <tr data-id=' + index + '>' + '<td style="display:none"><input name="Vendor.VendorItems.Index" type="hidden" value=' + index + ' /></td>' +
            '<td style="display:none">' +
            '<input name="Vendor.VendorItems[' + index + '].IsItemDescription" id="Vendor_VendorItems_' + index + '__IsItemDescription" type="hidden" />' +
            '<input name="Vendor.VendorItems[' + index + '].IsItemSKU" id=Vendor_VendorItems_' + index + '__IsItemSKU type="hidden" />' +
            '<input name="Vendor.VendorItems[' + index + '].ItemVariationId" id="Vendor_VendorItems_' + index + '__ItemVariationId" type="hidden" />' +
            '<input name="Vendor.VendorItems[' + index + '].PlaceInDepartment" id=Vendor_VendorItems_' + index + '__PlaceInDepartment" type="hidden" />' +
            '</td>' +
            '<td >' +
            '<div class="control-group row-fluid">' +
            '<div class="span1">' +
            '<label class="control-label serialNumber"  >' +
            '</label>' +
            '</div>' +
            '</div>' +
            '</td>' +
            '<td >' +
            '<textarea  rows="2" class="auto-resize vendorItem" name = "Vendor.VendorItems[' + index + '].ItemDetails" id="Vendor_VendorItems_' + index + '__ItemDetails">' +
            '</textarea>' +
            '<button type="button" class="btn itemAdder" data-toggle="modal" data-target="#itemSearcher" >+</button>' +
            '</td>' +
            '<td class="delete">' +
            '<i class="icon-photon minus deleteRow"></i> ' +
            '</td>' +
            '</tr>';

        $('.qouteAdd').append(html);
        iExcelData = false;
        isUpdate = false;
        activateSerial();
        reActivateDelete();
        event.preventDefault();
    });

    function reActivateDelete() {
        $('.deleteRow').on("click", function () {
            var count = $('.qouteAdd tr').length;
            if (count > 1) {
                $(this).parent().parent().remove();
            }
            activateSerial();
        });
    }

    $('.deleteRow').on("click", function () {
        var count = $('.qouteAdd tr').length;
        if (count > 1) {
            $(this).parent().parent().remove();
        }
        activateSerial();
        //setControlID();
    });

    function activateSerial() {
        var count = $('.qouteAdd tr').length;
        var add = 0;
        $('.qouteAdd tr').each(function () {
            add++;
            $(this).find(".serialNumber").text(add);
        });
    }

    function setControlID() {
        var textVarList = $('.vendorItem');
        var counter = $('.qouteAdd tr').length;
        for (var i = 0; i < textVarList.length; i++) {
            $(textVarList[i]).attr('name', "Vendor.VendorItems[" + i + "].ItemDetails");
        }

    }

    function jsTreeClick(event) {
        return true;
    }

    function showCkEditors() {
        $("#CKEditorDescp").show();
        CKEDITOR.replace('DetailsEn', {
            filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
        });
        CKEDITOR.replace('DetailsAr', {
            filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
        });
    }

</script>
