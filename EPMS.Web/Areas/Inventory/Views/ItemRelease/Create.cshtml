@model EPMS.Web.ViewModels.IRF.ItemReleaseCreateViewModel

@{
    var direction = EPMS.Web.Resources.Shared.Common.TextDirection;
    string[] userPermissionsSet = (string[])HttpContext.Current.Session["UserPermissionSet"];
    if (Model.ItemRelease.ItemReleaseId > 0)
    {
        ViewBag.Title = EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.PageTitleEdit;
    }
    else
    {
        ViewBag.Title = EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.PageTitle;
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
    
}

<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/Inventory/ItemRelease/Index">
                @EPMS.Web.Resources.Inventory.IRF.Index.IRFIndex.Header
            </a>
        </li>
        <li class="current">
            <a href="javascript:;">
                @ViewBag.Title
            </a>
        </li>
    </ul>
</div>

<header>
    <i class="icon-big-notepad"></i>
    @if (Model.ItemRelease.ItemReleaseId > 0)
    {
        <h2><small>@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.HeaderEdit</small></h2>
    }
    else
    {
        <h2><small>@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.Header</small></h2>
    }
</header>
<!--Notifications begin-->
@Html.Partial("_Alert")
<!--Notifications end-->
@using (Html.BeginForm("Create", "ItemRelease", FormMethod.Post, new { @class = "form-horizontal", @id = "AddEditItemReleaseForm", role = "form", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.ItemRelease.ItemReleaseId)
    @Html.HiddenFor(model => model.ItemRelease.Status)
    @Html.HiddenFor(model => model.ItemRelease.QuantityReleased)
    @Html.HiddenFor(model => model.ItemRelease.Notes)
    @Html.HiddenFor(model => model.ItemRelease.NotesAr)
    @Html.HiddenFor(model => model.ItemRelease.ManagerId)
    @Html.HiddenFor(model => model.ItemRelease.RecCreatedBy)
    @Html.HiddenFor(model => model.ItemRelease.RecCreatedDate)
    <div class="container-fluid">
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="FormNumber">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.ItemReleaseFormNumber</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.ItemRelease.FormNumber, new { @id = "FormNumber", @class = "disableOnLoad" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Requester">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.Requester</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @if (direction == "ltr")
                    {
                        @Html.DropDownListFor(m => m.ItemRelease.RequesterId, new SelectList(Model.Customers, "CustomerId", "CustomerNameE"), "--Select--", new { @class = "select2me disableDdl", @id = "Requester" })
                    }
                    else
                    {
                        @Html.DropDownListFor(m => m.ItemRelease.RequesterId, new SelectList(Model.Customers, "CustomerId", "CustomerNameA"), "--Select--", new { @class = "select2me disableDdl", @id = "Requester" })
                    }
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="RfiId">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.RFI</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @if (direction == "ltr")
                    {
                        @Html.DropDownListFor(m => m.ItemRelease.RFIId, new SelectList(Model.Rfis, "RFIId", "RFIId"), "--Select--", new { @class = "select2me disableDdl", @id = "RfiId" })
                    }
                    else
                    {
                        @Html.DropDownListFor(m => m.ItemRelease.RFIId, new SelectList(Model.Rfis, "RFIId", "RFIId"), "--Select--", new { @class = "select2me disableDdl", @id = "RfiId" })
                    }
                </div>
            </div>

        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="OrderNumber">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.Order</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.ItemRelease.OrderNo, new { @id = "OrderNumber", @class = "disableOnLoad" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="CreatedBy">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.CreatedBy</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.ItemRelease.CreatedBy, new { @id = "CreatedBy", @class = "disableOnLoad" })
                </div>
            </div>
        </div>
        <div id="detailEditor">
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="DeliveryInfo">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.DeliveryInfo</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        <input type="text" id="DeliveryInfoE" class="disableOnLoad" />
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="DeliveryInfoArabic">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.DeliveryInfoArabic</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        <input type="text" id="DeliveryInfoA" class="disableOnLoad" />
                    </div>
                </div>
            </div>
        </div>
        <div id="CKEditor" style="display: none">
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="DeliveryInfo">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.DeliveryInfo</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextAreaFor(model => model.ItemRelease.DeliveryInfo, new { @id = "DeliveryInfoEn", @class = "" })
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="DeliveryInfoAr">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.DeliveryInfoArabic</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextAreaFor(model => model.ItemRelease.DeliveryInfoArabic, new { @id = "DeliveryInfoAr", @class = "" })
                    </div>
                </div>
            </div>
        </div>
        <div id="WYSIWYG_Editor_-_Minimum_Options" class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.ExcelImport</label>
            </div>
            <div class="span9">
                <div class="controls elrte-wrapper">
                    <textarea id="tiny" rows="2" class="auto-resize toBeDisable"></textarea>
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3 span-inset">
                <button type="button" id="importEx" class="btn btnDisable">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.Import</button>
            </div>
            <div class="span3 span-inset">
                <button type="button" id="itemFromOrder" class="btn">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.ImportFromOrder</button>
            </div>
        </div>
        <div class="row-fluid" id="ress">
            <div class="span12">
                <table class="table table-striped table-responsive ">
                    <thead class="">
                        <tr>
                            <th>@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.Serial</th>
                            <th style="width:50%">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.ItemDetails</th>
                            <th>@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.Warehouse</th>
                            <th>@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.Quantity</th>
                            <th style="width:4%">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.Delete</th>
                        </tr>
                    </thead>
                    <tbody id="ItemReleaseDetailsTableBody" class="qouteAdd">
                        @if (Model.ItemReleaseDetails.Any())
                        {
                            for (int i = 0; i < Model.ItemReleaseDetails.Count(); i++)
                            {
                                <tr data-id=@i>
                                    <td style='display: none'>
                                        <input name='ItemReleaseDetails.Index' type='hidden' value=@i />

                                        @Html.HiddenFor(m => m.ItemReleaseDetails[i].IsItemDescription)
                                        @Html.HiddenFor(m => m.ItemReleaseDetails[i].IsItemSKU)
                                        @Html.HiddenFor(m => m.ItemReleaseDetails[i].ItemVariationId)
                                        @Html.HiddenFor(m => m.ItemReleaseDetails[i].IRFDetailId)
                                        @Html.HiddenFor(m => m.ItemReleaseDetails[i].PlaceInDepartment)
                                        @Html.HiddenFor(m => m.ItemReleaseDetails[i].RecCreatedBy)
                                        @Html.HiddenFor(m => m.ItemReleaseDetails[i].RecCreatedDate)
                                    </td>
                                    <td>
                                        <div class="control-group row-fluid">
                                            <div class="span1">
                                                <label class="control-label serialNumber">@(i + 1)</label>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        @Html.TextAreaFor(m => m.ItemReleaseDetails[i].ItemDetails, new { @class = "auto-resize toBeDisable", @rows = 2 })
                                        <button type="button" class="btn itemAdder btnDisable" data-toggle="modal" data-target="#itemSearcher">+</button>
                                        @Html.ValidationMessageFor(m => m.ItemReleaseDetails[i].ItemDetails)
                                    </td>
                                    <td>
                                        @Html.TextAreaFor(m => m.ItemReleaseDetails[i].PlaceInWarehouse, new { @class = "auto-resize toBeDisable", @rows = 2 })
                                        <button type="button" class="btn itemAdder btnDisable" data-id=@i data-toggle="modal" data-target="#warhouseSelector">+</button>
                                        @Html.ValidationMessageFor(m => m.ItemReleaseDetails[i].PlaceInWarehouse)
                                    </td>
                                    <td class="quantity">
                                        @Html.TextBoxFor(m => m.ItemReleaseDetails[i].ItemQty, new { @class = "n1 toBeDisable" })
                                        @Html.ValidationMessageFor(m => m.ItemReleaseDetails[i].ItemQty, null, new { @class = "required" })
                                    </td>
                                    <td class="delete">
                                        <i class="icon-photon minus deleteRow btnDisable"></i>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr data-id="0">
                                <td style='display:none'>
                                    <input name='ItemReleaseDetails.Index' type='hidden' value='0' />
                                    <input name='ItemReleaseDetails[0].IsItemDescription' id='ItemReleaseDetails_0__IsItemDescription' type='hidden' />
                                    <input name='ItemReleaseDetails[0].IsItemSKU' id='ItemReleaseDetails_0__IsItemSKU' type='hidden' />
                                    <input name='ItemReleaseDetails[0].ItemVariationId' id='ItemReleaseDetails_0__ItemVariationId' type='hidden' />
                                    <input name='ItemReleaseDetails[0].PlaceInDepartment' id='ItemReleaseDetails_0__PlaceInDepartment' type='hidden' />
                                </td>
                                <td>
                                    <div class="control-group row-fluid">
                                        <div class="span1">
                                            <label class="control-label serialNumber">1</label>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <textarea rows="2" id='ItemReleaseDetails_0__ItemDetails' class="auto-resize toBeDisable" data-val="true" data-val-required="The Item Details field is required." name="ItemReleaseDetails[0].ItemDetails"></textarea>
                                    <button type="button" class="btn itemAdder btnDisable" data-toggle="modal" data-target="#itemSearcher">+</button>
                                    <span class="field-validation-valid required" data-valmsg-for="ItemReleaseDetails[0].ItemDetails" data-valmsg-replace="true"></span>
                                </td>
                                <td>
                                    <textarea rows="2" id='ItemReleaseDetails_0__PlaceInWarehouse' class="auto-resize toBeDisable" data-val="true" data-val-required="The Warehouse field is required." name="ItemReleaseDetails[0].PlaceInWarehouse"></textarea>
                                    <button type="button" class="btn itemAdder btnDisable" data-toggle="modal" data-target="#warhouseSelector">+</button>
                                    <span class="field-validation-valid required" data-valmsg-for="ItemReleaseDetails[0].PlaceInWarehouse" data-valmsg-replace="true"></span>
                                </td>
                                <td class="quantity">
                                    <input id='ItemReleaseDetails_0__ItemQty' class="n1 toBeDisable" type="text" name="ItemReleaseDetails[0].ItemQty" data-val="true" data-val-number="The field Item Qty must be a number." data-val-range="Please enter valid quantity" data-val-range-max="2147483647" data-val-range-min="1" data-val-required="The Item Qty field is required.">
                                    <span class="field-validation-valid required" data-valmsg-for="ItemReleaseDetails[0].ItemQty" data-valmsg-replace="true"></span>
                                </td>
                                <td class="delete">
                                    <i class="icon-photon minus deleteRow btnDisable"></i>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="control-group row-fluid">
                <div class="span3 span-inset">
                    <button type="button" class="btn trAdder btnDisable">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.Add</button>
                </div>
            </div>
        </div>
        <div id="EditRecord" class="control-group row-fluid" style="display: none">
            <div class="span3 span-inset">
                <button id="edit" type="button" class="btn">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.Edit</button>
            </div>
        </div>
        <div id="SubmitRecord" class="control-group row-fluid">
            <div class="span3 span-inset">
                <button type="submit" class="btn">@EPMS.Web.Resources.Inventory.IRF.AddEdit.IRFCreate.Submit</button>
            </div>
        </div>
    </div>
}

@section popups
{
    @Html.Partial("_IRFItemsPopUp")
    @*@Html.Partial("_ItemsPopUp")*@
    @Html.Partial("_IRFWarehousePopUp")
}
<script src="~/RichTextEditor/ckeditor.js"></script>
<script>
    var siteUrl;
    var orderNo = [];
    var dir = '@direction';
    var errorMessage = '@EPMS.Web.Resources.Shared.Common.RequiredDdlField';
    var textTillParent = "";
    var itemWarehouses = '@Html.Raw(Json.Encode(Model.ItemWarehouses))';
    var parsedWarehouses = JSON.parse(itemWarehouses);
    $(document).ready(function () {
        siteUrl = $("#siteURL").val();
        $('.' + 'disableOnLoad' + ':input').attr('readonly', true);
        var itemId = parseInt('@Model.ItemRelease.ItemReleaseId');
        if (itemId > 0) {
            // disable on load section
            $('.disableDdl').select2('disable');
            $('.btnDisable').addClass('disableList');
            $('.' + 'toBeDisable' + ':input').attr('readonly', true);
            // CK Editor to simple textbox
            var deliveryInfoEn = $("#DeliveryInfoEn").val();
            var regex = /(<([^>]+)>)/ig;
            var result = deliveryInfoEn.replace(regex, "");
            $("#DeliveryInfoE").val(result);

            var deliveryInfoAr = $("#DeliveryInfoAr").val();
            regex = /(<([^>]+)>)/ig;
            result = deliveryInfoAr.replace(regex, "");
            $("#DeliveryInfoA").val(result);
            $("#detailEditor").show();
            $("#CKEditor").hide();
            $("#CKEditor").hide();
            $("#SubmitRecord").hide();
            if ('@userPermissionsSet.Contains("ItemReleaseCreate")' == 'True') {
                $("#EditRecord").show();
            }
            //
        }
        $('.trAdder').on("click", function () {
            var index = $("#ItemReleaseDetailsTableBody").children("tr").length;
            var html = "<tr data-id=" + index + ">" +
                            "<td style='display:none'>" +
                                "<input name='ItemReleaseDetails.Index' type='hidden' value='" + index + "' />" +
                                "<input name='ItemReleaseDetails[" + index + "].IsItemDescription' id='ItemReleaseDetails_" + index + "__IsItemDescription' type='hidden' />" +
                                "<input name='ItemReleaseDetails[" + index + "].IsItemSKU' id='ItemReleaseDetails_" + index + "__IsItemSKU' type='hidden' />" +
                                "<input name='ItemReleaseDetails[" + index + "].ItemVariationId' id='ItemReleaseDetails_" + index + "__ItemVariationId' type='hidden' />" +
                                "<input name='ItemReleaseDetails[" + index + "].PlaceInDepartment' id='ItemReleaseDetails_" + index + "__PlaceInDepartment' type='hidden' />" +
                            "</td>" +
                            "<td>" +
                                "<div class=\"control-group row-fluid\">" +
                                    "<div class=\"span1\">" +
                                        "<label class=\"control-label serialNumber\">" + index + "</label>" +
                                    "</div>" +
                                "</div>" +
                            "</td>" +
                            "<td>" +
                                "<textarea rows=\"3\" id='ItemReleaseDetails_" + index + "__ItemDetails' class=\"auto-resize toBeDisable\" data-val=\"true\" data-val-required=\"The Item Details field is required.\" name=\"ItemReleaseDetails[" + index + "].ItemDetails\"></textarea>" +
                                "<button type=\"button\" class=\"btn itemAdder btnDisable\" data-toggle=\"modal\" data-target=\"#itemSearcher\">+</button>" +
                                "<span class=\"field-validation-valid required\" data-valmsg-for=\"ItemReleaseDetails[" + index + "].ItemDetails\" data-valmsg-replace=\"true\"></span>" +
                            "</td>" +
                            "<td>" +
                                "<textarea rows=\"2\" id='ItemReleaseDetails_" + index + "__PlaceInWarehouse' class=\"auto-resize toBeDisable\" data-val=\"true\" data-val-required=\"The Warehouse field is required.\" name=\"ItemReleaseDetails[" + index + "].PlaceInWarehouse\"></textarea>" +
                                "<button type=\"button\" class=\"btn itemAdder btnDisable\" data-toggle=\"modal\" data-target=\"#warhouseSelector\">+</button>" +
                                "<span class=\"field-validation-valid required\" data-valmsg-for=\"ItemReleaseDetails[" + index + "].PlaceInWarehouse\" data-valmsg-replace=\"true\"></span>" +
                            "</td>" +
                            "<td class=\"quantity\">" +
                                "<input id='ItemReleaseDetails_" + index + "__ItemQty' class='n1 toBeDisable' type='text' name='ItemReleaseDetails[" + index + "].ItemQty' data-val='true' data-val-number='The field Item Qty must be a number.' data-val-range='Please enter valid quantity' data-val-range-max='2147483647' data-val-range-min='1' data-val-required='The Item Qty field is required.'>" +
                                "<span class='field-validation-valid required' data-valmsg-for='ItemReleaseDetails[" + index + "].ItemQty' data-valmsg-replace='true'></span>" +
                            "</td>" +
                            "<td class='delete'>" +
                                "<i class='icon-photon minus deleteRow btnDisable'></i>" +
                            "</td>" +
                        "</tr>";
            $('.qouteAdd').append(html);
            //remove validation
            $("form").removeData("validator").removeData("unobtrusiveValidation");

            //Parse the form again to apply new validations
            $.validator.unobtrusive.parse("form");
            activateSerial();
            reActivateDelete();
            //reactivateCount();
        });
        reActivateDelete();
        var treeInitialData;
        if (dir == "ltr") {
            treeInitialData = [
                {
                    "data": {
                        "title": "Departments",
                        "attr": { "href": "#", "onclick": "jsTreeClick(event)" }
                    },
                    "attr": { "id": "parentNode" },
                }
            ];
        } else {
            treeInitialData = [
                {
                    "data": {
                        "title": "الإدارات",
                        "attr": { "href": "#", "onclick": "jsTreeClick(event)" }
                    },
                    "attr": { "id": "parentNode" },
                }
            ];
        }
        $("#jstree").jstree({
            "json_data": {
                "data": treeInitialData
            },
            "plugins": ["themes", "json_data", "ui"],
            "ui": {
                "initially_select": ["parentNode"]
            },
            "core": {
                "initially_open": ["parentNode"]
            }
        }).bind("select_node.jstree", function (event, data) {
            //`data.rslt.obj` is the jquery extended node that was clicked
            if (data.inst._get_parent(data.rslt.obj) != -1) {
                var parents = [];
                textTillParent = "";
                data.rslt.obj.parents("li").each(function () {
                    parents.push({ id: $(this).attr("id"), description: $(this).children("a").text() });
                });
                $.each(parents, function (key, value) {
                    textTillParent = value.description + " >" + textTillParent;
                });
                textTillParent = textTillParent + $(".jstree-clicked").text();
            }
        });
        var requestUrl = siteUrl + "/Inventory/InventoryDepartment/GetAllDepartments";
        populateTree(0, "jstree", requestUrl);

        $("#Add").on("click", function () {
            if (validateSelect2Ddl("#RFIItemVariationDropDownList", errorMessage)) {
                getModalControlsValues();
            }

            $("#simpleMultiWarehouse").empty();
            // get warehouse
            var warehouse = "";
            var itemVariationId = $("#RFIItemVariationDropDownList").val();
            $.each(parsedWarehouses, function (key, value) {
                if (value.ItemVariationId == itemVariationId) {
                    warehouse = warehouse + value.PlaceInWarehouse + " - ";
                    var html = '<option value="' + value.WarehousrId + '">' + value.WarehouseNo + ' - ' + value.Quantity + '</option>';
                    $("#simpleMultiWarehouse").append(html);
                }
            });
            var index = parseInt($("#ItemModalIndex").val());
            $("#ItemReleaseDetails_" + index + "__PlaceInWarehouse").val(warehouse);
            
            return true;
        });
        $("#selectDepartment").on("click", function () {
            var index = parseInt($("#ItemModalIndex").val());
            $("#ItemReleaseDetails_" + index + "__PlaceInDepartment").val(textTillParent);
            $("#txtSelectedDepartmentName").text("Selected :" + textTillParent);
            $('#itemTreeSelector').modal('toggle');
            return true;
        });
        $("#treeSelector").click(function (event) {
            $('#itemTreeSelector').modal('show');
            event.preventDefault();
            $.fn.modal.Constructor.prototype.enforceFocus = function () { };
        });
        //open item pop up
        $('#itemSearcher').on('show', function () {
            //clear DDL required value label
            $("#RFIItemVariationDropDownListValidation").text("");
            $("#RFIItemVariationDropDownListValidation").removeClass("Error");

            //get the id from tr that is selected for the item popup
            var index = $(event.target).closest('tr').data('id');
            $("#ItemModalIndex").val(index);
            //get item's values
            var isItemDescription = $("#ItemReleaseDetails_" + index + "__IsItemDescription").val();
            var isItemSKU = $("#ItemReleaseDetails_" + index + "__IsItemSKU").val();
            var itemVariationId = $("#ItemReleaseDetails_" + index + "__ItemVariationId").val();
            var placeInDepartment = $("#ItemReleaseDetails_" + index + "__PlaceInDepartment").val();
            // clear selected department label text
            $("#txtSelectedDepartmentName").text("");

            //set modal fields according to modal values
            $("#RFIItemVariationDropDownList").select2("val", itemVariationId); //set the value

            if (isItemDescription == "false" || isItemDescription == "False" || isItemDescription == "") {
                $('#ItemDescriptionModalChk').attr('checked', false);
            } else {
                $('#ItemDescriptionModalChk').attr('checked', true);
            }

            if (isItemSKU == "false" || isItemSKU == "False" || isItemSKU == "") {
                $('#ItemSKUModalChk').attr('checked', false);
            } else {
                $('#ItemSKUModalChk').attr('checked', true);
            }
            $("#txtSelectedDepartmentName").text("Selected :" + placeInDepartment);
        });
        $('#warhouseSelector').on('show', function () {
            $("#simpleMultiWarehouse").empty();
            // get warehouse
            var warehouse = "";
            var index = $(event.target).closest('tr').data('id');
            var itemVariationId = $("#ItemReleaseDetails_" + index + "__ItemVariationId").val();
            $.each(parsedWarehouses, function (key, value) {
                if (value.ItemVariationId == itemVariationId) {
                    warehouse = warehouse + value.PlaceInWarehouse + " - ";
                    var html = '<option value="' + value.WarehousrId + '">' + value.WarehouseNo + ' - ' + value.Quantity + '</option>';
                    $("#simpleMultiWarehouse").append(html);
                }
            });
        });
        //reactivateCount();
        $("#importEx").on("click", function () {
            var excel = $("#WYSIWYG_Editor_-_Minimum_Options iframe").contents().find("body table");
            var coln = $(excel).find("tr:first td").length;
            var count = 0;
            var x = 0;
            if (coln == 3) {
                var index = 0;
                $(excel).find("tr").each(function () {
                    var y = 0;
                    var t1 = "";
                    var t2 = 0;
                    var t3 = 0;
                    var t4 = 0;
                    $(this).find("td").each(function () {
                        if (y == 0) {
                            t1 = $(this).text();
                        }
                        else if (y == 1) {
                            t2 = $(this).text();
                        }
                        else if (y == 2) {
                            t3 = parseInt($(this).text());
                        }
                        y++;
                    });
                    t4 = t3 * t2;
                    var html1 = "<tr data-id=" + index + ">" +
                            "<td style='display:none'>" +
                                "<input name='ItemReleaseDetails.Index' type='hidden' value='" + index + "' />" +
                                "<input name='ItemReleaseDetails[" + index + "].IsItemDescription' id='ItemReleaseDetails_" + index + "__IsItemDescription' type='hidden' />" +
                                "<input name='ItemReleaseDetails[" + index + "].IsItemSKU' id='ItemReleaseDetails_" + index + "__IsItemSKU' type='hidden' />" +
                                "<input name='ItemReleaseDetails[" + index + "].ItemVariationId' id='ItemReleaseDetails_" + index + "__ItemVariationId' type='hidden' />" +
                                "<input name='ItemReleaseDetails[" + index + "].PlaceInDepartment' id='ItemReleaseDetails_" + index + "__PlaceInDepartment' type='hidden' />" +
                            "</td>" +
                            "<td>" +
                                "<div class=\"control-group row-fluid\">" +
                                    "<div class=\"span1\">" +
                                        "<label class=\"control-label serialNumber\">" + index + "</label>" +
                                    "</div>" +
                                "</div>" +
                            "</td>" +
                            "<td>" +
                                "<textarea rows=\"3\" id='ItemReleaseDetails_" + index + "__ItemDetails' class=\"auto-resize toBeDisable\" data-val=\"true\" data-val-required=\"The Item Details field is required.\" name=\"ItemReleaseDetails[" + index + "].ItemDetails\">" + t1 + "</textarea>" +
                                "<button type=\"button\" class=\"btn itemAdder btnDisable\" data-toggle=\"modal\" data-target=\"#itemSearcher\">+</button>" +
                                "<span class=\"field-validation-valid required\" data-valmsg-for=\"ItemReleaseDetails[" + index + "].ItemDetails\" data-valmsg-replace=\"true\"></span>" +
                            "</td>" +
                            "<td>" +
                                "<textarea rows=\"2\" id='ItemReleaseDetails_" + index + "__PlaceInWarehouse' class=\"auto-resize toBeDisable\" data-val=\"true\" data-val-required=\"The Warehouse field is required.\" name=\"ItemReleaseDetails[" + index + "].PlaceInWarehouse\">" + t2 + "</textarea>" +
                                "<button type=\"button\" class=\"btn itemAdder btnDisable\" data-toggle=\"modal\" data-target=\"#warhouseSelector\">+</button>" +
                                "<span class=\"field-validation-valid required\" data-valmsg-for=\"ItemReleaseDetails[" + index + "].PlaceInWarehouse\" data-valmsg-replace=\"true\"></span>" +
                            "</td>" +
                            "<td class=\"quantity\">" +
                                "<input id='ItemReleaseDetails_" + index + "__ItemQty' value=\"" + t3 + "\" class='n1 toBeDisable' type='text' name='ItemReleaseDetails[" + index + "].ItemQty' data-val='true' data-val-number='The field Item Qty must be a number.' data-val-range='Please enter valid quantity' data-val-range-max='2147483647' data-val-range-min='1' data-val-required='The Item Qty field is required.'>" +
                                "<span class='field-validation-valid required' data-valmsg-for='ItemReleaseDetails[" + index + "].ItemQty' data-valmsg-replace='true'></span>" +
                            "</td>" +
                            "<td class='delete'>" +
                                "<i class='icon-photon minus deleteRow btnDisable'></i>" +
                            "</td>" +
                        "</tr>";
                    index = index + 1;
                    if (count == 0) {
                        $('.qouteAdd').html("");
                    }
                    $('.qouteAdd').append(html1);
                    reActivateDelete();
                    //reactivateCount();
                    count++;
                });
                activateSerial();
            }
            else {
                $.pnotify({
                    title: 'Sorry',
                    type: 'info',
                    text: 'The sheet you are trying to import is not supported, please check if the feilds match.'
                });
            }
        });
        $("#selectBoxFilter").select2();
        $("#Requester").on("change", function () {
            var customerId = parseInt($(this).val());
            if (isNaN(customerId)) {
                customerId = 0;
            }
            if (customerId == 0) {
                $("#RfiId").empty();
                $("#RfiId").append(
                        $('<option></option>').val(0).html("none")
                    );
                $(".select2me").select2("destroy");
                $('.select2me').select2({
                    //placeholder: "Select",
                });
                $("#DeliveryInfoE").val("");
                $("#DeliveryInfoA").val("");
                CKEDITOR.instances['DeliveryInfoEn'].setData("");
                CKEDITOR.instances['DeliveryInfoAr'].setData("");
                return true;
            }
            var customersList = '@Html.Raw(Json.Encode(Model.Customers))';
            var parsed = JSON.parse(customersList);
            $.each(parsed, function (key, value) {
                if (value.CustomerId == customerId) {
                    $("#DeliveryInfoE").val(value.CustomerAddress);
                    $("#DeliveryInfoA").val(value.CustomerAddress);
                    CKEDITOR.instances['DeliveryInfoEn'].setData(value.CustomerAddress);
                    CKEDITOR.instances['DeliveryInfoAr'].setData(value.CustomerAddress);
                }
            });
            var url = siteUrl + "/Inventory/ItemRelease/GetCustomerRfis";
            ajaxLoader();
            $.ajax({
                url: url,
                type: 'GET',
                dataType: "json",
                data: {
                    customerId: customerId
                },
                success: function (data) {
                    populateRFIDDL(data);
                },
                error: function (e) {
                    $.unblockUI();
                    alert('Error=' + e.toString());
                }
            });
        });
        $("#RfiId").on("change", function () {
            var rfiId = parseInt($("#RfiId").val());
            if (rfiId == 0) {
                $("#OrderNumber").val("");
            }
            $.each(orderNo, function (key, value) {
                if (value.rfiId == rfiId) {
                    $("#OrderNumber").val(value.orderNo);
                }
            });
        });
        $(".addWar").click(function () {
            dropAllWar();
            $("#simpleMultiWarehouse option:selected").each(function () {
                var warId = $(this).val();
                var warName;
                $.each(parsedWarehouses, function (key, value) {
                    if (value.WarehousrId == warId) {
                        warName = value.WarehouseNo;
                    }
                });
                var html =
                    '<div class="control-group row-fluid warhouses">' +
                        '<div class="span3">' +
                            '<label class="control-label" for="createdBy">' + warName + ' </label>' +
                        '</div>' +
                        '<div class="span7"> ' +
                            '<div class="controls">' +
                                '<input  type="text" for="numbers" value="0" name="ItemRelease.ItemReleaseQuantities['+ 1 +'].Quantity">' +
                            '</div>' +
                        '</div>' +
                        '<div class="span1 span-inset">' +
                            '<button type="button" class="btn dropWar">-</button>' +
                        '</div>' +
                    '</div>';
                $('.warhouseSelection').append(html);
                dropWarhouse();
            });
        });
        function dropWarhouse() {
            $(".dropWar").click(function () {
                $(this).parents().eq(1).remove();
            });
        }
        function dropAllWar() {
            $(".warhouses").remove();
        }
    });

    function AddEdit() {
        var isDetail;
        var val = '@userPermissionsSet.Contains("ItemReleaseCreate")';
        if (val == 'True') {
            isDetail = false;
        } else {
            isDetail = true;
        }
        if (isDetail) {

        } else {
            $('.btnDisable').removeClass('disableList');
            $('.disableDdl').select2('enable');
            $('.' + 'toBeDisable' + ':input').attr('readonly', false);
            CKEDITOR.replace('DeliveryInfoEn', {
                filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
            });
            CKEDITOR.replace('DeliveryInfoAr', {
                filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
            });
            //$("#detailEditor").hide();
            //$("#CKEditor").show();
            $("#EditRecord").hide();
            $("#SubmitRecord").show();
        }
    }

    $("#edit").on('click', function () {
        AddEdit();
    });
    $('#tiny').elrte({
        lang: "en",
        styleWithCSS: false,
        height: 200,
        toolbar: 'tiny'
    });
    function getModalControlsValues() {
        //get item's values
        var isItemDescription = $('#ItemDescriptionModalChk').is(':checked');
        var isItemSku = $('#ItemSKUModalChk').is(':checked');
        var itemVariationId = $("#RFIItemVariationDropDownList").val();

        //set item's values
        var index = $("#ItemModalIndex").val();
        $("#ItemReleaseDetails_" + index + "__IsItemDescription").val(isItemDescription);
        $("#ItemReleaseDetails_" + index + "__IsItemSKU").val(isItemSku);
        $("#ItemReleaseDetails_" + index + "__ItemVariationId").val(itemVariationId);

        //set item sku and description in details text area
        var rfiItems = '@Html.Raw(Json.Encode(Model.ItemVariationDropDownList))';
        var parsedRfiItems = JSON.parse(rfiItems);

        $.each(parsedRfiItems, function (key, value) {
            if (value.ItemVariationId == itemVariationId) {
                $("#RifItem_" + index + "__ItemDetails").val("");
                var textToAppend = "";
                if ('@direction' == "ltr") {
                    textToAppend = textToAppend + "Name: " + value.ItemNameE;
                } else {
                    textToAppend = textToAppend + "Name: " + value.ItemNameA;
                }
                if (isItemSku) {
                    textToAppend = textToAppend + "\nSKU Code: " + value.SKUCode;
                }
                if (isItemDescription) {
                    if ('@direction' == "ltr") {
                        textToAppend = textToAppend + "\nDescription: " + value.ItemVariationDescriptionE;
                    } else {
                        textToAppend = textToAppend + "\nDescription: " + value.ItemVariationDescriptionA;
                    }
                }
                $("#ItemReleaseDetails_" + index + "__ItemDetails").val(textToAppend);
            }
        });

        $('#itemSearcher').modal('toggle');
    };
    function reActivateDelete() {
        $('.deleteRow').on("click", function () {
            var count = $('.qouteAdd tr').length;
            if (count > 1) {
                $(this).parent().parent().remove();
                /*
                        var x = 0;
                $('.qouteAdd tr .n3').each(function(){

                     x  = x + parseInt($(this).val());

                });
                    $('#subtotal').val(x);
                    discount();
                    */
            }
            activateSerial();
        });
    }
    function activateSerial() {
        var count = $('.qouteAdd tr').length;
        var add = 0;
        $('.qouteAdd tr').each(function () {
            add++;
            $(this).find(".serialNumber").text(add);
        });
    }
    function populateRFIDDL(data) {
        $("#RfiId").empty();
        if (data.length > 0) {
            orderNo = [];
            $("#RfiId").append(
                $('<option></option>').val(0).html("--Select--")
            );
            for (var i = 0; i < data.length; i++) {
                $("#RfiId").append(
                    $('<option></option>').val(data[i].RFIId).html(data[i].RFIId)
                );
                var order = {
                    rfiId: data[i].RFIId,
                    orderNo: data[i].OrderNumber
                };
                orderNo.push(order);
            }
        } else {
            $("#RfiId").append(
                $('<option></option>').val(0).html("none")
            );
        }
        $(".select2me").select2("destroy");
        $('.select2me').select2({
            //placeholder: "Select",
        });
        $.unblockUI();
    }
    function jsTreeClick(event) {
        return true;
    }
</script>