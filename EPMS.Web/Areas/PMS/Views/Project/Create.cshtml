@model EPMS.Web.ViewModels.Project.ProjectViewModel

@{
    ViewBag.Title = EPMS.Web.Resources.PMS.Project.NewProject;
    var direction = EPMS.Web.Resources.Shared.Common.TextDirection;
    var pageheading = "";
    var breadcrumb="";
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (Model.Project.ProjectId > 0)
    {
        ViewBag.Title=EPMS.Web.Resources.PMS.Project.Edit + " " + (direction == "ltr" ? " " + Model.Project.NameE : " " + Model.Project.NameA);
        pageheading = ViewBag.Title;
        breadcrumb = ViewBag.Title;
    }
    else
    {
        ViewBag.Title = EPMS.Web.Resources.PMS.Project.NewProject;
        breadcrumb = ViewBag.Title;
        pageheading = EPMS.Web.Resources.PMS.Project.AddNewProject;
    }
}
<!-- Navigation Bar Start-->
<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/PMS/Project/Index">@EPMS.Web.Resources.PMS.Project.ProjectsList</a>
        </li>
        <li class="current">
            @breadcrumb
        </li>
    </ul>
</div>
<!-- Navigation Bar End-->
<!-- Page Heading Start-->
<header>
    <i class="icon-big-notepad"></i>
    <h2>
        <small> @pageheading </small>
    </h2>
</header>
<!-- Page Heading End-->
<!--Notifications begin-->
@Html.Partial("_Alert")
<!--Notifications end-->
@using (Html.BeginForm("Create", "Project", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    <div class="container-fluid">

        @Html.HiddenFor(model => model.DocsNames, new { @id = "DocsNames" })
        @Html.HiddenFor(model => model.Project.ProjectId)
        @Html.HiddenFor(model => model.Project.RecCreatedDate)
        @Html.HiddenFor(model => model.Project.RecCreatedBy)
        <!--Input Field begin-->
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.PMS.Project.ProjectNameE</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Project.NameE, new { @id = "ProjectNameE" })
                    @Html.ValidationMessageFor(m => m.Project.NameE, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.PMS.Project.ProjectNameAr</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Project.NameA, new { @id = "ProjectNameA" })
                    @Html.ValidationMessageFor(m => m.Project.NameA, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.PMS.Project.ClientName</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @(direction == "ltr" ? Html.DropDownListFor(x => x.Project.CustomerId, new SelectList(Model.Customers, "CustomerId", "CustomerNameE"), EPMS.Web.Resources.PMS.Project.SelectClientName, new { @class = "select2me", @id = "Client" }) : Html.DropDownListFor(x => x.Project.CustomerId, new SelectList(Model.Customers, "CustomerId", "CustomerNameA"), EPMS.Web.Resources.PMS.Project.SelectClientName, new { @class = "select2me", @id = "Client" }))
                    @Html.ValidationMessageFor(m => m.Project.CustomerId, "", new { @class = "required" })
                </div>
            </div>

        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.PMS.Project.OrderNo</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @if (Model.Project.CustomerId > 0)
                    {
                        @Html.DropDownListFor(m => m.Project.OrderId, new SelectList(Model.Orders, "OrderId", "OrderNo"), "", new { @id = "OrderNo" })
                    }
                    else
                    {
                        @Html.DropDownListFor(m => m.Project.OrderId, Enumerable.Empty<SelectListItem>(), "none", new { @id = "OrderNo" })
                    }
                    @Html.ValidationMessageFor(m => m.Project.OrderId, "", new { @class = "required" })
                </div>
            </div>

        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.PMS.Project.ProjectSerialNo</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Project.SerialNo, new { @id = "ProjectSerialNo", @readonly = "readonly" })
                </div>
            </div>
        </div>




        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.PMS.Project.DescriptionE</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextAreaFor(model => model.Project.DescriptionE, new { @id = "DescriptionE" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.PMS.Project.DescriptionA</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextAreaFor(model => model.Project.DescriptionA, new { @id = "DescriptionA" })
                </div>
            </div>
        </div>
        <!--Input Field begin-->

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">
                    @EPMS.Web.Resources.PMS.Project.StartDate
                    <a href="javascript:;" class="bootstrap-tooltip" data-placement="top" data-original-title="(dd/mm/yyyy)"><i class="icon-photon info-circle"></i></a>
                </label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Project.StartDate, new { @class = "datepickerGregorian cursorHand span3", @id = "StartDateE", @readonly = true, @placeholder = "English", onchange = "GregorianToHijri(this,'#StartDateA')" })
                    @Html.TextBox("Start Date", null, new { @class = "datepickerArabic cursorHand span3", @id = "StartDateA", @readonly = true, @placeholder = "Arabic", onchange = "HijriToGregorian(this,'#StartDateE')" })
                </div>
            </div>
        </div>
        <!--Input Field begin-->

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">
                    @EPMS.Web.Resources.PMS.Project.EndDate
                    <a href="javascript:;" class="bootstrap-tooltip" data-placement="top" data-original-title="(dd/mm/yyyy)"><i class="icon-photon info-circle"></i></a>
                </label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Project.EndDate, new { @class = "datepickerGregorian cursorHand span3", @id = "EndDateE", @readonly = true, @placeholder = "English", onchange = "GregorianToHijri(this,'#EndDateA')" })
                    @Html.TextBox("Start Date", null, new { @class = "datepickerArabic cursorHand span3", @id = "EndDateA", @readonly = true, @placeholder = "Arabic", onchange = "HijriToGregorian(this,'#EndDateE')" })
                </div>
            </div>
        </div>
        
       <!--Input Field begin-->
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">@EPMS.Web.Resources.PMS.Project.ProjectPrice</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.Project.Price, new { @id = "ProjectPrice", onchange = "Profit()" })
                    </div>
                </div>
            </div>
        <!--Input Field end-->
@if (Model.Project.ProjectId > 0)
{
            <div class="alert alert-info alert-block">
                <i class="icon-alert icon-alert-info"></i>
                <strong><a>@EPMS.Web.Resources.PMS.Project.Tasks</a></strong>
            </div>

        <!--Sortable Responsive Table begin-->
            <div class="row-fluid">
                <div class="span12">
                    <table id="TasksTable" class="table table-striped table-responsive">
                        <thead>
                            <tr>
                                <th></th>
                                <th>@EPMS.Web.Resources.PMS.Project.Tasks</th>
                                <th>@EPMS.Web.Resources.PMS.Project.TaskDate</th>
                                <th>@EPMS.Web.Resources.PMS.Project.TaskPreReq</th>
                                <th>@EPMS.Web.Resources.PMS.Project.Employees</th>
                                <th>@EPMS.Web.Resources.PMS.Project.Progress</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.ProjectTasks.ToList())
                            {
                                <tr>
                                    <td>@item.TaskId</td>
                                    <td><a href="/PMS/Task/Create/@item.TaskId">@item.TaskNameE</a></td>
                                    <td>@(Convert.ToDateTime(item.StartDate).ToShortDateString())</td>
                                    <td>@item.PreReqTasks</td>
                                    <td>@item.EmployeesAssigned</td>
                                    <td>
                                        <div class="progress progress-info">
                                            <div class="bar" style="width: @item.TaskProgress%">@item.TaskProgress%</div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        <!--Sortable Responsive Table end-->
        <!--Input Field begin-->
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">@EPMS.Web.Resources.PMS.Project.TotalTasksCost</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.Project.TotalTasksCost, new { @id = "TotalTasksCost", @readonly = true })
                    </div>
                </div>
            </div>
        <!--Input Field end-->
        <!--Input Field begin-->
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">@EPMS.Web.Resources.PMS.Project.OtherCost</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.Project.OtherCost, new { @id = "ProjectOtherCost", onchange = "Profit()" })
                    </div>
                </div>
            </div>
        <!--Input Field end-->
        <!--Input Field begin-->
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">@EPMS.Web.Resources.PMS.Project.Profit</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.Project.Profit, new { @id = "ProjectProfit", @readonly = true })
                    </div>
                </div>
            </div>
        <!--Input Field end-->
        <!--Input Field begin-->
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">@EPMS.Web.Resources.PMS.Project.Progress</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.Project.ProgressTotal, new { @id = "ProgressTotal" })
                    </div>
                </div>
            </div>
        <!--Input Field end-->



            <div class="alert alert-info alert-block">
                <i class="icon-alert icon-alert-info"></i>
                <strong>@EPMS.Web.Resources.PMS.Project.InstallmentPlan</strong>
            </div>


        <!--Sortable Responsive Table begin-->
            <div class="row-fluid">
                <div class="span12">
                    <table id="InstallmentTable" class="table table-striped table-responsive">
                        <thead>
                            <tr>
                                <th></th>
                                <th>
                                    @if (Model.Installment != null)
                                    {
                                        <a href="~/CMS/Orders/Create/@Model.Installment.OrderId">@EPMS.Web.Resources.PMS.Project.Installment</a>
                                    }
                                    else
                                    {
                                        @EPMS.Web.Resources.PMS.Project.Installment
                                    }
                                    
                                </th>
                                <th>@EPMS.Web.Resources.PMS.Project.DueAtProjectPorgress</th>
                                <th>@EPMS.Web.Resources.PMS.Project.MethodOfPayment</th>
                                <th>@EPMS.Web.Resources.PMS.Project.Paid</th>
                                <th>@EPMS.Web.Resources.PMS.Project.CreateShowReceipt</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Installment != null)
                            {
                                <tr>
                                    <td>@Model.Installment.QuotationId</td>
                                    <td>@Model.Installment.FirstInstallement</td>
                                    <td>
                                        <div class="progress progress-info">
                                            <div class="bar" style="width: @Model.Installment.FirstInsDueAtCompletion%">@Model.Installment.FirstInsDueAtCompletion%</div>
                                        </div>
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td>@Model.Installment.QuotationId</td>
                                    <td>@Model.Installment.SecondInstallment</td>
                                    <td>
                                        <div class="progress progress-info">
                                            <div class="bar" style="width: @Model.Installment.SecondInsDueAtCompletion%">@Model.Installment.SecondInsDueAtCompletion%</div>
                                        </div>
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td>@Model.Installment.QuotationId</td>
                                    <td>@Model.Installment.ThirdInstallment</td>
                                    <td>
                                        <div class="progress progress-info">
                                            <div class="bar" style="width: @Model.Installment.ThirdInsDueAtCompletion%">@Model.Installment.ThirdInsDueAtCompletion%</div>
                                        </div>
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <td>@Model.Installment.QuotationId</td>
                                    <td>@Model.Installment.FourthInstallment</td>
                                    <td>
                                        <div class="progress progress-info">
                                            <div class="bar" style="width: @Model.Installment.FourthInsDueAtCompletion%">@Model.Installment.FourthInsDueAtCompletion%</div>
                                        </div>
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                            }
                            
                        </tbody>

                    </table>
                </div>
            </div>
        <!--Sortable Responsive Table end-->

        }


        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.PMS.Project.ProjectStatus</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @Html.DropDownListFor(model => model.Project.Status, new[]
                    {
                        new SelectListItem { Value = "1" , Text = EPMS.Web.Resources.Shared.Common.OnGoing },
                        new SelectListItem { Value = "2" , Text = EPMS.Web.Resources.Shared.Common.OnHold },
                        new SelectListItem { Value = "3" , Text = EPMS.Web.Resources.Shared.Common.Canceled },
                        new SelectListItem { Value = "4" , Text = EPMS.Web.Resources.Shared.Common.Finished }
                    }, new { @id = "ProjectStatusDDL" })
                </div>
            </div>

        </div>



        <!--Input Field begin-->
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.PMS.Project.NotesE</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextAreaFor(model => model.Project.NotesE, new { @id = "NotesE" })
                </div>
            </div>
        </div>
        <!--Input Field begin-->
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.PMS.Project.NotesA</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextAreaFor(model => model.Project.NotesA, new { @id = "NotesA" })
                </div>
            </div>
        </div>


        <!--Input Field begin-->
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.PMS.Project.NotesCustomerE</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextAreaFor(model => model.Project.NotesForCustomerE, new { @id = "NotesForCustomerE" })
                </div>
            </div>
        </div>
        <!--Input Field begin-->
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.PMS.Project.NotesCustomerA</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextAreaFor(model => model.Project.NotesForCustomerA, new { @id = "NotesForCustomerA" })
                </div>
            </div>
        </div>
        <!--Input Field end-->
        <!--Drag And Drop Upload begin-->
        <div id="Drag_And_Drop_Upload" class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="inputField">
                    @EPMS.Web.Resources.PMS.Project.Documents<a href="javascript:;" class="bootstrap-tooltip" data-placement="top" data-original-title="@EPMS.Web.Resources.PMS.Project.FileSize"><i class="icon-photon info-circle"></i></a>
                </label>
            </div>
            <div class="span9 row-fluid">
                <div class="upload-boxes row-fluid">
                    <div class="span3" id="upload"></div>
                    <div class="span9" id="uploaded"></div>
                </div>
            </div>

        </div>
        @if (Model.ProjectDocsNames != null)
        {
            <div class="control-group row-fluid">
                @foreach (var doc in Model.ProjectDocsNames)
                {
                    <div class="controls">
                        <div class="span-inset">
                            <button type="button" class="btn" onclick="DeleteDoc(this,@doc.Id)">@EPMS.Web.Resources.PMS.Project.DeleteFile @doc.FileName</button>
                        </div>
                    </div>
                }
            </div>
        }
        <!--Drag And Drop Upload end-->
        <div class="control-group row-fluid">
            <div class="span3 span-inset">
                @if (Model.Project.ProjectId > 0)
                {
                    <button type="submit" class="btn">@EPMS.Web.Resources.PMS.Project.UpdateProject</button>
                }
                else
                {
                    <button type="submit" class="btn">@EPMS.Web.Resources.PMS.Project.CreateProject</button>
                }
            </div>

        </div>
    </div>
    <!-- end container -->

}
<script src="~/RichTextEditor/ckeditor.js"></script>
<script src="~/Scripts/plugins/jquery.blockUI.js"></script>
<script>
    $(document).ready(function () {
        var siteUrl = $('#siteURL').val();

        CKEDITOR.replace('DescriptionA');
        CKEDITOR.replace('DescriptionE');
        CKEDITOR.replace('NotesA');
        CKEDITOR.replace('NotesE');
        CKEDITOR.replace('NotesForCustomerA');
        CKEDITOR.replace('NotesForCustomerE');
        $('#TasksTable,#InstallmentTable').dataTable({
            "sPaginationType": "bootstrap",
            "aoColumns": [
                { "bVisible": false },
                  null,
                  null,
                  null,
                  null,
                  null
            ],
            "fnInitComplete": function () {
                $(".dataTables_wrapper select").select2({
                    dropdownCssClass: 'noSearch'
                });
            }
        });
        //Convert Gregorian to Hijri
        if ($("#StartDateE").val() != null && $("#StartDateE").val() != "") {
            $("#StartDateA").val(ConvertDates($("#StartDateE").val(), "gregorian", "islamic"));
        }
        if ($("#EndDateE").val() != null && $("#EndDateE").val() != "") {
            $("#EndDateA").val(ConvertDates($("#EndDateE").val(), "gregorian", "islamic"));
        }


        var errors = "";
        var url = "/PMS/Project/UploadDocuments";
        $('#upload').mfupload({

            type: '',   //all types
            maxsize: 1,
            post_upload: url,
            folder: "./",
            ini_text: "@EPMS.Web.Resources.PMS.Project.DocumentUpload",
            over_text: "@EPMS.Web.Resources.PMS.Project.DocumentHoverText",
            over_col: '#666666',
            over_bkcol: '#f0f0f0',

            init: function () {
                $("#uploaded").empty();
            },

            start: function (result) {
                $("#uploaded").append("<div id='FILE" + result.fileno + "' class='files'>" + result.filename + "<div class='progress progress-info progress-thin'><div class='bar' id='PRO" + result.fileno + "'></div></div></div>");
            },

            loaded: function (result) {
                $("#PRO" + result.fileno).remove();
                $("#FILE" + result.fileno).html("Uploaded: " + result.filename + " (" + result.size + ")");
                addDocName(result.filename);
            },

            progress: function (result) {
                $("#PRO" + result.fileno).css("width", result.perc + "%");
            },

            error: function (error) {
                errors += error.filename + ": " + error.err_des + "\n";
            },

            completed: function () {
                if (errors != "") {
                    alert(errors);
                    errors = "";
                }
            }
        });

        $("#Client").on("change", function () {
            var customerId = $(this).val();
            var url = siteUrl + "/PMS/Project/GetCustomerOrders";
            if (customerId > 0) {
                $("#ClientName").val($("#Client option:selected").text());
                //$('#SearchRequest_JobId').empty();
                $.blockUI({
                    message: '<img src="/Images/Gallery/ajax_loader.gif" style="width:75px; height:75"/>',
                    css: { backgroundColor: '#FFFAFA', left: "47%", width: "6%" }
                });
                $.ajax({
                    url: url,
                    type: 'GET',
                    dataType: "json",
                    data: {
                        customerId: customerId
                    },
                    success: function (data) {
                        populateDDL(data);
                    },
                    error: function (e) {
                        alert('Error=' + e.toString());
                    }
                });
            } else {

            }

        });
        //set order's no as a project name
        $("#OrderNo").on("change", function () {
            var orderTitle = $("#OrderNo option:selected").text();
            SetNames(orderTitle);
        });
    });

    function populateDDL(data) {
        $("#OrderNo").empty();
        if (data.length > 0) {
            for (var i = 0; i < data.length; i++) {
                $("#OrderNo").append(
                    $('<option></option>').val(data[i].OrderId).html(data[i].OrderNo)
                );
            }
            //set first order's no as a project name
            var orderTitle = data[0].OrderNo;
            SetNames(orderTitle);
        } else {
            $("#OrderNo").append(
                    $('<option></option>').val("").html("none")
                );
            SetNames("");
        }
        $.unblockUI();
    }
    function DeleteDoc(button,fileId) {
        var url = $('#siteURL').val() + "/PMS/Project/DeleteProjectDocument";
        $.ajax({
            url: url,
            type: 'GET',
            dataType: "json",
            data: {
                fileId: fileId
            },
            success: function (data) {
                if (data) {
                    button.remove();
                }
                $.unblockUI();
            },
            error: function (e) {
                alert('Error=' + e.toString());
            }
        });
    }
    function addDocName(filename) {
        var lis = $("#DocsNames").val();
        lis += filename + "~";
        $("#DocsNames").val(lis);
    }
    function ProjectNameReadOnly(flag) {
        $("#ProjectNameE").attr("readonly", flag);//empty project name
        $("#ProjectNameA").attr("readonly", flag);
    }
    function SetNames(value) {
        //$("#ProjectNameE").val(value);//empty project name
        //$("#ProjectNameA").val(value);
        $("#ProjectSerialNo").val(value);
        //if (value == "") {
        //    ProjectNameReadOnly(false);
        //} else {
        //    ProjectNameReadOnly(true);
        //}
    }
    function Profit() {
        var other=$("#ProjectOtherCost").val();//empty project name
        var price=$("#ProjectPrice").val();
        var cost=$("#TotalTasksCost").val();
        var profit = parseFloat(price) + parseFloat(other) - parseFloat(cost);
        $("#ProjectProfit").val(profit);
    }
</script>