@model EPMS.Web.ViewModels.Employee.EmployeeViewModel

@{
    ViewBag.Title = "EmployeeLV";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.MessageVM = TempData["message"];
}
<link href="~/Content/datatable/demo_table.css" rel="stylesheet" type="text/css" />
@*<link href="~/Content/datatable/demo_page.css" rel="stylesheet" type="text/css" />*@
<link href="~/Content/datatable/demo_table_jui.css" rel="stylesheet" type="text/css" />

<div class="mainbar" id="mainbar">

    <div class="page-head">
        <h2 class="pull-left">Employee List View</h2>

        <div class="clearfix"></div>


        <div class="clearfix"></div>

    </div>
    @*<div>
            @EPMS.Web.Resources.Shared.Common.Heading
        </div>*@
    <!-- Page heading ends -->
    <div class="container">
        <!-- Dashboard Graph starts -->
        <div class="row">
            <div class="col-md-12">
                <div class="customwidget">
                    <div class="customwidget-head">
                        &nbsp;
                        <a href="~/Employee/Employees">
                            <div class="pull-right"><input id="btnResetFltr" type="button" class="btn btn-danger" value="Reset" /></div>
                        </a>
                        &nbsp;
                        <div class="pull-right"><input id="btnFltr" type="button" class="btn btn-success" style="margin-right:15px;" value="Filter" /></div>
                        &nbsp;

                        <div class="clearfix"></div>
                    </div>
                    <div class="">
                        <div class="">
                            <!-- Form starts.  -->
                            <table>
                                <tr class="filterrow">
                                    <td>
                                        <label class="control-label col-lg-12">Employee Name </label>
                                    </td>
                                    <td>
                                        @Html.TextBox("SearchString", Model.SearchRequest.EmployeeFullName, new { @id = "EmployeeFullName", @class = "form-control", placeholder = "Search Employee Name" })
                                    </td>
                                    <td>
                                        <label class="control-label col-lg-12">Department</label>
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.Department.DepartmentId, new SelectList(Model.DepartmentList, "DepartmentId", "DepartmentName"), "Select Department", new { @class = "input-large form-control getJobTitles" })
                                    </td>
                                    <td>
                                        <label class="control-label col-lg-12">Job Title</label>
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.SearchRequest.EmployeeJobId, new SelectList(Model.JobTitleList, "JobId", "JobTitleName"), "Select Job Title", new { @class = "input-large form-control" })
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*<div id="divProcessing">
            <p>Processing, please wait . . . <img src="~/Content/Images/spinner.gif"></p>
        </div>*@
    <div class="container">
        <!-- Dashboard Graph starts -->
        <div class="row">
            <div class="col-md-12">
                <div class="customwidget">
                    <div class="customwidget-head">

                        <a href="~/Employee/AddEdit">
                            <div class="pull-right"><input type="button" class="btn btn-primary" value="Create New" /></div>
                        </a>
                        <div class="clearfix"></div>
                    </div>
                    <div class="">
                        <table id="employeeTable" class="table table-striped table-hover table-bordered dataTable no-footer responsive" style="border: 1px solid #ddd !important">
                            <thead>
                                <tr>
                                    <th title="Employee Name">Employee Name</th>
                                    <th title="Job Title">Job Title</th>
                                    <th title="Employee Department">Department</th>
                                    <th title="Employee Image">Employee Image</th>
                                    <th style="width: 75px;"></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                        <div class="add_delete_toolbar" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="~/Scripts/jquery.blockUI.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.searchabledropdown.js"></script>
    <script src="@Url.Content("~/Scripts/jquery.jeditable.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.dataTables.editable.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#mainbar').unblock();

            var siteUrl = $('#siteURL').val();
            var start = ('@Model.SearchRequest.PageNo' - 1) * '@Model.SearchRequest.PageSize';
            var isAsc = '@Model.SearchRequest.IsAsc' == "True" || '@Model.SearchRequest.IsAsc' == "true";
            var sortBy = ['@Model.SearchRequest.SortBy', isAsc ? 'asc' : 'desc'];
            var oTable = $('#employeeTable').dataTable({
                "iDisplayLength": 11,
                "displayStart": start || 0,
                "bFilter": false,
                "bLengthChange": false,
                "aaSorting": [sortBy],
                "columns": [
                    { "data": "EmployeeFullName" },
                    { "data": "JobTitleName" },
                    { "data": "DepartmentName" },
                    { "data": "EmployeeImagePath" },
                    {
                        "orderable": false,
                        "data": null,
                        "defaultContent": '<div class="btn-group"><button type="button" id="edit" class="btn btn-primary" style="margin-right: 2px;">Edit</button><button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown"><span class="caret"></span><span class="sr-only">Toggle Dropdown</span></button><ul class="dropdown-menu" role="menu"><li><a href="#" id="delete">Delete</a></ul></div>'

                    }
                ],
                "processing": true,
                "serverSide": true,
                "ajax": {
                    url: siteUrl + "/Employee/Employees",
                    type: "POST",
                    dataType: "json",
                    error: callError,
                    data: function(params) {
                        params.PageNo = Math.ceil(params.start / params.length) + 1;
                        if (params.PageNo === 0) {
                            params.PageNo = 1;
                        }
                        params.PageSize = params.length;
                        params.SortBy = params.order[0].column;
                        if (params.SortBy === 0) {
                            params.SortBy = 1;
                        }
                        params.IsAsc = params.order[0].dir === "asc";
                        params.EmployeeFirstName = $('#EmployeeFullName').val();
                        params.departmentId = $("#Department_DepartmentId").val();
                        params.JobTitleId = $("#SearchRequest_EmployeeJobId").val();

                    }
                }
            });
            //    .makeEditable({
            //    sUpdateURL: "~/Employee/AddEdit",
            //    sAddURL: "~/Employee/AddEdit",
            //    sDeleteURL: "~/Employee/Delete"
            //});

            function callError() {
            }

            $('#btnFltr').on('click', function () {
                oTable.fnDraw();
            });

            $(".getJobTitles").on("change", function () {
                $.blockUI.defaults.css.textColor = "red";
                $('#mainbar').block({
                    message: '<img src="/Content/Images/spinner.gif" style="width:5%; height:5%;"> Processing, please wait...',
                    css: { border: '1px solid #F13E46' }
                });
                setTimeout(function () {
                    var depId = $("#Department_DepartmentId").val();
                    if (depId > 0) {
                        $('#SearchRequest_EmployeeJobId').empty();
                        $.ajax({
                            url: siteUrl + "GetJobTitles",
                            type: 'GET',
                            dataType: "json",
                            data: {
                                deptId: depId
                            },
                            success: function (data) {
                                $('#mainbar').unblock();
                                populateDdl(data);
                            },
                            error: function (e) {
                                alert('Error=' + e.toString());
                            }
                        });
                    } else {
                        $('#mainbar').unblock();
                        $('#SearchRequest_JobId').empty();
                    }
                }, 1000);

            });
            function populateDdl(data) {
                for (var i = 0; i < data.length; i++) {
                    $('#SearchRequest_EmployeeJobId').append("<option value='" + data[i].JobTitleId + "'>" + data[i].JobTitleName + "</option>");
                }
            }
            // Edit
            $('#employeeTable').on('click', '#edit', function (e) {
                e.preventDefault();
                var nRow = $(this).parents('tr')[0];
                var aData = oTable.fnGetData(nRow);
                window.location.href = siteUrl + "/Employee/AddEdit?id=" + aData.EmployeeId;
            });
            // Delete
            $('#employeeTable').on('click', '#delete', function (e) {
                e.preventDefault();

                if (confirm("Are you sure to delete this record ?") == false) {
                    return;
                }

                var nRow = $(this).parents('tr')[0];
                var aData = oTable.fnGetData(nRow);
                var serviceUrl = siteUrl + '/Employee/Delete';
                $.ajax({
                    type: "POST",
                    url: serviceUrl,
                    data: "{ employeeId:" + aData.EmployeeId + "}",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    complete: function (data) {
                        if (data.responseJSON.status === 200) {
                            successFunc(data);
                        }
                        else {
                            errorFunc(data);
                        }
                    }
                });

                function successFunc(data) {

                    var totalRcd = oTable.fnSettings().fnRecordsTotal() - 1,//as success deleted one row
                        displayStart = oTable.fnSettings()._iDisplayStart,
                        displayLength = oTable.fnSettings()._iDisplayLength;

                    oTable.fnDeleteRow(nRow, null, false);
                    var page = Math.ceil(displayStart / displayLength);

                    if (totalRcd <= displayStart) {
                        oTable.fnPageChange(page - 1);
                    }
                    else {
                        oTable.fnPageChange(page);
                    }
                    toastr.success(data.responseJSON.response);
                }
                function errorFunc(error) {
                    toastr.error(error.responseJSON.response);
                }
            });
        });
    </script>
</div>