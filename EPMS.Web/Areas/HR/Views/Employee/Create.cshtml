@using System.Configuration
@model EPMS.Web.ViewModels.Employee.EmployeeDetailViewModel
@{
    ViewBag.Title = Model.EmployeeViewModel.PageTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var direction = EPMS.Web.Resources.Shared.Common.TextDirection;
    string[] module = (string[])Session["UserModules"];
}
<!-- Navigation Bar -->
<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/HR/Employee/Index">
                @EPMS.Web.Resources.HR.Employee.Employeelist
            </a>
        </li>
        @if (Model.EmployeeViewModel.Employee != null)
        {
            <li>
                @Model.EmployeeViewModel.EmployeeName
            </li>
        }
        else
        {
            <li>
                @EPMS.Web.Resources.HR.Employee.AddNew
            </li>
        }
    </ul>
</div>
<!-- Page heading -->
<header>
    <i class="icon-big-notepad"></i>
    @if (Model.EmployeeViewModel.Employee.EmployeeId > 0)
    {
        <h2><small>@Model.EmployeeViewModel.EmployeeName</small></h2>
    }
    else
    {
        <h2><small>@EPMS.Web.Resources.HR.Employee.AddNew</small></h2>
    }

    @if (Model.EmployeeViewModel.Employee != null)
    {
        if (Model.EmployeeViewModel.Employee.EmployeeId > 0)
        {
            <img class="employeeImg" src='@Model.EmployeeViewModel.ImagePath' alt="Employee" />
        }
    }
</header>

<!--Notifications begin-->
@Html.Partial("_Alert")
<!--Notifications end-->
<!-- Page heading ends -->
@using (Html.BeginForm("Create", "Employee", FormMethod.Post, new { @class = "form-horizontal", @id = "AddEditEmployeeForm", role = "form", enctype = "multipart/form-data" }))
{
    <div class="container-fluid">

        @Html.HiddenFor(model => model.EmployeeViewModel.Employee.EmployeeId)
        @Html.HiddenFor(model => model.EmployeeViewModel.OldAllowance.Allowance1)
        @Html.HiddenFor(model => model.EmployeeViewModel.OldAllowance.Allowance2)
        @Html.HiddenFor(model => model.EmployeeViewModel.OldAllowance.Allowance3)
        @Html.HiddenFor(model => model.EmployeeViewModel.OldAllowance.Allowance4)
        @Html.HiddenFor(model => model.EmployeeViewModel.OldAllowance.Allowance5)
        @Html.HiddenFor(model => model.EmployeeViewModel.Employee.EmployeeJobId)
        @Html.HiddenFor(model => model.EmployeeViewModel.Employee.EmployeeImagePath, new { @id = "EmployeeImage" })
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="EmployeeNameE">@EPMS.Web.Resources.HR.Employee.Name</label>
            </div>
            <div class="span9">

                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeNameE, new { @id = "EmployeeNameE", @class = "toBeRequired" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeNameE, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="EmployeeNameA">@EPMS.Web.Resources.HR.Employee.NameA</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeNameA, new { @id = "EmployeeNameA", @class = "toBeRequired" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeNameA, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="JobTitle">@EPMS.Web.Resources.HR.Employee.JobTitle</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @Html.DropDownListFor(model => model.EmployeeViewModel.Employee.JobTitleId, new SelectList(Model.EmployeeViewModel.JobTitleList, "JobTitleId", "JobTitleNameE"), "--Select--", new { @class = "select2me setDeptJobId", @id = "JobTitle" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.JobTitleId, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="DepartmentName">@EPMS.Web.Resources.HR.Employee.Department</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.JobTitle.DepartmentNameE, new { @id = "DepartmentName", @disabled = true })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="JobID">@EPMS.Web.Resources.HR.Employee.JobId</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.JobTitleId, new { @disabled = true, @id = "JobID" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="EmployeeJobId">@EPMS.Web.Resources.HR.Employee.EmployeeJobId</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeJobId, new { @id = "EmployeeJobId", @disabled = true })
                </div>
            </div>
        </div>
        <!--Drag And Drop Upload begin-->
        <div id="Drag_And_Drop_Upload" class="control-group row-fluid ignore">
            <div class="span3">
                <label class="control-label" for="inputField">
                    @EPMS.Web.Resources.HR.Employee.Image<a href="javascript:;" class="bootstrap-tooltip" data-placement="top" data-original-title="file size shouldn't exceed 1MB"><i class="icon-photon info-circle"></i></a>
                </label>
            </div>
            <div class="span9 row-fluid">
                <div class="upload-boxes row-fluid">
                    <div class="span3" id="upload"></div>
                    <div class="span9" id="uploaded"></div>
                </div>
            </div>
        </div>
        <!--Drag And Drop Upload end-->
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="MobileNumber">@EPMS.Web.Resources.HR.Employee.MobNumber</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeMobileNum, new { @id = "MobileNumber", @class = "toBeRequired" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeMobileNum, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="LandlineNumber">@EPMS.Web.Resources.HR.Employee.TelephoneNumber</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeLandlineNum, new { @id = "LandlineNumber", @class = "toBeRequired" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeLandlineNum, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Email">@EPMS.Web.Resources.HR.Employee.Email</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.Email, new { @id = "Email", @class = "toBeRequired" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.Email, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="MaritalStatus">@EPMS.Web.Resources.HR.Employee.MaritalStat</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @Html.DropDownListFor(model => model.EmployeeViewModel.Employee.MaritalStatus, new[] { new SelectListItem { Text = "--Select--", Value = "" }, new SelectListItem { Text = "Unmaried", Value = "1" }, new SelectListItem { Text = "Married", Value = "0" } }, new { @id = "MaritalStatus", @class = "select2me" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="EmployeeDOB">@EPMS.Web.Resources.HR.Employee.DOB</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeDOB, new { @class = "datepickerGregorian cursorHand span4", @id = "EmployeeDOB", @readonly = true, @placeholder = "Gregorian", onchange = "GregorianToHijri(this,'#EmpDateOfBirthArabic')" })
                    @Html.TextBox("Start Date", null, new { @class = "datepickerArabic cursorHand span4", @id = "EmpDateOfBirthArabic", @readonly = true, @placeholder = "Hijri", onchange = "HijriToGregorian(this,'#EmployeeDOB')" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeDOB, "", new { @class = "required" })
                </div>
                @*<div class="controls span4">
                        @Html.TextBox("Date",null, new { @class = "col-lg-2 datepickerArabic form-control cursorHand", @readonly = true, onchange = "HijriToGregorian(this,'#EmployeeDOB')", @id = "EmpDateOfBirthArabic" })
                        @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeDOB, String.Empty, new { @class = "required" })
                    </div>
                    <div class="controls span4">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeDOB, new { @class = "col-lg-2 datepickerGregorian form-control toBeRequired cursorHand", @id = "EmployeeDOB", @readonly = true, onchange = "GregorianToHijri(this, '#EmpDateOfBirthArabic')" })
                    </div>*@
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Nationality">@EPMS.Web.Resources.HR.Employee.Nationality</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @Html.DropDownListFor(model => model.EmployeeViewModel.Employee.EmployeeNationality, new[]
                    {
                    new SelectListItem { Value = "", Text = ""},
                    new SelectListItem { Value = "AF", Text = "AFGHANISTAN"}, 
                    new SelectListItem { Value = "AX", Text = "ÅLAND ISLANDS"}, 
                    new SelectListItem { Value = "AL", Text = "ALBANIA"}, 
                    new SelectListItem { Value = "DZ", Text = "ALGERIA"}, 
                    new SelectListItem { Value = "AS", Text = "AMERICAN SAMOA"}, 
                    new SelectListItem { Value = "AD", Text = "ANDORRA"}, 
                    new SelectListItem { Value = "AO", Text = "ANGOLA"}, 
                    new SelectListItem { Value = "AI", Text = "ANGUILLA"}, 
                    new SelectListItem { Value = "AQ", Text = "ANTARCTICA"}, 
                    new SelectListItem { Value = "AG", Text = "ANTIGUA AND BARBUDA"}, 
                    new SelectListItem { Value = "AR", Text = "ARGENTINA"}, 
                    new SelectListItem { Value = "AM", Text = "ARMENIA"}, 
                    new SelectListItem { Value = "AW", Text = "ARUBA"}, 
                    new SelectListItem { Value = "AU", Text = "AUSTRALIA"}, 
                    new SelectListItem { Value = "AT", Text = "AUSTRIA"}, 
                    new SelectListItem { Value = "AZ", Text = "AZERBAIJAN"}, 
                    new SelectListItem { Value = "BS", Text = "BAHAMAS"}, 
                    new SelectListItem { Value = "BH", Text = "BAHRAIN"}, 
                    new SelectListItem { Value = "BD", Text = "BANGLADESH"}, 
                    new SelectListItem { Value = "BB", Text = "BARBADOS"}, 
                    new SelectListItem { Value = "BY", Text = "BELARUS"}, 
                    new SelectListItem { Value = "BE", Text = "BELGIUM"}, 
                    new SelectListItem { Value = "BZ", Text = "BELIZE"}, 
                    new SelectListItem { Value = "BJ", Text = "BENIN"}, 
                    new SelectListItem { Value = "BM", Text = "BERMUDA"}, 
                    new SelectListItem { Value = "BT", Text = "BHUTAN"}, 
                    new SelectListItem { Value = "BO", Text = "BOLIVIA, PLURINATIONAL STATE OF"}, 
                    new SelectListItem { Value = "BQ", Text = "BONAIRE, SINT EUSTATIUS AND SABA"}, 
                    new SelectListItem { Value = "BA", Text = "BOSNIA AND HERZEGOVINA"}, 
                    new SelectListItem { Value = "BW", Text = "BOTSWANA"}, 
                    new SelectListItem { Value = "BV", Text = "BOUVET ISLAND"}, 
                    new SelectListItem { Value = "BR", Text = "BRAZIL"}, 
                    new SelectListItem { Value = "IO", Text = "BRITISH INDIAN OCEAN TERRITORY"}, 
                    new SelectListItem { Value = "BN", Text = "BRUNEI DARUSSALAM"}, 
                    new SelectListItem { Value = "BG", Text = "BULGARIA"}, 
                    new SelectListItem { Value = "BF", Text = "BURKINA FASO"}, 
                    new SelectListItem { Value = "BI", Text = "BURUNDI"}, 
                    new SelectListItem { Value = "KH", Text = "CAMBODIA"}, 
                    new SelectListItem { Value = "CM", Text = "CAMEROON"}, 
                    new SelectListItem { Value = "CA", Text = "CANADA"}, 
                    new SelectListItem { Value = "CV", Text = "CAPE VERDE"}, 
                    new SelectListItem { Value = "KY", Text = "CAYMAN ISLANDS"}, 
                    new SelectListItem { Value = "CF", Text = "CENTRAL AFRICAN REPUBLIC"}, 
                    new SelectListItem { Value = "TD", Text = "CHAD"}, 
                    new SelectListItem { Value = "CL", Text = "CHILE"}, 
                    new SelectListItem { Value = "CN", Text = "CHINA"}, 
                    new SelectListItem { Value = "CX", Text = "CHRISTMAS ISLAND"}, 
                    new SelectListItem { Value = "CC", Text = "COCOS (KEELING) ISLANDS"}, 
                    new SelectListItem { Value = "CO", Text = "COLOMBIA"}, 
                    new SelectListItem { Value = "KM", Text = "COMOROS"}, 
                    new SelectListItem { Value = "CG", Text = "CONGO"}, 
                    new SelectListItem { Value = "CD", Text = "CONGO, THE DEMOCRATIC REPUBLIC OF THE"}, 
                    new SelectListItem { Value = "CK", Text = "COOK ISLANDS"}, 
                    new SelectListItem { Value = "CR", Text = "COSTA RICA"}, 
                    new SelectListItem { Value = "CI", Text = "CÔTE D'IVOIRE"}, 
                    new SelectListItem { Value = "HR", Text = "CROATIA"}, 
                    new SelectListItem { Value = "CU", Text = "CUBA"}, 
                    new SelectListItem { Value = "CW", Text = "CURAÇAO"}, 
                    new SelectListItem { Value = "CY", Text = "CYPRUS"}, 
                    new SelectListItem { Value = "CZ", Text = "CZECH REPUBLIC"}, 
                    new SelectListItem { Value = "DK", Text = "DENMARK"}, 
                    new SelectListItem { Value = "DJ", Text = "DJIBOUTI"}, 
                    new SelectListItem { Value = "DM", Text = "DOMINICA"}, 
                    new SelectListItem { Value = "DO", Text = "DOMINICAN REPUBLIC"}, 
                    new SelectListItem { Value = "EC", Text = "ECUADOR"}, 
                    new SelectListItem { Value = "EG", Text = "EGYPT"}, 
                    new SelectListItem { Value = "SV", Text = "EL SALVADOR"}, 
                    new SelectListItem { Value = "GQ", Text = "EQUATORIAL GUINEA"}, 
                    new SelectListItem { Value = "ER", Text = "ERITREA"}, 
                    new SelectListItem { Value = "EE", Text = "ESTONIA"}, 
                    new SelectListItem { Value = "ET", Text = "ETHIOPIA"}, 
                    new SelectListItem { Value = "FK", Text = "FALKLAND ISLANDS (MALVINAS)"}, 
                    new SelectListItem { Value = "FO", Text = "FAROE ISLANDS"}, 
                    new SelectListItem { Value = "FJ", Text = "FIJI"}, 
                    new SelectListItem { Value = "FI", Text = "FINLAND"}, 
                    new SelectListItem { Value = "FR", Text = "FRANCE"}, 
                    new SelectListItem { Value = "GF", Text = "FRENCH GUIANA"}, 
                    new SelectListItem { Value = "PF", Text = "FRENCH POLYNESIA"}, 
                    new SelectListItem { Value = "TF", Text = "FRENCH SOUTHERN TERRITORIES"}, 
                    new SelectListItem { Value = "GA", Text = "GABON"}, 
                    new SelectListItem { Value = "GM", Text = "GAMBIA"}, 
                    new SelectListItem { Value = "GE", Text = "GEORGIA"}, 
                    new SelectListItem { Value = "DE", Text = "GERMANY"}, 
                    new SelectListItem { Value = "GH", Text = "GHANA"}, 
                    new SelectListItem { Value = "GI", Text = "GIBRALTAR"}, 
                    new SelectListItem { Value = "GR", Text = "GREECE"}, 
                    new SelectListItem { Value = "GL", Text = "GREENLAND"}, 
                    new SelectListItem { Value = "GD", Text = "GRENADA"}, 
                    new SelectListItem { Value = "GP", Text = "GUADELOUPE"}, 
                    new SelectListItem { Value = "GU", Text = "GUAM"}, 
                    new SelectListItem { Value = "GT", Text = "GUATEMALA"}, 
                    new SelectListItem { Value = "GG", Text = "GUERNSEY"}, 
                    new SelectListItem { Value = "GN", Text = "GUINEA"}, 
                    new SelectListItem { Value = "GW", Text = "GUINEA-BISSAU"}, 
                    new SelectListItem { Value = "GY", Text = "GUYANA"}, 
                    new SelectListItem { Value = "HT", Text = "HAITI"}, 
                    new SelectListItem { Value = "HM", Text = "HEARD ISLAND AND MCDONALD ISLANDS"}, 
                    new SelectListItem { Value = "VA", Text = "HOLY SEE (VATICAN CITY STATE)"}, 
                    new SelectListItem { Value = "HN", Text = "HONDURAS"}, 
                    new SelectListItem { Value = "HK", Text = "HONG KONG"}, 
                    new SelectListItem { Value = "HU", Text = "HUNGARY"}, 
                    new SelectListItem { Value = "IS", Text = "ICELAND"}, 
                    new SelectListItem { Value = "IN", Text = "INDIA"}, 
                    new SelectListItem { Value = "ID", Text = "INDONESIA"}, 
                    new SelectListItem { Value = "IR", Text = "IRAN, ISLAMIC REPUBLIC OF"}, 
                    new SelectListItem { Value = "IQ", Text = "IRAQ"}, 
                    new SelectListItem { Value = "IE", Text = "IRELAND"}, 
                    new SelectListItem { Value = "IM", Text = "ISLE OF MAN"}, 
                    new SelectListItem { Value = "IL", Text = "ISRAEL"}, 
                    new SelectListItem { Value = "IT", Text = "ITALY"}, 
                    new SelectListItem { Value = "JM", Text = "JAMAICA"}, 
                    new SelectListItem { Value = "JP", Text = "JAPAN"}, 
                    new SelectListItem { Value = "JE", Text = "JERSEY"}, 
                    new SelectListItem { Value = "JO", Text = "JORDAN"}, 
                    new SelectListItem { Value = "KZ", Text = "KAZAKHSTAN"}, 
                    new SelectListItem { Value = "KE", Text = "KENYA"}, 
                    new SelectListItem { Value = "KI", Text = "KIRIBATI"}, 
                    new SelectListItem { Value = "KP", Text = "KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF"}, 
                    new SelectListItem { Value = "KR", Text = "KOREA, REPUBLIC OF"}, 
                    new SelectListItem { Value = "KW", Text = "KUWAIT"}, 
                    new SelectListItem { Value = "KG", Text = "KYRGYZSTAN"}, 
                    new SelectListItem { Value = "LA", Text = "LAO PEOPLE'S DEMOCRATIC REPUBLIC"}, 
                    new SelectListItem { Value = "LV", Text = "LATVIA"}, 
                    new SelectListItem { Value = "LB", Text = "LEBANON"}, 
                    new SelectListItem { Value = "LS", Text = "LESOTHO"}, 
                    new SelectListItem { Value = "LR", Text = "LIBERIA"}, 
                    new SelectListItem { Value = "LY", Text = "LIBYA"}, 
                    new SelectListItem { Value = "LI", Text = "LIECHTENSTEIN"}, 
                    new SelectListItem { Value = "LT", Text = "LITHUANIA"}, 
                    new SelectListItem { Value = "LU", Text = "LUXEMBOURG"}, 
                    new SelectListItem { Value = "MO", Text = "MACAO"}, 
                    new SelectListItem { Value = "MK", Text = "MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF"}, 
                    new SelectListItem { Value = "MG", Text = "MADAGASCAR"}, 
                    new SelectListItem { Value = "MW", Text = "MALAWI"}, 
                    new SelectListItem { Value = "MY", Text = "MALAYSIA"}, 
                    new SelectListItem { Value = "MV", Text = "MALDIVES"}, 
                    new SelectListItem { Value = "ML", Text = "MALI"}, 
                    new SelectListItem { Value = "MT", Text = "MALTA"}, 
                    new SelectListItem { Value = "MH", Text = "MARSHALL ISLANDS"}, 
                    new SelectListItem { Value = "MQ", Text = "MARTINIQUE"}, 
                    new SelectListItem { Value = "MR", Text = "MAURITANIA"}, 
                    new SelectListItem { Value = "MU", Text = "MAURITIUS"}, 
                    new SelectListItem { Value = "YT", Text = "MAYOTTE"}, 
                    new SelectListItem { Value = "MX", Text = "MEXICO"}, 
                    new SelectListItem { Value = "FM", Text = "MICRONESIA, FEDERATED STATES OF"}, 
                    new SelectListItem { Value = "MD", Text = "MOLDOVA, REPUBLIC OF"}, 
                    new SelectListItem { Value = "MC", Text = "MONACO"}, 
                    new SelectListItem { Value = "MN", Text = "MONGOLIA"}, 
                    new SelectListItem { Value = "ME", Text = "MONTENEGRO"}, 
                    new SelectListItem { Value = "MS", Text = "MONTSERRAT"}, 
                    new SelectListItem { Value = "MA", Text = "MOROCCO"}, 
                    new SelectListItem { Value = "MZ", Text = "MOZAMBIQUE"}, 
                    new SelectListItem { Value = "MM", Text = "MYANMAR"}, 
                    new SelectListItem { Value = "NA", Text = "NAMIBIA"}, 
                    new SelectListItem { Value = "NR", Text = "NAURU"}, 
                    new SelectListItem { Value = "NP", Text = "NEPAL"}, 
                    new SelectListItem { Value = "NL", Text = "NETHERLANDS"}, 
                    new SelectListItem { Value = "NC", Text = "NEW CALEDONIA"}, 
                    new SelectListItem { Value = "NZ", Text = "NEW ZEALAND"}, 
                    new SelectListItem { Value = "NI", Text = "NICARAGUA"}, 
                    new SelectListItem { Value = "NE", Text = "NIGER"}, 
                    new SelectListItem { Value = "NG", Text = "NIGERIA"}, 
                    new SelectListItem { Value = "NU", Text = "NIUE"}, 
                    new SelectListItem { Value = "NF", Text = "NORFOLK ISLAND"}, 
                    new SelectListItem { Value = "MP", Text = "NORTHERN MARIANA ISLANDS"}, 
                    new SelectListItem { Value = "NO", Text = "NORWAY"}, 
                    new SelectListItem { Value = "OM", Text = "OMAN"}, 
                    new SelectListItem { Value = "PK", Text = "PAKISTAN"}, 
                    new SelectListItem { Value = "PW", Text = "PALAU"}, 
                    new SelectListItem { Value = "PS", Text = "PALESTINIAN TERRITORY, OCCUPIED"}, 
                    new SelectListItem { Value = "PA", Text = "PANAMA"}, 
                    new SelectListItem { Value = "PG", Text = "PAPUA NEW GUINEA"}, 
                    new SelectListItem { Value = "PY", Text = "PARAGUAY"}, 
                    new SelectListItem { Value = "PE", Text = "PERU"}, 
                    new SelectListItem { Value = "PH", Text = "PHILIPPINES"}, 
                    new SelectListItem { Value = "PN", Text = "PITCAIRN"}, 
                    new SelectListItem { Value = "PL", Text = "POLAND"}, 
                    new SelectListItem { Value = "PT", Text = "PORTUGAL"}, 
                    new SelectListItem { Value = "PR", Text = "PUERTO RICO"}, 
                    new SelectListItem { Value = "QA", Text = "QATAR"}, 
                    new SelectListItem { Value = "RE", Text = "RÉUNION"}, 
                    new SelectListItem { Value = "RO", Text = "ROMANIA"}, 
                    new SelectListItem { Value = "RU", Text = "RUSSIAN FEDERATION"}, 
                    new SelectListItem { Value = "RW", Text = "RWANDA"}, 
                    new SelectListItem { Value = "BL", Text = "SAINT BARTHÉLEMY"}, 
                    new SelectListItem { Value = "SH", Text = "SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA"}, 
                    new SelectListItem { Value = "KN", Text = "SAINT KITTS AND NEVIS"}, 
                    new SelectListItem { Value = "LC", Text = "SAINT LUCIA"}, 
                    new SelectListItem { Value = "MF", Text = "SAINT MARTIN (FRENCH PART)"}, 
                    new SelectListItem { Value = "PM", Text = "SAINT PIERRE AND MIQUELON"}, 
                    new SelectListItem { Value = "VC", Text = "SAINT VINCENT AND THE GRENADINES"}, 
                    new SelectListItem { Value = "WS", Text = "SAMOA"}, 
                    new SelectListItem { Value = "SM", Text = "SAN MARINO"}, 
                    new SelectListItem { Value = "ST", Text = "SAO TOME AND PRINCIPE"}, 
                    new SelectListItem { Value = "SA", Text = "SAUDI ARABIA"}, 
                    new SelectListItem { Value = "SN", Text = "SENEGAL"}, 
                    new SelectListItem { Value = "RS", Text = "SERBIA"}, 
                    new SelectListItem { Value = "SC", Text = "SEYCHELLES"}, 
                    new SelectListItem { Value = "SL", Text = "SIERRA LEONE"}, 
                    new SelectListItem { Value = "SG", Text = "SINGAPORE"}, 
                    new SelectListItem { Value = "SX", Text = "SINT MAARTEN (DUTCH PART)"}, 
                    new SelectListItem { Value = "SK", Text = "SLOVAKIA"}, 
                    new SelectListItem { Value = "SI", Text = "SLOVENIA"}, 
                    new SelectListItem { Value = "SB", Text = "SOLOMON ISLANDS"}, 
                    new SelectListItem { Value = "SO", Text = "SOMALIA"}, 
                    new SelectListItem { Value = "ZA", Text = "SOUTH AFRICA"}, 
                    new SelectListItem { Value = "GS", Text = "SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS"}, 
                    new SelectListItem { Value = "SS", Text = "SOUTH SUDAN"}, 
                    new SelectListItem { Value = "ES", Text = "SPAIN"}, 
                    new SelectListItem { Value = "LK", Text = "SRI LANKA"}, 
                    new SelectListItem { Value = "SD", Text = "SUDAN"}, 
                    new SelectListItem { Value = "SR", Text = "SURINAME"}, 
                    new SelectListItem { Value = "SJ", Text = "SVALBARD AND JAN MAYEN"}, 
                    new SelectListItem { Value = "SZ", Text = "SWAZILAND"}, 
                    new SelectListItem { Value = "SE", Text = "SWEDEN"}, 
                    new SelectListItem { Value = "CH", Text = "SWITZERLAND"}, 
                    new SelectListItem { Value = "SY", Text = "SYRIAN ARAB REPUBLIC"}, 
                    new SelectListItem { Value = "TW", Text = "TAIWAN, PROVINCE OF CHINA"}, 
                    new SelectListItem { Value = "TJ", Text = "TAJIKISTAN"}, 
                    new SelectListItem { Value = "TZ", Text = "TANZANIA, UNITED REPUBLIC OF"}, 
                    new SelectListItem { Value = "TH", Text = "THAILAND"}, 
                    new SelectListItem { Value = "TL", Text = "TIMOR-LESTE"}, 
                    new SelectListItem { Value = "TG", Text = "TOGO"}, 
                    new SelectListItem { Value = "TK", Text = "TOKELAU"}, 
                    new SelectListItem { Value = "TO", Text = "TONGA"}, 
                    new SelectListItem { Value = "TT", Text = "TRINIDAD AND TOBAGO"}, 
                    new SelectListItem { Value = "TN", Text = "TUNISIA"}, 
                    new SelectListItem { Value = "TR", Text = "TURKEY"}, 
                    new SelectListItem { Value = "TM", Text = "TURKMENISTAN"}, 
                    new SelectListItem { Value = "TC", Text = "TURKS AND CAICOS ISLANDS"}, 
                    new SelectListItem { Value = "TV", Text = "TUVALU"}, 
                    new SelectListItem { Value = "UG", Text = "UGANDA"}, 
                    new SelectListItem { Value = "UA", Text = "UKRAINE"}, 
                    new SelectListItem { Value = "AE", Text = "UNITED ARAB EMIRATES"}, 
                    new SelectListItem { Value = "GB", Text = "UNITED KINGDOM"}, 
                    new SelectListItem { Value = "US", Text = "UNITED STATES"}, 
                    new SelectListItem { Value = "UM", Text = "UNITED STATES MINOR OUTLYING ISLANDS"}, 
                    new SelectListItem { Value = "UY", Text = "URUGUAY"}, 
                    new SelectListItem { Value = "UZ", Text = "UZBEKISTAN"}, 
                    new SelectListItem { Value = "VU", Text = "VANUATU"}, 
                    new SelectListItem { Value = "VE", Text = "VENEZUELA, BOLIVARIAN REPUBLIC OF"}, 
                    new SelectListItem { Value = "VN", Text = "VIET NAM"}, 
                    new SelectListItem { Value = "VG", Text = "VIRGIN ISLANDS, BRITISH"}, 
                    new SelectListItem { Value = "VI", Text = "VIRGIN ISLANDS, U.S."}, 
                    new SelectListItem { Value = "WF", Text = "WALLIS AND FUTUNA"}, 
                    new SelectListItem { Value = "EH", Text = "WESTERN SAHARA"}, 
                    new SelectListItem { Value = "YE", Text = "YEMEN"}, 
                    new SelectListItem { Value = "ZM", Text = "ZAMBIA"}, 
                    new SelectListItem { Value = "ZW", Text = "ZIMBABWE"}
                    }, new { @id = "Nationality", @class = "select2me" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="IqamaId">@EPMS.Web.Resources.HR.Employee.IqamaNo</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeIqama, new { @id = "IqamaId", @class = "toBeRequired" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeIqama, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        @*<div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="IqamaIssueDate">Iqama Issue Date Or National ID Issue Date</label>
                </div>
                <div class="span9">
                    <div class="controls span4">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeIqamaIssueDtAr, new { @id = "IqamaIssueDateAr", onchange = "HijriToGregorian(this,'#IqamaIssueDate')", @class = "col-lg-2 datepickerArabic form-control " })
                        @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeIqamaIssueDt, String.Empty, new { @class = "required" })
                    </div>
                    <div class="controls span4">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeIqamaIssueDt, new { @id = "IqamaIssueDate", @class = "col-lg-2 datepicker form-control " })

                    </div>
                </div>
            </div>*@
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="IqamaExpiryDate">@EPMS.Web.Resources.HR.Employee.IqamaExpiryDate</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeIqamaExpiryDt, new { @class = "datepickerGregorian cursorHand span4", @id = "IqamaExpiryDate", @readonly = true, @placeholder = "Gregorian", onchange = "GregorianToHijri(this,'#IqamaExpiryDateAr')" })
                    @Html.TextBox("Start Date", null, new { @class = "datepickerArabic cursorHand span4", @id = "IqamaExpiryDateAr", @readonly = true, @placeholder = "Hijri", onchange = "HijriToGregorian(this,'#IqamaExpiryDateAr')" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeIqamaExpiryDt, "", new { @class = "required" })
                </div>
                @*<div class="controls span4">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeIqamaExpiryDtAr, new { @id = "IqamaExpiryDateAr", @readonly = true, onchange = "HijriToGregorian(this,'#IqamaExpiryDate')", @class = "cursorHand col-lg-2 datepickerArabic form-control " })
                        @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeIqamaExpiryDt, String.Empty, new { @class = "required" })
                    </div>
                    <div class="controls span4">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeIqamaExpiryDt, new { @id = "IqamaExpiryDate", onchange = "GregorianToHijri(this,'#IqamaExpiryDateAr')", @class = "col-lg-2 datepickerGregorian form-control toBeRequired cursorHand", @readonly = true })
                    </div>*@
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="PassportID">@EPMS.Web.Resources.HR.Employee.PassId</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeePassportNum, new { @id = "PassportID", @class = "toBeRequired" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeePassportNum, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="PassportExpiryDate">@EPMS.Web.Resources.HR.Employee.PassExpiryDate</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeePassportExpiryDt, new { @class = "datepickerGregorian cursorHand span4", @id = "PassportExpiryDate", @readonly = true, @placeholder = "Gregorian", onchange = "GregorianToHijri(this,'#PassportExpiryDateAr')" })
                    @Html.TextBox("Start Date", null, new { @class = "datepickerArabic cursorHand span4", @id = "PassportExpiryDateAr", @readonly = true, @placeholder = "Hijri", onchange = "HijriToGregorian(this,'#PassportExpiryDate')" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeePassportExpiryDt, "", new { @class = "required" })
                </div>
                @*<div class="controls span4">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeePassportExpiryDtAr, new { @id = "PassportExpiryDateAr", @readonly = true, onchange = "HijriToGregorian(this,'#PassportExpiryDate')", @class = "cursorHand col-lg-2 datepickerArabic form-control " })
                        @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeePassportExpiryDt, String.Empty, new { @class = "required" })
                    </div>
                    <div class="controls span4">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeePassportExpiryDt, new { @id = "PassportExpiryDate", onchange = "GregorianToHijri(this,'#PassportExpiryDateAr')", @class = "col-lg-2 datepickerGregorian form-control toBeRequired cursorHand", @readonly = true })
                    </div>*@
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label cultureE" for="ExtraInformationE">@EPMS.Web.Resources.HR.Employee.ExtraInfo</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextAreaFor(model => model.EmployeeViewModel.Employee.EmployeeDetailsE, new { @dir = "ltr", @id = "ExtraInformationE" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label cultureE" for="ExtraInformationA">@EPMS.Web.Resources.HR.Employee.ExtraInfo</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextAreaFor(model => model.EmployeeViewModel.Employee.EmployeeDetailsA, new { @id = "ExtraInformationA" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="BasicSalary">@EPMS.Web.Resources.HR.Employee.BasicSal</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.JobTitle.BasicSalary, new { @disabled = true, @id = "BasicSalary" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.JobTitle.BasicSalary)
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allownce1">@EPMS.Web.Resources.HR.Employee.Allow1</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Allowance.Allowance1, new { @id = "Allownce1" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Allowance.Allowance1)
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allownce2">@EPMS.Web.Resources.HR.Employee.Allow2</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Allowance.Allowance2, new { @id = "Allownce2" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Allowance.Allowance2)
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allownce3">@EPMS.Web.Resources.HR.Employee.Allow3</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Allowance.Allowance3, new { @id = "Allownce3" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Allowance.Allowance3)
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allownce4">@EPMS.Web.Resources.HR.Employee.Allow4</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Allowance.Allowance4, new { @id = "Allownce4" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Allowance.Allowance4)
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allownce5">@EPMS.Web.Resources.HR.Employee.Allow5</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Allowance.Allowance5, new { @id = "Allownce5" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Allowance.Allowance5)
                </div>
            </div>
        </div>
        @if (Model.EmployeeViewModel.Employee != null && Convert.ToString(Session["RoleName"]) == "Admin" && Model.EmployeeViewModel.Employee.EmployeeId > 0)
        {
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="Deduction1">@EPMS.Web.Resources.HR.Employee.Deduc1</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Deduction1, new { @id = "Deduction1", @disabled = true })
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="Deduction2">@EPMS.Web.Resources.HR.Employee.Deduc2</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Deduction2, new { @id = "Deduction2", @disabled = true })
                    </div>
                </div>
            </div>
        }
        @if (Model.EmployeeViewModel.Employee != null && Model.EmployeeViewModel.Employee.EmployeeId > 0)
        {
            if (Convert.ToString(Session["RoleName"]) == "Employee")
            {
                <div class="control-group row-fluid">
                    <div class="span3">
                        <label class="control-label" for=""><a href="@(ConfigurationManager.AppSettings["SiteURL"].ToString())/HR/Payroll/Detail/@Model.EmployeeViewModel.Employee.EmployeeId">Payroll Page</a></label>
                    </div>
                </div>
            }
            if (module.Contains("Human Resources System") || module.Contains("HRS"))
            {
                <div class="alert alert-info alert-block">
                    <i class="icon-alert icon-alert-info"></i>
                    <strong>@EPMS.Web.Resources.HR.Employee.ReqHistory</strong>
                </div>
                if (Convert.ToString(Session["RoleName"]) != "Admin")
                {
                    <div>
                        <header>
                            <i class="icon-big-notepad"></i>
                            <h2><small>@EPMS.Web.Resources.HR.Request.Requests</small></h2>
                            <h3> <small><a href="~/HR/Request/Create">@EPMS.Web.Resources.HR.Request.CreateRequest</a></small></h3>
                        </header>
                    </div>
                }
                <!--Sortable Responsive Table begin-->
                <div class="row-fluid">
                    <div class="span12">
                        <table class="table table-striped table-responsive" id="tableRequsts">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>@EPMS.Web.Resources.HR.Request.Requests</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.RequestListViewModel.aaData != null)
                                {
                                    foreach (var item in Model.RequestListViewModel.aaData.ToList())
                                    {
                                        <tr>
                                            <td>@item.RequestId</td>
                                            <td>@Html.ActionLink(@item.RequestTopic, "Create", "Request", new { id = item.RequestId }, null) </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }



            if (module.Contains("Project Management System") || module.Contains("PMS"))
            {
                <!--Sortable Responsive Table end-->
                <div class="alert alert-info alert-block">
                    <i class="icon-alert icon-alert-info"></i>
                    <strong>@EPMS.Web.Resources.HR.Tasks.AssigTasks</strong>
                </div>
                <!--Sortable Responsive Table begin-->
                <div class="row-fluid">
                    <div class="span12">
                        <table class="table table-striped table-responsive" id="tableProjects">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>@EPMS.Web.Resources.HR.Tasks.Task</th>
                                    <th>@EPMS.Web.Resources.HR.Tasks.ProjName</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.TaskEmployees != null)
                                {
                                    foreach (var item in Model.TaskEmployees)
                                    {
                                        <tr>
                                            <td>@item.TaskEmployeeId</td>
                                            @if (direction == "ltr")
                                            {
                                                <td>@Html.ActionLink(@item.ProjectTask.TaskNameE, "Create", "Task", new { area = "PMS", id = item.TaskId }, null) </td>
                                                <td>@item.ProjectTask.ProjectNameE</td>
                                            }
                                            else
                                            {
                                                <td>@Html.ActionLink(@item.ProjectTask.TaskNameA, "Create", "Task", new { area = "PMS", id = item.TaskId }, null) </td>
                                                <td>@item.ProjectTask.ProjectNameA</td>
                                            }
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        }
        @if ((Convert.ToString(Session["RoleName"]) == "Admin") && Model.EmployeeViewModel.Employee.EmployeeId > 0)
        {
            <div class="control-group row-fluid">
                <div class="span3 span-inset">
                    <button type="submit" class="btn" onclick="">@Model.EmployeeViewModel.BtnText</button>
                </div>
                <div class="span3 span-inset">
                    <button type="button" class="btn">@EPMS.Web.Resources.HR.Employee.DeactiveEmp</button>
                </div>
            </div>
        }
        else if (Convert.ToString(Session["RoleName"]) == "Admin")
        {
            <div class="control-group row-fluid">
                <div class="span3 span-inset">
                    <button type="submit" class="btn" onclick="">@Model.EmployeeViewModel.BtnText</button>
                </div>
            </div>
        }
    </div>
}
<script src="~/RichTextEditor/ckeditor.js"></script>
<script>
    $(document).ready(function () {
        // CK Editor
        CKEDITOR.replace('ExtraInformationE');
        CKEDITOR.replace('ExtraInformationA');
        $("#AddEditEmployeeForm").validate({
            errorElement: "span",
            errorClass: "error",
            onclick: true,
            rules: {
                "req": {
                    required: true
                },
                "numbers": {
                    required: false,
                    digits: true
                },
                "email": {
                    email: true
                },
                "url": {
                    url: true
                },
                "date": {
                    date: true
                }
            }
        });

        // upload Image
        var errors = "";
        var url = "/HR/Employee/UploadEmployeePhoto";
        $('#upload').mfupload({
            type: 'jpg,png,tif,jpeg', //all types
            maxsize: 1,
            post_upload: url,
            folder: "./",
            ini_text: "Drag your file here or click (max: 1MB)",
            over_text: "Drop Here",
            over_col: '#666666',
            over_bkcol: '#f0f0f0',

            init: function () {
                $("#uploaded").empty();
            },

            start: function (result) {
                $("#uploaded").append("<div id='FILE" + result.fileno + "' class='files'>" + result.filename + "<div class='progress progress-info progress-thin'><div class='bar' id='PRO" + result.fileno + "'></div></div></div>");
            },

            loaded: function (result) {
                $("#PRO" + result.fileno).remove();
                $("#FILE" + result.fileno).html("Uploaded: " + result.filename + " (" + result.size + ")");
                $("#EmployeeImage").val(result.filename);
            },

            progress: function (result) {
                $("#PRO" + result.fileno).css("width", result.perc + "%");
            },

            error: function (error) {
                errors += error.filename + ": " + error.err_des + "\n";
            },

            completed: function () {
                if (errors != "") {
                    alert(errors);
                    errors = "";
                }
            }
        });

        // set JobId and Department Name
        $(".setDeptJobId").on("change", function () {
            var jobId = $(this).val();
            if (jobId != "") {
                $("#JobID").val(jobId);
                var jobsList = '@Html.Raw(Json.Encode(Model.EmployeeViewModel.JobTitleDeptList))';
                var parsed = JSON.parse(jobsList);

                $.each(parsed, function (key, value) {
                    if (value.JobId == jobId) {
                        $("#DepartmentName").val(value.DeptNameE);
                        $("#BasicSalary").val(value.BasicSalary);
                    }
                });
            } else {
                $("#DepartmentName").val(jobId);
                $("#JobID").val(jobId);
            }
        });
        $('#tableProjects').dataTable({
            "sPaginationType": "bootstrap",
            "aoColumns": [
                { "bVisible": false },
                null,
                null
            ],
            "fnInitComplete": function () {
            }
        });
        $('#tableRequsts').dataTable({
            "sPaginationType": "bootstrap",
            "aoColumns": [
                { "bVisible": false }, // cloumn to be hide
                null // not hide
            ],
            "fnInitComplete": function () {
            }
        });
        $(".dataTables_length select").select2({
            dropdownCssClass: 'noSearch'
        });

        // Gregorian Date Picker
        $(".datepicker").mask('99/99/9999');
        $(".datepicker").datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: "1900:2050"
        });
        // Arabic Date Picker for DOB
        var calendar = $.calendars.instance('islamic');
        $('.datepickerArabic').calendarsPicker({
            calendar: calendar,
            onSelect: function () {
                $(this).change();
            }
        });
        if ('@Model.EmployeeViewModel.Employee.EmployeeId' > 0) {
            $("#EmpDateOfBirthArabic").val(ConvertDates($("#EmployeeDOB").val(), "gregorian", "islamic"));
            $("#IqamaExpiryDateAr").val(ConvertDates($("#IqamaExpiryDate").val(), "gregorian", "islamic"));
            $("#PassportExpiryDateAr").val(ConvertDates($("#PassportExpiryDate").val(), "gregorian", "islamic"));
        }
    });
    function ConvertDates(dateTobeChanged, fromCalender, toCalender) {
        var calender = $.calendars.instance(fromCalender);
        var dateToBeChanged = calender.parseDate("dd/mm/yyyy", dateTobeChanged);
        calender = $.calendars.instance(toCalender);
        var changedDate = calender.fromJD(dateToBeChanged.toJD());
        return calender.formatDate("dd/mm/yyyy", changedDate);
    }
    function validateForm(event) {
        var listSimple = $('.toBeRequired');
        var counter = 0;
        for (var i = 0; i < (listSimple.length) ; i++) {
            var control = listSimple[i];
            var fieldvalue = $(control).val();
            if (fieldvalue == null || fieldvalue == "") {
                $(control).prop('placeholder', 'Required');
                counter++;
                $(control).addClass("Error");

            } else {
                $(control).removeClass("Error");
            }
        }
        if (counter > 0) {
            //implementing focus back to error
            if ($(".Error").length > 0) {
                var divId = $(".Error")[0].id;
                if ($("#" + divId).length > 0)
                    $("#" + divId).focus();
                event.preventDefault();
                return false;
            }
        }
        return true;
    }
</script>
