@using System.Configuration
@model EPMS.WebModels.ViewModels.Employee.EmployeeDetailViewModel
@{
    ViewBag.Title = Model.EmployeeViewModel.PageTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var direction = EPMS.WebModels.Resources.Shared.Common.TextDirection;
    //string[] module = (string[])Session["UserModules"];
    string[] userPermissionsSet = (string[])HttpContext.Current.Session["UserPermissionSet"];
}
<!-- Navigation Bar -->
<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/HR/Employee/Index">
                @EPMS.WebModels.Resources.HR.Employee.Employeelist
            </a>
        </li>
        @if (Model.EmployeeViewModel.Employee != null)
        {
            <li>
                @Model.EmployeeViewModel.EmployeeName
            </li>
        }
        else
        {
            <li>
                @EPMS.WebModels.Resources.HR.Employee.AddNew
            </li>
        }
    </ul>
</div>
<!-- Page heading -->
<header>
    <i class="icon-big-notepad"></i>
    @if (Model.EmployeeViewModel.Employee.EmployeeId > 0)
    {
        <h2><small>@Model.EmployeeViewModel.EmployeeName</small></h2>
    }
    else
    {
        <h2><small>@EPMS.WebModels.Resources.HR.Employee.AddNew</small></h2>
    }

    @if (Model.EmployeeViewModel.Employee != null)
    {
        if (Model.EmployeeViewModel.Employee.EmployeeId > 0)
        {
            <img class="employeeImg" src='@Model.EmployeeViewModel.ImagePath' alt="Employee" />
        }
    }
</header>

<!--Notifications begin-->
@Html.Partial("_Alert")
<!--Notifications end-->
<!-- Page heading ends -->
@using (Html.BeginForm("Create", "Employee", FormMethod.Post, new { @class = "form-horizontal", @id = "AddEditEmployeeForm", role = "form", enctype = "multipart/form-data" }))
{
    <div class="container-fluid">

        @Html.HiddenFor(model => model.EmployeeViewModel.Employee.EmployeeId)
        @Html.HiddenFor(model => model.EmployeeViewModel.OldAllowance.Allowance1)
        @Html.HiddenFor(model => model.EmployeeViewModel.OldAllowance.Allowance2)
        @Html.HiddenFor(model => model.EmployeeViewModel.OldAllowance.Allowance3)
        @Html.HiddenFor(model => model.EmployeeViewModel.OldAllowance.Allowance4)
        @Html.HiddenFor(model => model.EmployeeViewModel.OldAllowance.Allowance5)
        @Html.HiddenFor(model => model.EmployeeViewModel.Employee.EmployeeJobId)
        @Html.HiddenFor(model => model.EmployeeViewModel.Employee.PrevJobTitleId)
        @Html.HiddenFor(model => model.EmployeeViewModel.Employee.IsActivated)
        @Html.HiddenFor(model => model.EmployeeViewModel.Employee.RecCreatedBy)
        @Html.HiddenFor(model => model.EmployeeViewModel.Employee.RecCreatedDt)
        @Html.HiddenFor(model => model.EmployeeViewModel.Employee.EmployeeImagePath, new { @id = "EmployeeImage" })
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="EmployeeFirstNameE">@EPMS.WebModels.Resources.HR.Employee.FirstName</label>
            </div>
            <div class="span9">

                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeFirstNameE, new { @id = "EmployeeFirstNameE", @class = "toBeRequired toBeDisable" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeFirstNameE, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="EmployeeMiddleNameE">@EPMS.WebModels.Resources.HR.Employee.MiddleName</label>
            </div>
            <div class="span9">

                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeMiddleNameE, new { @id = "EmployeeMiddleNameE", @class = "toBeRequired toBeDisable" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="EmployeeLastNameE">@EPMS.WebModels.Resources.HR.Employee.LastName</label>
            </div>
            <div class="span9">

                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeLastNameE, new { @id = "EmployeeLastNameE", @class = "toBeRequired toBeDisable" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeLastNameE, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="EmployeeFirstNameA">@EPMS.WebModels.Resources.HR.Employee.FirstNameA</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeFirstNameA, new { @id = "EmployeeFirstNameA", @class = "toBeRequired toBeDisable" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeFirstNameA, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="EmployeeMiddleNameA">@EPMS.WebModels.Resources.HR.Employee.MiddleNameA</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeMiddleNameA, new { @id = "EmployeeMiddleNameA", @class = "toBeRequired toBeDisable" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="EmployeeLastNameA">@EPMS.WebModels.Resources.HR.Employee.LastNameA</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeLastNameA, new { @id = "EmployeeLastNameA", @class = "toBeRequired toBeDisable" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeLastNameA, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="JobTitle">@EPMS.WebModels.Resources.HR.Employee.JobTitle</label>
            </div>
            <div class="span2">
                @if (direction == "ltr")
                {
                    <div class="controls jobTitleDDL">
                        @Html.DropDownListFor(model => model.EmployeeViewModel.Employee.JobTitleId, new SelectList(Model.EmployeeViewModel.JobTitleDeptList, "JobId", "JobTitleE"), "--Select--", new { @class = "select2me setDeptJobId", @id = "JobTitle" })
                    </div>
                }
                else
                {
                    <div class="controls jobTitleDDL">
                        @Html.DropDownListFor(model => model.EmployeeViewModel.Employee.JobTitleId, new SelectList(Model.EmployeeViewModel.JobTitleDeptList, "JobId", "JobTitleA"), "--Select--", new { @class = "select2me setDeptJobId", @id = "JobTitle" })
                    </div>
                }
                <label id="jobTitleValidation" style="margin-right:12px"></label>
            </div>
            
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="DepartmentName">@EPMS.WebModels.Resources.HR.Employee.Department</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.JobTitle.DepartmentNameE, new { @id = "DepartmentName", @readonly = true })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="JobID">@EPMS.WebModels.Resources.HR.Employee.JobId</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.JobTitleId, new { @readonly = true, @id = "JobID" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="EmployeeJobId">@EPMS.WebModels.Resources.HR.Employee.EmployeeJobId</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeJobId, new { @id = "EmployeeJobId", @readonly = true })
                </div>
            </div>
        </div>
        <!--Drag And Drop Upload begin-->
        <div id="Drag_And_Drop_Upload" class="control-group row-fluid ignore">
            <div class="span3">
                <label class="control-label" for="inputField">
                    @EPMS.WebModels.Resources.HR.Employee.Image<a href="javascript:;" class="bootstrap-tooltip" data-placement="top" data-original-title="file size shouldn't exceed 1MB"><i class="icon-photon info-circle"></i></a>
                </label>
            </div>
            <div class="span9 row-fluid">
                <div class="upload-boxes row-fluid">
                    <div class="span3" id="upload"></div>
                    <div class="span9" id="uploaded"></div>
                </div>
            </div>
        </div>
        <!--Drag And Drop Upload end-->
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="MobileNumber">@EPMS.WebModels.Resources.HR.Employee.MobNumber<a href="javascript:;" class="bootstrap-tooltip" data-placement="top" data-original-title="Only numbers allowed"><i class="icon-photon info-circle"></i></a></label>
            </div>
            <div class="span9 mobileNo">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeMobileNum, new { @id = "MobileNumber", @class = "toBeRequired toBeDisable" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeMobileNum, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="LandlineNumber">@EPMS.WebModels.Resources.HR.Employee.TelephoneNumber</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeLandlineNum, new { @id = "LandlineNumber", @class = "toBeRequired toBeDisable" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Email">@EPMS.WebModels.Resources.HR.Employee.Email</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.Email, new { @id = "Email", @class = "toBeRequired toBeDisable" })
                    @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.Email, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="MaritalStatus">@EPMS.WebModels.Resources.HR.Employee.MaritalStat</label>
            </div>
            <div class="span2">
                @if (direction == "ltr")
                {
                    <div class="controls">
                        @Html.DropDownListFor(model => model.EmployeeViewModel.Employee.MaritalStatus, new[] { new SelectListItem { Text = "--Select--", Value = "" }, new SelectListItem { Text = "Unmaried", Value = "1" }, new SelectListItem { Text = "Married", Value = "0" } }, new { @id = "MaritalStatus", @class = "select2me" })
                    </div>
                }
                else
                {
                    <div class="controls">
                        @Html.DropDownListFor(model => model.EmployeeViewModel.Employee.MaritalStatus, new[] { new SelectListItem { Text = "--اختار--", Value = "" }, new SelectListItem { Text = "عازب", Value = "1" }, new SelectListItem { Text = "متزوج", Value = "0" } }, new { @id = "MaritalStatus", @class = "select2me" })
                    </div>
                }
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="EmployeeDOB">@EPMS.WebModels.Resources.HR.Employee.DOB</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @if (direction == "ltr")
                    {
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeDOB, new { @class = "datepickerDOB cursorHand span4", @id = "EmployeeDOB", @readonly = true, @placeholder = "Gregorian", onchange = "GregorianToHijri(this,'#EmpDateOfBirthArabic')" })
                        @Html.TextBox("Start Date", null, new { @class = "datepickerDOBAr cursorHand span4 marginForDatesLeft", @id = "EmpDateOfBirthArabic", @readonly = true, @placeholder = "Hijri", onchange = "HijriToGregorian(this,'#EmployeeDOB')" })
                    }
                    else
                    {
                        @Html.TextBox("Start Date", null, new { @class = "datepickerDOBAr cursorHand span4", @id = "EmpDateOfBirthArabic", @readonly = true, @placeholder = "Hijri", onchange = "HijriToGregorian(this,'#EmployeeDOB')" })
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeDOB, new { @class = "datepickerDOB cursorHand span4 marginForDatesRight", @id = "EmployeeDOB", @readonly = true, @placeholder = "Gregorian", onchange = "GregorianToHijri(this,'#EmpDateOfBirthArabic')" })
                    }
                </div>
                @*<div class="controls span4">
                        @Html.TextBox("Date",null, new { @class = "col-lg-2 datepickerArabic form-control cursorHand", @readonly = true, onchange = "HijriToGregorian(this,'#EmployeeDOB')", @id = "EmpDateOfBirthArabic" })
                        @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeDOB, String.Empty, new { @class = "required" })
                    </div>
                    <div class="controls span4">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeDOB, new { @class = "col-lg-2 datepickerGregorian form-control toBeRequired cursorHand", @id = "EmployeeDOB", @readonly = true, onchange = "GregorianToHijri(this, '#EmpDateOfBirthArabic')" })
                    </div>*@
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Nationality">@EPMS.WebModels.Resources.HR.Employee.Nationality</label>
            </div>
            <div class="span2">
                @if (direction == "ltr")
                {
                    <div class="controls">
                        @Html.DropDownListFor(model => model.EmployeeViewModel.Employee.EmployeeNationality, new[]
                        {
                            new SelectListItem {Value = "", Text = ""},
                            new SelectListItem {Value = "AF", Text = "AFGHANISTAN"},
                            new SelectListItem {Value = "AX", Text = "ÅLAND ISLANDS"},
                            new SelectListItem {Value = "AL", Text = "ALBANIA"},
                            new SelectListItem {Value = "DZ", Text = "ALGERIA"},
                            new SelectListItem {Value = "AS", Text = "AMERICAN SAMOA"},
                            new SelectListItem {Value = "AD", Text = "ANDORRA"},
                            new SelectListItem {Value = "AO", Text = "ANGOLA"},
                            new SelectListItem {Value = "AI", Text = "ANGUILLA"},
                            new SelectListItem {Value = "AQ", Text = "ANTARCTICA"},
                            new SelectListItem {Value = "AG", Text = "ANTIGUA AND BARBUDA"},
                            new SelectListItem {Value = "AR", Text = "ARGENTINA"},
                            new SelectListItem {Value = "AM", Text = "ARMENIA"},
                            new SelectListItem {Value = "AW", Text = "ARUBA"},
                            new SelectListItem {Value = "AU", Text = "AUSTRALIA"},
                            new SelectListItem {Value = "AT", Text = "AUSTRIA"},
                            new SelectListItem {Value = "AZ", Text = "AZERBAIJAN"},
                            new SelectListItem {Value = "BS", Text = "BAHAMAS"},
                            new SelectListItem {Value = "BH", Text = "BAHRAIN"},
                            new SelectListItem {Value = "BD", Text = "BANGLADESH"},
                            new SelectListItem {Value = "BB", Text = "BARBADOS"},
                            new SelectListItem {Value = "BY", Text = "BELARUS"},
                            new SelectListItem {Value = "BE", Text = "BELGIUM"},
                            new SelectListItem {Value = "BZ", Text = "BELIZE"},
                            new SelectListItem {Value = "BJ", Text = "BENIN"},
                            new SelectListItem {Value = "BM", Text = "BERMUDA"},
                            new SelectListItem {Value = "BT", Text = "BHUTAN"},
                            new SelectListItem {Value = "BO", Text = "BOLIVIA, PLURINATIONAL STATE OF"},
                            //new SelectListItem {Value = "BQ", Text = "BONAIRE, SINT EUSTATIUS AND SABA"},
                            new SelectListItem {Value = "BA", Text = "BOSNIA AND HERZEGOVINA"},
                            new SelectListItem {Value = "BW", Text = "BOTSWANA"},
                            new SelectListItem {Value = "BV", Text = "BOUVET ISLAND"},
                            new SelectListItem {Value = "BR", Text = "BRAZIL"},
                            new SelectListItem {Value = "IO", Text = "BRITISH INDIAN OCEAN TERRITORY"},
                            new SelectListItem {Value = "BN", Text = "BRUNEI DARUSSALAM"},
                            new SelectListItem {Value = "BG", Text = "BULGARIA"},
                            new SelectListItem {Value = "BF", Text = "BURKINA FASO"},
                            new SelectListItem {Value = "BI", Text = "BURUNDI"},
                            new SelectListItem {Value = "KH", Text = "CAMBODIA"},
                            new SelectListItem {Value = "CM", Text = "CAMEROON"},
                            new SelectListItem {Value = "CA", Text = "CANADA"},
                            new SelectListItem {Value = "CV", Text = "CAPE VERDE"},
                            new SelectListItem {Value = "KY", Text = "CAYMAN ISLANDS"},
                            new SelectListItem {Value = "CF", Text = "CENTRAL AFRICAN REPUBLIC"},
                            new SelectListItem {Value = "TD", Text = "CHAD"},
                            new SelectListItem {Value = "CL", Text = "CHILE"},
                            new SelectListItem {Value = "CN", Text = "CHINA"},
                            new SelectListItem {Value = "CX", Text = "CHRISTMAS ISLAND"},
                            new SelectListItem {Value = "CC", Text = "COCOS (KEELING) ISLANDS"},
                            new SelectListItem {Value = "CO", Text = "COLOMBIA"},
                            new SelectListItem {Value = "KM", Text = "COMOROS"},
                            new SelectListItem {Value = "CG", Text = "CONGO"},
                            new SelectListItem {Value = "CD", Text = "CONGO, THE DEMOCRATIC REPUBLIC OF THE"},
                            new SelectListItem {Value = "CK", Text = "COOK ISLANDS"},
                            new SelectListItem {Value = "CR", Text = "COSTA RICA"},
                            new SelectListItem {Value = "CI", Text = "CÔTE D'IVOIRE"},
                            new SelectListItem {Value = "HR", Text = "CROATIA"},
                            new SelectListItem {Value = "CU", Text = "CUBA"},
                            //new SelectListItem {Value = "CW", Text = "CURAÇAO"},
                            new SelectListItem {Value = "CY", Text = "CYPRUS"},
                            new SelectListItem {Value = "CZ", Text = "CZECH REPUBLIC"},
                            new SelectListItem {Value = "DK", Text = "DENMARK"},
                            new SelectListItem {Value = "DJ", Text = "DJIBOUTI"},
                            new SelectListItem {Value = "DM", Text = "DOMINICA"},
                            new SelectListItem {Value = "DO", Text = "DOMINICAN REPUBLIC"},
                            new SelectListItem {Value = "EC", Text = "ECUADOR"},
                            new SelectListItem {Value = "EG", Text = "EGYPT"},
                            new SelectListItem {Value = "SV", Text = "EL SALVADOR"},
                            new SelectListItem {Value = "GQ", Text = "EQUATORIAL GUINEA"},
                            new SelectListItem {Value = "ER", Text = "ERITREA"},
                            new SelectListItem {Value = "EE", Text = "ESTONIA"},
                            new SelectListItem {Value = "ET", Text = "ETHIOPIA"},
                            new SelectListItem {Value = "FK", Text = "FALKLAND ISLANDS (MALVINAS)"},
                            new SelectListItem {Value = "FO", Text = "FAROE ISLANDS"},
                            new SelectListItem {Value = "FJ", Text = "FIJI"},
                            new SelectListItem {Value = "FI", Text = "FINLAND"},
                            new SelectListItem {Value = "FR", Text = "FRANCE"},
                            new SelectListItem {Value = "GF", Text = "FRENCH GUIANA"},
                            new SelectListItem {Value = "PF", Text = "FRENCH POLYNESIA"},
                            new SelectListItem {Value = "TF", Text = "FRENCH SOUTHERN TERRITORIES"},
                            new SelectListItem {Value = "GA", Text = "GABON"},
                            new SelectListItem {Value = "GM", Text = "GAMBIA"},
                            new SelectListItem {Value = "GE", Text = "GEORGIA"},
                            new SelectListItem {Value = "DE", Text = "GERMANY"},
                            new SelectListItem {Value = "GH", Text = "GHANA"},
                            new SelectListItem {Value = "GI", Text = "GIBRALTAR"},
                            new SelectListItem {Value = "GR", Text = "GREECE"},
                            new SelectListItem {Value = "GL", Text = "GREENLAND"},
                            new SelectListItem {Value = "GD", Text = "GRENADA"},
                            new SelectListItem {Value = "GP", Text = "GUADELOUPE"},
                            new SelectListItem {Value = "GU", Text = "GUAM"},
                            new SelectListItem {Value = "GT", Text = "GUATEMALA"},
                            //new SelectListItem {Value = "GG", Text = "GUERNSEY"},
                            new SelectListItem {Value = "GN", Text = "GUINEA"},
                            new SelectListItem {Value = "GW", Text = "GUINEA-BISSAU"},
                            new SelectListItem {Value = "GY", Text = "GUYANA"},
                            new SelectListItem {Value = "HT", Text = "HAITI"},
                            new SelectListItem {Value = "HM", Text = "HEARD ISLAND AND MCDONALD ISLANDS"},
                            new SelectListItem {Value = "VA", Text = "HOLY SEE (VATICAN CITY STATE)"},
                            new SelectListItem {Value = "HN", Text = "HONDURAS"},
                            new SelectListItem {Value = "HK", Text = "HONG KONG"},
                            new SelectListItem {Value = "HU", Text = "HUNGARY"},
                            new SelectListItem {Value = "IS", Text = "ICELAND"},
                            new SelectListItem {Value = "IN", Text = "INDIA"},
                            new SelectListItem {Value = "ID", Text = "INDONESIA"},
                            new SelectListItem {Value = "IR", Text = "IRAN, ISLAMIC REPUBLIC OF"},
                            new SelectListItem {Value = "IQ", Text = "IRAQ"},
                            new SelectListItem {Value = "IE", Text = "IRELAND"},
                            new SelectListItem {Value = "IM", Text = "ISLE OF MAN"},
                            new SelectListItem {Value = "IL", Text = "ISRAEL"},
                            new SelectListItem {Value = "IT", Text = "ITALY"},
                            new SelectListItem {Value = "JM", Text = "JAMAICA"},
                            new SelectListItem {Value = "JP", Text = "JAPAN"},
                            new SelectListItem {Value = "JE", Text = "JERSEY"},
                            new SelectListItem {Value = "JO", Text = "JORDAN"},
                            new SelectListItem {Value = "KZ", Text = "KAZAKHSTAN"},
                            new SelectListItem {Value = "KE", Text = "KENYA"},
                            new SelectListItem {Value = "KI", Text = "KIRIBATI"},
                            new SelectListItem {Value = "KP", Text = "KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF"},
                            new SelectListItem {Value = "KR", Text = "KOREA, REPUBLIC OF"},
                            new SelectListItem {Value = "KW", Text = "KUWAIT"},
                            new SelectListItem {Value = "KG", Text = "KYRGYZSTAN"},
                            new SelectListItem {Value = "LA", Text = "LAO PEOPLE'S DEMOCRATIC REPUBLIC"},
                            new SelectListItem {Value = "LV", Text = "LATVIA"},
                            new SelectListItem {Value = "LB", Text = "LEBANON"},
                            new SelectListItem {Value = "LS", Text = "LESOTHO"},
                            new SelectListItem {Value = "LR", Text = "LIBERIA"},
                            new SelectListItem {Value = "LY", Text = "LIBYA"},
                            new SelectListItem {Value = "LI", Text = "LIECHTENSTEIN"},
                            new SelectListItem {Value = "LT", Text = "LITHUANIA"},
                            new SelectListItem {Value = "LU", Text = "LUXEMBOURG"},
                            new SelectListItem {Value = "MO", Text = "MACAO"},
                            new SelectListItem {Value = "MK", Text = "MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF"},
                            new SelectListItem {Value = "MG", Text = "MADAGASCAR"},
                            new SelectListItem {Value = "MW", Text = "MALAWI"},
                            new SelectListItem {Value = "MY", Text = "MALAYSIA"},
                            new SelectListItem {Value = "MV", Text = "MALDIVES"},
                            new SelectListItem {Value = "ML", Text = "MALI"},
                            new SelectListItem {Value = "MT", Text = "MALTA"},
                            new SelectListItem {Value = "MH", Text = "MARSHALL ISLANDS"},
                            new SelectListItem {Value = "MQ", Text = "MARTINIQUE"},
                            new SelectListItem {Value = "MR", Text = "MAURITANIA"},
                            new SelectListItem {Value = "MU", Text = "MAURITIUS"},
                            new SelectListItem {Value = "YT", Text = "MAYOTTE"},
                            new SelectListItem {Value = "MX", Text = "MEXICO"},
                            new SelectListItem {Value = "FM", Text = "MICRONESIA, FEDERATED STATES OF"},
                            new SelectListItem {Value = "MD", Text = "MOLDOVA, REPUBLIC OF"},
                            new SelectListItem {Value = "MC", Text = "MONACO"},
                            new SelectListItem {Value = "MN", Text = "MONGOLIA"},
                            new SelectListItem {Value = "ME", Text = "MONTENEGRO"},
                            new SelectListItem {Value = "MS", Text = "MONTSERRAT"},
                            new SelectListItem {Value = "MA", Text = "MOROCCO"},
                            new SelectListItem {Value = "MZ", Text = "MOZAMBIQUE"},
                            new SelectListItem {Value = "MM", Text = "MYANMAR"},
                            new SelectListItem {Value = "NA", Text = "NAMIBIA"},
                            new SelectListItem {Value = "NR", Text = "NAURU"},
                            new SelectListItem {Value = "NP", Text = "NEPAL"},
                            new SelectListItem {Value = "NL", Text = "NETHERLANDS"},
                            new SelectListItem {Value = "NC", Text = "NEW CALEDONIA"},
                            new SelectListItem {Value = "NZ", Text = "NEW ZEALAND"},
                            new SelectListItem {Value = "NI", Text = "NICARAGUA"},
                            new SelectListItem {Value = "NE", Text = "NIGER"},
                            new SelectListItem {Value = "NG", Text = "NIGERIA"},
                            new SelectListItem {Value = "NU", Text = "NIUE"},
                            new SelectListItem {Value = "NF", Text = "NORFOLK ISLAND"},
                            new SelectListItem {Value = "MP", Text = "NORTHERN MARIANA ISLANDS"},
                            new SelectListItem {Value = "NO", Text = "NORWAY"},
                            new SelectListItem {Value = "OM", Text = "OMAN"},
                            new SelectListItem {Value = "PK", Text = "PAKISTAN"},
                            new SelectListItem {Value = "PW", Text = "PALAU"},
                            new SelectListItem {Value = "PS", Text = "PALESTINIAN TERRITORY, OCCUPIED"},
                            new SelectListItem {Value = "PA", Text = "PANAMA"},
                            new SelectListItem {Value = "PG", Text = "PAPUA NEW GUINEA"},
                            new SelectListItem {Value = "PY", Text = "PARAGUAY"},
                            new SelectListItem {Value = "PE", Text = "PERU"},
                            new SelectListItem {Value = "PH", Text = "PHILIPPINES"},
                            new SelectListItem {Value = "PN", Text = "PITCAIRN"},
                            new SelectListItem {Value = "PL", Text = "POLAND"},
                            new SelectListItem {Value = "PT", Text = "PORTUGAL"},
                            new SelectListItem {Value = "PR", Text = "PUERTO RICO"},
                            new SelectListItem {Value = "QA", Text = "QATAR"},
                            new SelectListItem {Value = "RE", Text = "RÉUNION"},
                            new SelectListItem {Value = "RO", Text = "ROMANIA"},
                            new SelectListItem {Value = "RU", Text = "RUSSIAN FEDERATION"},
                            new SelectListItem {Value = "RW", Text = "RWANDA"},
                            //new SelectListItem {Value = "BL", Text = "SAINT BARTHÉLEMY"},
                            new SelectListItem {Value = "SH", Text = "SAINT HELENA, ASCENSION AND TRISTAN DA CUNHA"},
                            new SelectListItem {Value = "KN", Text = "SAINT KITTS AND NEVIS"},
                            new SelectListItem {Value = "LC", Text = "SAINT LUCIA"},
                            new SelectListItem {Value = "MF", Text = "SAINT MARTIN (FRENCH PART)"},
                            new SelectListItem {Value = "PM", Text = "SAINT PIERRE AND MIQUELON"},
                            new SelectListItem {Value = "VC", Text = "SAINT VINCENT AND THE GRENADINES"},
                            new SelectListItem {Value = "WS", Text = "SAMOA"},
                            new SelectListItem {Value = "SM", Text = "SAN MARINO"},
                            new SelectListItem {Value = "ST", Text = "SAO TOME AND PRINCIPE"},
                            new SelectListItem {Value = "SA", Text = "SAUDI ARABIA"},
                            new SelectListItem {Value = "SN", Text = "SENEGAL"},
                            new SelectListItem {Value = "RS", Text = "SERBIA"},
                            new SelectListItem {Value = "SC", Text = "SEYCHELLES"},
                            new SelectListItem {Value = "SL", Text = "SIERRA LEONE"},
                            new SelectListItem {Value = "SG", Text = "SINGAPORE"},
                            //new SelectListItem {Value = "SX", Text = "SINT MAARTEN (DUTCH PART)"},
                            new SelectListItem {Value = "SK", Text = "SLOVAKIA"},
                            new SelectListItem {Value = "SI", Text = "SLOVENIA"},
                            new SelectListItem {Value = "SB", Text = "SOLOMON ISLANDS"},
                            new SelectListItem {Value = "SO", Text = "SOMALIA"},
                            new SelectListItem {Value = "ZA", Text = "SOUTH AFRICA"},
                            new SelectListItem {Value = "GS", Text = "SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS"},
                            //new SelectListItem {Value = "SS", Text = "SOUTH SUDAN"},
                            new SelectListItem {Value = "ES", Text = "SPAIN"},
                            new SelectListItem {Value = "LK", Text = "SRI LANKA"},
                            new SelectListItem {Value = "SD", Text = "SUDAN"},
                            new SelectListItem {Value = "SR", Text = "SURINAME"},
                            new SelectListItem {Value = "SJ", Text = "SVALBARD AND JAN MAYEN"},
                            new SelectListItem {Value = "SZ", Text = "SWAZILAND"},
                            new SelectListItem {Value = "SE", Text = "SWEDEN"},
                            new SelectListItem {Value = "CH", Text = "SWITZERLAND"},
                            new SelectListItem {Value = "SY", Text = "SYRIAN ARAB REPUBLIC"},
                            new SelectListItem {Value = "TW", Text = "TAIWAN, PROVINCE OF CHINA"},
                            new SelectListItem {Value = "TJ", Text = "TAJIKISTAN"},
                            new SelectListItem {Value = "TZ", Text = "TANZANIA, UNITED REPUBLIC OF"},
                            new SelectListItem {Value = "TH", Text = "THAILAND"},
                            new SelectListItem {Value = "TL", Text = "TIMOR-LESTE"},
                            new SelectListItem {Value = "TG", Text = "TOGO"},
                            new SelectListItem {Value = "TK", Text = "TOKELAU"},
                            new SelectListItem {Value = "TO", Text = "TONGA"},
                            new SelectListItem {Value = "TT", Text = "TRINIDAD AND TOBAGO"},
                            new SelectListItem {Value = "TN", Text = "TUNISIA"},
                            new SelectListItem {Value = "TR", Text = "TURKEY"},
                            new SelectListItem {Value = "TM", Text = "TURKMENISTAN"},
                            new SelectListItem {Value = "TC", Text = "TURKS AND CAICOS ISLANDS"},
                            new SelectListItem {Value = "TV", Text = "TUVALU"},
                            new SelectListItem {Value = "UG", Text = "UGANDA"},
                            new SelectListItem {Value = "UA", Text = "UKRAINE"},
                            new SelectListItem {Value = "AE", Text = "UNITED ARAB EMIRATES"},
                            new SelectListItem {Value = "GB", Text = "UNITED KINGDOM"},
                            new SelectListItem {Value = "US", Text = "UNITED STATES"},
                            new SelectListItem {Value = "UM", Text = "UNITED STATES MINOR OUTLYING ISLANDS"},
                            new SelectListItem {Value = "UY", Text = "URUGUAY"},
                            new SelectListItem {Value = "UZ", Text = "UZBEKISTAN"},
                            new SelectListItem {Value = "VU", Text = "VANUATU"},
                            new SelectListItem {Value = "VE", Text = "VENEZUELA, BOLIVARIAN REPUBLIC OF"},
                            new SelectListItem {Value = "VN", Text = "VIET NAM"},
                            new SelectListItem {Value = "VG", Text = "VIRGIN ISLANDS, BRITISH"},
                            new SelectListItem {Value = "VI", Text = "VIRGIN ISLANDS, U.S."},
                            new SelectListItem {Value = "WF", Text = "WALLIS AND FUTUNA"},
                            new SelectListItem {Value = "EH", Text = "WESTERN SAHARA"},
                            new SelectListItem {Value = "YE", Text = "YEMEN"},
                            new SelectListItem {Value = "ZM", Text = "ZAMBIA"},
                            new SelectListItem {Value = "ZW", Text = "ZIMBABWE"}
                        }, new { @id = "Nationality", @class = "select2me" })
                    </div>
                }
                else
                {
                    <div class="controls">
                        @Html.DropDownListFor(model => model.EmployeeViewModel.Employee.EmployeeNationality, new[]
                    {
                        new SelectListItem { Value = "", Text = ""},
                        new SelectListItem { Value = "AF", Text = "أفغانستان"},
                        new SelectListItem { Value = "AX", Text = "جزر أولان"},
                        new SelectListItem { Value = "AL", Text = "ألبانيا"},
                        new SelectListItem { Value = "DZ", Text = "الجزائر"},
                        new SelectListItem { Value = "AS", Text = "ساموا الأمريكية"},
                        new SelectListItem { Value = "AD", Text = "أندورا"},
                        new SelectListItem { Value = "AO", Text = "أنجولا"},
                        new SelectListItem { Value = "AI", Text = "أنجويلا"},
                        new SelectListItem { Value = "AQ", Text = "القطب الجنوبي"},
                        new SelectListItem { Value = "AG", Text = "أنتيجوا وبربودا"},
                        new SelectListItem { Value = "AR", Text = "الأرجنتين"},
                        new SelectListItem { Value = "AM", Text = "أرمينيا"},
                        new SelectListItem { Value = "AW", Text = "آروبا"},
                        new SelectListItem { Value = "AU", Text = "أستراليا"},
                        new SelectListItem { Value = "AT", Text = "النمسا"},
                        new SelectListItem { Value = "AZ", Text = "أذربيجان"},
                        new SelectListItem { Value = "BS", Text = "الباهاما"},
                        new SelectListItem { Value = "BH", Text = "البحرين"},
                        new SelectListItem { Value = "BD", Text = "بنجلاديش"},
                        new SelectListItem { Value = "BB", Text = "بربادوس"},
                        new SelectListItem { Value = "BY", Text = "روسيا البيضاء"},
                        new SelectListItem { Value = "BE", Text = "بلجيكا"},
                        new SelectListItem { Value = "BZ", Text = "بليز"},
                        new SelectListItem { Value = "BJ", Text = "بنين"},
                        new SelectListItem { Value = "BM", Text = "برمودا"},
                        new SelectListItem { Value = "BT", Text = "بوتان"},
                        new SelectListItem { Value = "BO", Text = "بوليفيا"},
                        //new SelectListItem { Value = "BQ", Text = "BONAIRE, SINT EUSTATIUS AND SABA"},
                        new SelectListItem { Value = "BA", Text = "البوسنة والهرسك"},
                        new SelectListItem { Value = "BW", Text = "بتسوانا"},
                        new SelectListItem { Value = "BV", Text = "جزيرة بوفيه"},
                        new SelectListItem { Value = "BR", Text = "البرازيل"},
                        new SelectListItem { Value = "IO", Text = "المحيط الهندي البريطاني"},
                        new SelectListItem { Value = "BN", Text = "بروناي"},
                        new SelectListItem { Value = "BG", Text = "بلغاريا"},
                        new SelectListItem { Value = "BF", Text = "بوركينا فاسو"},
                        new SelectListItem { Value = "BI", Text = "بوروندي  "},
                        new SelectListItem { Value = "KH", Text = "كمبوديا"},
                        new SelectListItem { Value = "CM", Text = "الكاميرون"},
                        new SelectListItem { Value = "CA", Text = "كندا"},
                        new SelectListItem { Value = "CV", Text = "الرأس الأخضر"},
                        new SelectListItem { Value = "KY", Text = "جزر الكايمن"},
                        new SelectListItem { Value = "CF", Text = "جمهورية افريقيا الوسطى"},
                        new SelectListItem { Value = "TD", Text = "تشاد"},
                        new SelectListItem { Value = "CL", Text = "شيلي"},
                        new SelectListItem { Value = "CN", Text = "الصين"},
                        new SelectListItem { Value = "CX", Text = "جزيرة الكريسماس"},
                        new SelectListItem { Value = "CC", Text = "جزر كوكوس"},
                        new SelectListItem { Value = "CO", Text = "كولومبيا"},
                        new SelectListItem { Value = "KM", Text = "جزر القمر"},
                        new SelectListItem { Value = "CG", Text = "الكونغو - برازافيل"},
                        new SelectListItem { Value = "CD", Text = "جمهورية الكونغو الديمقراطية"},
                        new SelectListItem { Value = "CK", Text = "جزر كوك"},
                        new SelectListItem { Value = "CR", Text = "كوستاريكا"},
                        new SelectListItem { Value = "CI", Text = "ساحل العاج"},
                        new SelectListItem { Value = "HR", Text = "كرواتيا"},
                        new SelectListItem { Value = "CU", Text = "كوبا"},
                        //new SelectListItem { Value = "CW", Text = "CURAÇAO"},
                        new SelectListItem { Value = "CY", Text = "قبرص"},
                        new SelectListItem { Value = "CZ", Text = "جمهورية التشيك"},
                        new SelectListItem { Value = "DK", Text = "الدانمرك"},
                        new SelectListItem { Value = "DJ", Text = "جيبوتي"},
                        new SelectListItem { Value = "DM", Text = "دومينيكا"},
                        new SelectListItem { Value = "DO", Text = "جمهورية الدومينيك"},
                        new SelectListItem { Value = "EC", Text = "الاكوادور"},
                        new SelectListItem { Value = "EG", Text = "مصر"},
                        new SelectListItem { Value = "SV", Text = "السلفادور"},
                        new SelectListItem { Value = "GQ", Text = "غينيا الاستوائية"},
                        new SelectListItem { Value = "ER", Text = "اريتريا"},
                        new SelectListItem { Value = "EE", Text = "استونيا"},
                        new SelectListItem { Value = "ET", Text = "اثيوبيا"},
                        new SelectListItem { Value = "FK", Text = "جزر فوكلاند"},
                        new SelectListItem { Value = "FO", Text = "جزر فارو"},
                        new SelectListItem { Value = "FJ", Text = "فيجي"},
                        new SelectListItem { Value = "FI", Text = "فنلندا"},
                        new SelectListItem { Value = "FR", Text = "فرنسا"},
                        new SelectListItem { Value = "GF", Text = "غويانا"},
                        new SelectListItem { Value = "PF", Text = "بولينيزيا الفرنسية"},
                        new SelectListItem { Value = "TF", Text = "المقاطعات الجنوبية الفرنسية"},
                        new SelectListItem { Value = "GA", Text = "الجابون"},
                        new SelectListItem { Value = "GM", Text = "غامبيا"},
                        new SelectListItem { Value = "GE", Text = "جورجيا"},
                        new SelectListItem { Value = "DE", Text = "ألمانيا"},
                        new SelectListItem { Value = "GH", Text = "غانا"},
                        new SelectListItem { Value = "GI", Text = "جبل طارق"},
                        new SelectListItem { Value = "GR", Text = "اليونان"},
                        new SelectListItem { Value = "GL", Text = "جرينلاند"},
                        new SelectListItem { Value = "GD", Text = "جرينادا"},
                        new SelectListItem { Value = "GP", Text = "جوادلوب"},
                        new SelectListItem { Value = "GU", Text = "جوام"},
                        new SelectListItem { Value = "GT", Text = "جواتيمالا"},
                        //new SelectListItem { Value = "GG", Text = "GUERNSEY"},
                        new SelectListItem { Value = "GN", Text = "غينيا"},
                        new SelectListItem { Value = "GW", Text = "غينيا بيساو"},
                        new SelectListItem { Value = "GY", Text = "غيانا"},
                        new SelectListItem { Value = "HT", Text = "هايتي"},
                        new SelectListItem { Value = "HM", Text = "جزيرة هيرد وماكدونالد"},
                        new SelectListItem { Value = "VA", Text = "الفاتيكان"},
                        new SelectListItem { Value = "HN", Text = "هندوراس"},
                        new SelectListItem { Value = "HK", Text = "هونج كونج الصينية"},
                        new SelectListItem { Value = "HU", Text = "المجر"},
                        new SelectListItem { Value = "IS", Text = "أيسلندا"},
                        new SelectListItem { Value = "IN", Text = "الهند"},
                        new SelectListItem { Value = "ID", Text = "اندونيسيا"},
                        new SelectListItem { Value = "IR", Text = "ايران"},
                        new SelectListItem { Value = "IQ", Text = "العراق"},
                        new SelectListItem { Value = "IE", Text = "أيرلندا"},
                        new SelectListItem { Value = "IM", Text = "جزيرة مان"},
                        new SelectListItem { Value = "IL", Text = "اسرائيل"},
                        new SelectListItem { Value = "IT", Text = "ايطاليا"},
                        new SelectListItem { Value = "JM", Text = "جامايكا"},
                        new SelectListItem { Value = "JP", Text = "اليابان"},
                        new SelectListItem { Value = "JE", Text = "جيرسي"},
                        new SelectListItem { Value = "JO", Text = "الأردن"},
                        new SelectListItem { Value = "KZ", Text = "كازاخستان"},
                        new SelectListItem { Value = "KE", Text = "كينيا"},
                        new SelectListItem { Value = "KI", Text = "كيريباتي"},
                        new SelectListItem { Value = "KP", Text = "كوريا الشمالية"},
                        new SelectListItem { Value = "KR", Text = "كوريا الجنوبية"},
                        new SelectListItem { Value = "KW", Text = "الكويت"},
                        new SelectListItem { Value = "KG", Text = "قرغيزستان"},
                        new SelectListItem { Value = "LA", Text = "لاوس"},
                        new SelectListItem { Value = "LV", Text = "لاتفيا"},
                        new SelectListItem { Value = "LB", Text = "لبنان"},
                        new SelectListItem { Value = "LS", Text = "ليسوتو"},
                        new SelectListItem { Value = "LR", Text = "ليبيريا"},
                        new SelectListItem { Value = "LY", Text = "ليبيا"},
                        new SelectListItem { Value = "LI", Text = "ليختنشتاين"},
                        new SelectListItem { Value = "LT", Text = "ليتوانيا"},
                        new SelectListItem { Value = "LU", Text = "لوكسمبورج"},
                        new SelectListItem { Value = "MO", Text = "ماكاو الصينية"},
                        new SelectListItem { Value = "MK", Text = "مقدونيا"},
                        new SelectListItem { Value = "MG", Text = "مدغشقر"},
                        new SelectListItem { Value = "MW", Text = "ملاوي"},
                        new SelectListItem { Value = "MY", Text = "ماليزيا"},
                        new SelectListItem { Value = "MV", Text = "جزر الملديف"},
                        new SelectListItem { Value = "ML", Text = "مالي"},
                        new SelectListItem { Value = "MT", Text = "مالطا"},
                        new SelectListItem { Value = "MH", Text = "جزر المارشال"},
                        new SelectListItem { Value = "MQ", Text = "مارتينيك"},
                        new SelectListItem { Value = "MR", Text = "موريتانيا"},
                        new SelectListItem { Value = "MU", Text = "موريشيوس"},
                        new SelectListItem { Value = "YT", Text = "مايوت"},
                        new SelectListItem { Value = "MX", Text = "المكسيك"},
                        new SelectListItem { Value = "FM", Text = "ميكرونيزيا"},
                        new SelectListItem { Value = "MD", Text = "مولدافيا"},
                        new SelectListItem { Value = "MC", Text = "موناكو"},
                        new SelectListItem { Value = "MN", Text = "منغوليا"},
                        new SelectListItem { Value = "ME", Text = "الجبل الأسود"},
                        new SelectListItem { Value = "MS", Text = "مونتسرات"},
                        new SelectListItem { Value = "MA", Text = "المغرب"},
                        new SelectListItem { Value = "MZ", Text = "موزمبيق"},
                        new SelectListItem { Value = "MM", Text = "ميانمار"},
                        new SelectListItem { Value = "NA", Text = "ناميبيا"},
                        new SelectListItem { Value = "NR", Text = "نورو"},
                        new SelectListItem { Value = "NP", Text = "نيبال"},
                        new SelectListItem { Value = "NL", Text = "هولندا"},
                        new SelectListItem { Value = "NC", Text = "كاليدونيا الجديدة"},
                        new SelectListItem { Value = "NZ", Text = "نيوزيلاندا"},
                        new SelectListItem { Value = "NI", Text = "نيكاراجوا"},
                        new SelectListItem { Value = "NE", Text = "النيجر"},
                        new SelectListItem { Value = "NG", Text = "نيجيريا"},
                        new SelectListItem { Value = "NU", Text = "نيوي"},
                        new SelectListItem { Value = "NF", Text = "جزيرة نورفوك"},
                        new SelectListItem { Value = "MP", Text = "جزر ماريانا الشمالية"},
                        new SelectListItem { Value = "NO", Text = "النرويج"},
                        new SelectListItem { Value = "OM", Text = "عمان"},
                        new SelectListItem { Value = "PK", Text = "باكستان"},
                        new SelectListItem { Value = "PW", Text = "بالاو"},
                        new SelectListItem { Value = "PS", Text = "فلسطين"},
                        new SelectListItem { Value = "PA", Text = "بنما"},
                        new SelectListItem { Value = "PG", Text = "بابوا غينيا الجديدة"},
                        new SelectListItem { Value = "PY", Text = "باراجواي"},
                        new SelectListItem { Value = "PE", Text = "بيرو"},
                        new SelectListItem { Value = "PH", Text = "الفيلبين"},
                        new SelectListItem { Value = "PN", Text = "بتكايرن"},
                        new SelectListItem { Value = "PL", Text = "بولندا"},
                        new SelectListItem { Value = "PT", Text = "البرتغال"},
                        new SelectListItem { Value = "PR", Text = "بورتوريكو"},
                        new SelectListItem { Value = "QA", Text = "قطر"},
                        new SelectListItem { Value = "RE", Text = "روينيون"},
                        new SelectListItem { Value = "RO", Text = "رومانيا"},
                        new SelectListItem { Value = "RU", Text = "روسيا"},
                        new SelectListItem { Value = "RW", Text = "رواندا"},
                        //new SelectListItem { Value = "BL", Text = "SAINT BARTHÉLEMY"},
                        new SelectListItem { Value = "SH", Text = "سانت هيلنا"},
                        new SelectListItem { Value = "KN", Text = "سانت كيتس ونيفيس"},
                        new SelectListItem { Value = "LC", Text = "سانت لوسيا"},
                        new SelectListItem { Value = "MF", Text = "سانت مارتين"},
                        new SelectListItem { Value = "PM", Text = "سانت بيير وميكولون"},
                        new SelectListItem { Value = "VC", Text = "سانت فنسنت وغرنادين"},
                        new SelectListItem { Value = "WS", Text = "ساموا"},
                        new SelectListItem { Value = "SM", Text = "سان مارينو"},
                        new SelectListItem { Value = "ST", Text = "ساو تومي وبرينسيبي"},
                        new SelectListItem { Value = "SA", Text = "المملكة العربية السعودية"},
                        new SelectListItem { Value = "SN", Text = "السنغال"},
                        new SelectListItem { Value = "RS", Text = "صربيا"},
                        new SelectListItem { Value = "SC", Text = "سيشل"},
                        new SelectListItem { Value = "SL", Text = "سيراليون"},
                        new SelectListItem { Value = "SG", Text = "سنغافورة"},
                        //new SelectListItem { Value = "SX", Text = "SINT MAARTEN (DUTCH PART)"},
                        new SelectListItem { Value = "SK", Text = "سلوفاكيا"},
                        new SelectListItem { Value = "SI", Text = "سلوفينيا"},
                        new SelectListItem { Value = "SB", Text = "جزر سليمان"},
                        new SelectListItem { Value = "SO", Text = "الصومال"},
                        new SelectListItem { Value = "ZA", Text = "جمهورية جنوب افريقيا"},
                        new SelectListItem { Value = "GS", Text = "جورجيا الجنوبية وجزر ساندويتش الجنوبية"},
                        //new SelectListItem { Value = "SS", Text = "SOUTH SUDAN"},
                        new SelectListItem { Value = "ES", Text = "أسبانيا"},
                        new SelectListItem { Value = "LK", Text = "سريلانكا"},
                        new SelectListItem { Value = "SD", Text = "السودان"},
                        new SelectListItem { Value = "SR", Text = "سورينام"},
                        new SelectListItem { Value = "SJ", Text = "سفالبارد وجان مايان"},
                        new SelectListItem { Value = "SZ", Text = "سوازيلاند"},
                        new SelectListItem { Value = "SE", Text = "السويد"},
                        new SelectListItem { Value = "CH", Text = "سويسرا"},
                        new SelectListItem { Value = "SY", Text = "سوريا"},
                        new SelectListItem { Value = "TW", Text = "تايوان"},
                        new SelectListItem { Value = "TJ", Text = "طاجكستان"},
                        new SelectListItem { Value = "TZ", Text = "تانزانيا"},
                        new SelectListItem { Value = "TH", Text = "تايلند"},
                        new SelectListItem { Value = "TL", Text = "تيمور الشرقية"},
                        new SelectListItem { Value = "TG", Text = "توجو"},
                        new SelectListItem { Value = "TK", Text = "توكيلو"},
                        new SelectListItem { Value = "TO", Text = "تونجا"},
                        new SelectListItem { Value = "TT", Text = "ترينيداد وتوباغو"},
                        new SelectListItem { Value = "TN", Text = "تونس"},
                        new SelectListItem { Value = "TR", Text = "تركيا"},
                        new SelectListItem { Value = "TM", Text = "تركمانستان"},
                        new SelectListItem { Value = "TC", Text = "جزر الترك وجايكوس"},
                        new SelectListItem { Value = "TV", Text = "توفالو"},
                        new SelectListItem { Value = "UG", Text = "أوغندا"},
                        new SelectListItem { Value = "UA", Text = "أوكرانيا"},
                        new SelectListItem { Value = "AE", Text = "الامارات العربية المتحدة"},
                        new SelectListItem { Value = "GB", Text = "المملكة المتحدة"},
                        new SelectListItem { Value = "US", Text = "الولايات المتحدة الأمريكية"},
                        new SelectListItem { Value = "UM", Text = "جزر الولايات المتحدة البعيدة الصغيرة"},
                        new SelectListItem { Value = "UY", Text = "أورجواي"},
                        new SelectListItem { Value = "UZ", Text = "أوزبكستان"},
                        new SelectListItem { Value = "VU", Text = "فانواتو"},
                        new SelectListItem { Value = "VE", Text = "فنزويلا"},
                        new SelectListItem { Value = "VN", Text = "فيتنام"},
                        new SelectListItem { Value = "VG", Text = "جزر فرجين البريطانية"},
                        new SelectListItem { Value = "VI", Text = "جزر فرجين الأمريكية"},
                        new SelectListItem { Value = "WF", Text = "جزر والس وفوتونا"},
                        new SelectListItem { Value = "EH", Text = "الصحراء الغربية"},
                        new SelectListItem { Value = "YE", Text = "اليمن"},
                        new SelectListItem { Value = "ZM", Text = "زامبيا"},
                        new SelectListItem { Value = "ZW", Text = "زيمبابوي"}
                    }, new { @id = "Nationality", @class = "select2me" })
                    </div>
                }

            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="IqamaId">@EPMS.WebModels.Resources.HR.Employee.IqamaNo</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeIqama, new { @id = "IqamaId", @class = "toBeRequired toBeDisable" })
                </div>
            </div>
        </div>
        @*<div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="IqamaIssueDate">Iqama Issue Date Or National ID Issue Date</label>
                </div>
                <div class="span9">
                    <div class="controls span4">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeIqamaIssueDtAr, new { @id = "IqamaIssueDateAr", onchange = "HijriToGregorian(this,'#IqamaIssueDate')", @class = "col-lg-2 datepickerArabic form-control " })
                        @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeIqamaIssueDt, String.Empty, new { @class = "required" })
                    </div>
                    <div class="controls span4">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeIqamaIssueDt, new { @id = "IqamaIssueDate", @class = "col-lg-2 datepicker form-control " })

                    </div>
                </div>
            </div>*@
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="IqamaExpiryDate">@EPMS.WebModels.Resources.HR.Employee.IqamaExpiryDate</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @if (direction == "ltr")
                    {
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeIqamaExpiryDt, new { @class = "datepickerGregorian cursorHand span4", @id = "IqamaExpiryDate", @readonly = true, @placeholder = "Gregorian", onchange = "GregorianToHijri(this,'#IqamaExpiryDateAr')" })
                        @Html.TextBox("Start Date", null, new { @class = "datepickerArabic cursorHand span4 marginForDatesLeft", @id = "IqamaExpiryDateAr", @readonly = true, @placeholder = "Hijri", onchange = "HijriToGregorian(this,'#IqamaExpiryDate')" })
                    }
                    else
                    {
                        @Html.TextBox("Start Date", null, new { @class = "datepickerArabic cursorHand span4 marginForDatesLeft", @id = "IqamaExpiryDateAr", @readonly = true, @placeholder = "Hijri", onchange = "HijriToGregorian(this,'#IqamaExpiryDate')" })
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeIqamaExpiryDt, new { @class = "datepickerGregorian cursorHand span4", @id = "IqamaExpiryDate", @readonly = true, @placeholder = "Gregorian", onchange = "GregorianToHijri(this,'#IqamaExpiryDateAr')" })
                    }
                </div>
                @*<div class="controls span4">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeIqamaExpiryDtAr, new { @id = "IqamaExpiryDateAr", @readonly = true, onchange = "HijriToGregorian(this,'#IqamaExpiryDate')", @class = "cursorHand col-lg-2 datepickerArabic form-control " })
                        @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeeIqamaExpiryDt, String.Empty, new { @class = "required" })
                    </div>
                    <div class="controls span4">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeeIqamaExpiryDt, new { @id = "IqamaExpiryDate", onchange = "GregorianToHijri(this,'#IqamaExpiryDateAr')", @class = "col-lg-2 datepickerGregorian form-control toBeRequired cursorHand", @readonly = true })
                    </div>*@
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="PassportID">@EPMS.WebModels.Resources.HR.Employee.PassId</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeePassportNum, new { @id = "PassportID", @class = "toBeRequired toBeDisable" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="PassportExpiryDate">@EPMS.WebModels.Resources.HR.Employee.PassExpiryDate</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @if (direction == "ltr")
                    {
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeePassportExpiryDt, new {@class = "datepickerPassport cursorHand span4", @id = "PassportExpiryDate", @readonly = true, @placeholder = "Gregorian", onchange = "GregorianToHijri(this,'#PassportExpiryDateAr')"})
                        @Html.TextBox("Start Date", null, new {@class = "datepickerArPassport cursorHand span4 marginForDatesLeft", @id = "PassportExpiryDateAr", @readonly = true, @placeholder = "Hijri", onchange = "HijriToGregorian(this,'#PassportExpiryDate')"})
                    }
                    else
                    {
                        @Html.TextBox("Start Date", null, new {@class = "datepickerArPassport cursorHand span4", @id = "PassportExpiryDateAr", @readonly = true, @placeholder = "Hijri", onchange = "HijriToGregorian(this,'#PassportExpiryDate')"})
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeePassportExpiryDt, new { @class = "datepickerPassport cursorHand span4 marginForDatesRight", @id = "PassportExpiryDate", @readonly = true, @placeholder = "Gregorian", onchange = "GregorianToHijri(this,'#PassportExpiryDateAr')" })
                    }
                </div>
                @*<div class="controls span4">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeePassportExpiryDtAr, new { @id = "PassportExpiryDateAr", @readonly = true, onchange = "HijriToGregorian(this,'#PassportExpiryDate')", @class = "cursorHand col-lg-2 datepickerArabic form-control " })
                        @Html.ValidationMessageFor(m => m.EmployeeViewModel.Employee.EmployeePassportExpiryDt, String.Empty, new { @class = "required" })
                    </div>
                    <div class="controls span4">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.EmployeePassportExpiryDt, new { @id = "PassportExpiryDate", onchange = "GregorianToHijri(this,'#PassportExpiryDateAr')", @class = "col-lg-2 datepickerGregorian form-control toBeRequired cursorHand", @readonly = true })
                    </div>*@
            </div>
        </div>
        <div id="Descp">
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="descpEn">@EPMS.WebModels.Resources.HR.Employee.ExtraInfo</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        <input type="text" id="descpEn" readonly="readonly" />
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="descpAr">@EPMS.WebModels.Resources.HR.Employee.ExtraInfo</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        <input type="text" id="descpAr" readonly="readonly" />
                    </div>
                </div>
            </div>
        </div>
        <div id="CKEditorDescp">
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="ExtraInformationE">@EPMS.WebModels.Resources.HR.Employee.ExtraInfo</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextAreaFor(model => model.EmployeeViewModel.Employee.EmployeeDetailsE, new { @dir = "ltr", @id = "ExtraInformationE" })
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="ExtraInformationA">@EPMS.WebModels.Resources.HR.Employee.ExtraInfo</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextAreaFor(model => model.EmployeeViewModel.Employee.EmployeeDetailsA, new { @id = "ExtraInformationA" })
                    </div>
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="BasicSalary">@EPMS.WebModels.Resources.HR.Employee.BasicSal</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Employee.JobTitle.BasicSalary, new { @readonly = true, @id = "BasicSalary", @class = "toBeDisable" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allownce1">@EPMS.WebModels.Resources.HR.Employee.Allow1</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Allowance.Allowance1, new { @id = "Allownce1", @class = "toBeDisable" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allownce2">@EPMS.WebModels.Resources.HR.Employee.Allow2</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Allowance.Allowance2, new { @id = "Allownce2", @class = "toBeDisable" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allownce3">@EPMS.WebModels.Resources.HR.Employee.Allow3</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Allowance.Allowance3, new { @id = "Allownce3", @class = "toBeDisable" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allownce4">@EPMS.WebModels.Resources.HR.Employee.Allow4</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Allowance.Allowance4, new { @id = "Allownce4", @class = "toBeDisable" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allownce5">@EPMS.WebModels.Resources.HR.Employee.Allow5</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeViewModel.Allowance.Allowance5, new { @id = "Allownce5", @class = "toBeDisable" })
                </div>
            </div>
        </div>
        @if (Model.EmployeeViewModel.Employee != null && userPermissionsSet.Contains("EmployeeCreate") && Model.EmployeeViewModel.Employee.EmployeeId > 0)
        {
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="Deduction1">@EPMS.WebModels.Resources.HR.Employee.Deduc1</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Deduction1, new { @id = "Deduction1", @readonly = true })
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="Deduction2">@EPMS.WebModels.Resources.HR.Employee.Deduc2</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeViewModel.Deduction2, new { @id = "Deduction2", @readonly = true })
                    </div>
                </div>
            </div>
        }
        @if (Model.EmployeeViewModel.Employee != null && Model.EmployeeViewModel.Employee.EmployeeId > 0)
        {
            if (Convert.ToString(Session["RoleName"]) == "Employee")
            {
                <div class="control-group row-fluid">
                    <div class="span3">
                        <label class="control-label" for=""><a href="@(ConfigurationManager.AppSettings["SiteURL"].ToString())/HR/Payroll/Detail/@Model.EmployeeViewModel.Employee.EmployeeId">Payroll Page</a></label>
                    </div>
                </div>
            }
            @*if (module.Contains("Human Resources System") || module.Contains("HRS"))
            {*@
                <div class="alert alert-info alert-block">
                    <i class="icon-alert icon-alert-info"></i>
                    <strong>@EPMS.WebModels.Resources.HR.Employee.ReqHistory</strong>
                </div>
                if (Convert.ToString(Session["RoleName"]) != "Admin")
                {
                    <div>
                        <header>
                            <i class="icon-big-notepad"></i>
                            <h2><small>@EPMS.WebModels.Resources.HR.Request.Requests</small></h2>
                            <h3> <small><a href="~/HR/Request/Create">@EPMS.WebModels.Resources.HR.Request.CreateRequest</a></small></h3>
                        </header>
                    </div>
                }
                <!--Sortable Responsive Table begin-->
                <div class="row-fluid">
                    <div class="span12">
                        <table class="table table-striped table-responsive" id="tableRequsts">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>@EPMS.WebModels.Resources.HR.Request.Requests</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.RequestListViewModel.aaData != null)
                                {
                                    foreach (var item in Model.RequestListViewModel.aaData.ToList())
                                    {
                                        <tr>
                                            <td>@item.RequestId</td>
                                            <td>@Html.ActionLink(@item.RequestTopic, "Create", "Request", new { id = item.RequestId }, null) </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            @*}



            if (module.Contains("Project Management System") || module.Contains("PMS"))
            {*@
                <!--Sortable Responsive Table end-->
                <div class="alert alert-info alert-block">
                    <i class="icon-alert icon-alert-info"></i>
                    <strong>@EPMS.WebModels.Resources.HR.Tasks.AssigTasks</strong>
                </div>
                <!--Sortable Responsive Table begin-->
                <div class="row-fluid">
                    <div class="span12">
                        <table class="table table-striped table-responsive" id="tableProjects">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>@EPMS.WebModels.Resources.HR.Tasks.Task</th>
                                    <th>@EPMS.WebModels.Resources.HR.Tasks.ProjName</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.TaskEmployees != null)
                                {
                                    foreach (var item in Model.TaskEmployees)
                                    {
                                        <tr>
                                            <td>@item.TaskEmployeeId</td>
                                            @if (direction == "ltr")
                                            {
                                                <td>@Html.ActionLink(@item.ProjectTask.TaskNameE, "Create", "Task", new { area = "PMS", id = item.TaskId }, null) </td>
                                                <td>@item.ProjectTask.ProjectNameE</td>
                                            }
                                            else
                                            {
                                                <td>@Html.ActionLink(@item.ProjectTask.TaskNameA, "Create", "Task", new { area = "PMS", id = item.TaskId }, null) </td>
                                                <td>@item.ProjectTask.ProjectNameA</td>
                                            }
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            @*}*@
        }
        @if (userPermissionsSet.Contains("EmployeeCreate") && Model.EmployeeViewModel.Employee.EmployeeId > 0)
        {
            <div class="alert alert-info alert-block">
                <i class="icon-alert icon-alert-info"></i>
                <strong>Job History</strong>
            </div>
            <div class="row-fluid">
                <div class="span12">
                    <table class="table table-striped table-responsive" id="tableJobHistory">
                        <thead>
                            <tr>
                                <th> Job Title</th>
                                <th>From</th>
                                <th>Till</th>
                                <th>Basic Salary</th>
                                <th>Salary with allowances</th>
                                <th>Total Salary Recived</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var jobHistories in Model.EmployeeViewModel.JobHistories)
                            {
                                <tr>
                                    <td>@jobHistories.JobTitle</td>
                                    <td>@jobHistories.From</td>
                                    <td>@jobHistories.To</td>
                                    <td>@jobHistories.BasicSalary</td>
                                    <td>@jobHistories.SalaryWithAllowances</td>
                                    <td>@jobHistories.TotalSalaryReceived</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
        @if (userPermissionsSet.Contains("EmployeeCreate") && Model.EmployeeViewModel.Employee.EmployeeId > 0)
        {
            <div class="control-group row-fluid">
                <div class="span3 span-inset">
                    <button type="submit" class="btn" onclick="" name="Save">@Model.EmployeeViewModel.BtnText</button>
                </div>
                @if (Model.EmployeeViewModel.Employee.IsActivated == true)
                {
                    <div class="span3 span-inset">
                        <button type="submit" class="btn" name="Deactivate">@EPMS.WebModels.Resources.HR.Employee.DeactiveEmp</button>
                    </div>
                }
                else if (Model.EmployeeViewModel.Employee.IsActivated == false)
                {
                    <div class="span3 span-inset">
                        <button type="submit" class="btn" name="Activate">@EPMS.WebModels.Resources.HR.Employee.ActiveEmp</button>
                    </div>
                }
            </div>
        }
        else if (userPermissionsSet.Contains("EmployeeCreate"))
        {
            <div class="control-group row-fluid">
                <div class="span3 span-inset">
                    <button type="submit" class="btn" onclick="validateFormA(event)" name="Save">@Model.EmployeeViewModel.BtnText</button>
                </div>
            </div>
        }
    </div>
}
<script src="~/RichTextEditor/ckeditor.js"></script>
<script>
    function validateFormA(event) {
        var counter = 0;
        var jobTitle = $("#JobTitle").val();
        if (jobTitle == null || jobTitle == "" || jobTitle == 0 || jobTitle == undefined) {
            if ('@direction' == "ltr") {
                $("#jobTitleValidation").text("Please Select Job Title");
            } else {
                $("#jobTitleValidation").text("الرجاء اختيار المسمى الوظيفي");
            }
            $("#jobTitleValidation").addClass("Error");
            counter++;
        } else {
            $("#jobTitleValidation").text("");
            $("#jobTitleValidation").removeClass("Error");
        }
        if (counter > 0) {
            //implementing focus back to error
            if ($(".Error").length > 0) {
                var divId = $(".Error")[0].id;
                if ($("#" + divId).length > 0) {
                    $('html,body').animate({
                        scrollTop: $(".jobTitleDDL").offset().top
                    }, 'slow');
                    event.preventDefault();
                    return false;
                }
            }
        }
        return true;
    }
    $(document).ready(function () {
        var isDetail;
        var val = '@userPermissionsSet.Contains("EmployeeCreate")';
        if (val == 'True') {
            isDetail = false;
        } else {
            isDetail = true;
        }
        if (isDetail == true) {
            $('.' + 'toBeDisable' + ':input').attr('disabled', true);
            $('#JobTitle').select2('disable');
            $('#Nationality').select2('disable');
            $('#MaritalStatus').select2('disable');
            var descpE = '@Html.Raw(Model.EmployeeViewModel.Employee.EmployeeDetailsE)';
            var regex = /(<([^>]+)>)/ig;
            var result = descpE.replace(regex, "");
            $("#descpEn").val(result);
            var descpA = '@Html.Raw(Model.EmployeeViewModel.Employee.EmployeeDetailsA)';
            regex = /(<([^>]+)>)/ig;
            result = descpA.replace(regex, "");
            $("#descpAr").val(result);
            $("#Descp").show();
            $("#CKEditorDescp").hide();
        }
        if (isDetail == false) {
            // CK Editor
            CKEDITOR.replace('ExtraInformationE', {
                filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
            });
            CKEDITOR.replace('ExtraInformationA', {
                filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
            });
            $("#Descp").hide();
            $("#CKEditorDescp").show();
        }
        $("#AddEditEmployeeForm").validate({
            errorElement: "span",
            errorClass: "error",
            onclick: true,
            rules: {
                "req": {
                    required: true
                },
                "numbers": {
                    required: false,
                    digits: true
                },
                "email": {
                    email: true
                },
                "url": {
                    url: true
                },
                "date": {
                    date: true
                }
            }
        });

        var myDate = new Date();
        var currentDate = myDate.getDate() + '/' + (myDate.getMonth() + 1) + '/' + myDate.getFullYear();
        $(".datepickerPassport").mask('99/99/9999');
        $(".datepickerPassport").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: "dd/mm/yy",
            minDate: "dateToday",
            yearRange: "1950:2050"
        });
        var calendar = $.calendars.instance('islamic');
        $('.datepickerArPassport').calendarsPicker({
            calendar: calendar,
            minDate: "dateToday",
            onSelect: function () {
                $(this).change();
            }
        });
        $(".datepickerDOB").mask('99/99/9999');
        $(".datepickerDOB").datepicker({
            changeMonth: true,
            changeYear: true,
            dateFormat: "dd/mm/yy",
            maxDate: "dateToday",
            yearRange: "1950:2050"
        });
        var calendar = $.calendars.instance('islamic');
        $('.datepickerDOBAr').calendarsPicker({
            calendar: calendar,
            maxDate: "dateToday",
            onSelect: function () {
                $(this).change();
            }
        });
        // upload Image
        var errors = "";
        var siteUrl = $('#siteURL').val();
        var url = siteUrl + "/HR/Employee/UploadEmployeePhoto";
        $('#upload').mfupload({
            type: 'jpg,png,tif,jpeg,exe', //all types
            maxsize: 1024,
            post_upload: url,
            folder: "./",
            ini_text: "@EPMS.WebModels.Resources.CP.Profile.UploadBox",
            over_text: "@EPMS.WebModels.Resources.CP.Profile.DropHere",
            over_col: '#666666',
            over_bkcol: '#f0f0f0',

            init: function () {
                $("#uploaded").empty();
            },

            start: function (result) {
                $("#uploaded").append("<div id='FILE" + result.fileno + "' class='files'>" + result.filename + "<div class='progress progress-info progress-thin'><div class='bar' id='PRO" + result.fileno + "'></div></div></div>");
            },

            loaded: function (result) {
                $("#PRO" + result.fileno).remove();
                $("#FILE" + result.fileno).html("Uploaded: " + result.filename + " (" + result.size + ")");
                $("#EmployeeImage").val(result.filename);
            },

            progress: function (result) {
                $("#PRO" + result.fileno).css("width", result.perc + "%");
            },

            error: function (error) {
                errors += error.filename + ": " + error.err_des + "\n";
            },

            completed: function () {
                if (errors != "") {
                    alert(errors);
                    errors = "";
                }
            }
        });

        // set JobId and Department Name
        $(".setDeptJobId").on("change", function () {
            var jobId = $(this).val();
            if (jobId != "") {
                $("#JobID").val(jobId);
                var jobsList = '@Html.Raw(Json.Encode(Model.EmployeeViewModel.JobTitleDeptList))';
                var parsed = JSON.parse(jobsList);

                $.each(parsed, function (key, value) {
                    if (value.JobId == jobId) {
                        $("#DepartmentName").val(value.DeptNameE);
                        $("#BasicSalary").val(value.BasicSalary);
                    }
                });
            } else {
                $("#DepartmentName").val(jobId);
                $("#JobID").val(jobId);
            }
        });
        $('#tableProjects').dataTable({
            "sPaginationType": "bootstrap",
            "aoColumns": [
                { "bVisible": false },
                null,
                null
            ],
            "fnInitComplete": function () {
            }
        });
        $('#tableRequsts').dataTable({
            "sPaginationType": "bootstrap",
            "aoColumns": [
                { "bVisible": false }, // cloumn to be hide
                null // not hide
            ],
            "fnInitComplete": function () {
            }
        });
        $('#tableJobHistory').dataTable({
            "sPaginationType": "bootstrap",
            "fnInitComplete": function () {
                $(".dataTables_wrapper select").select2({
                    dropdownCssClass: 'noSearch'
                });
            }
        });
        $(".dataTables_length select").select2({
            dropdownCssClass: 'noSearch'
        });

        // Gregorian Date Picker
        $(".datepicker").mask('99/99/9999');
        $(".datepicker").datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: "1900:2050"
        });
        // Arabic Date Picker for DOB
        var calendar = $.calendars.instance('islamic');
        $('.datepickerArabic').calendarsPicker({
            calendar: calendar,
            onSelect: function () {
                $(this).change();
            }
        });
        if ('@Model.EmployeeViewModel.Employee.EmployeeId' > 0) {
            if ($("#EmployeeDOB").val() != "") {
                $("#EmpDateOfBirthArabic").val(ConvertDates($("#EmployeeDOB").val(), "gregorian", "islamic"));
            }
            if ($("#IqamaExpiryDate").val() != "") {
                $("#IqamaExpiryDateAr").val(ConvertDates($("#IqamaExpiryDate").val(), "gregorian", "islamic"));
            }
            if ($("#PassportExpiryDate").val() != "") {
                $("#PassportExpiryDateAr").val(ConvertDates($("#PassportExpiryDate").val(), "gregorian", "islamic"));
            }
        }
        var specialKeys = new Array();
        specialKeys.push(8);
        $("#MobileNumber").keyup(function (e) {
            var keyCode = e.which ? e.which : e.keyCode;
            if ((keyCode >= 48 && keyCode <= 57) || (keyCode >= 96 && keyCode <= 105) || specialKeys.indexOf(keyCode) != -1) {
            } else {
                $("#MobileNumber").val("");
                $("#MobileNumber").focus();
                return false;
            }
            return true;
        });
    });
    function ConvertDates(dateTobeChanged, fromCalender, toCalender) {
        var calender = $.calendars.instance(fromCalender);
        var dateToBeChanged = calender.parseDate("dd/mm/yyyy", dateTobeChanged);
        calender = $.calendars.instance(toCalender);
        var changedDate = calender.fromJD(dateToBeChanged.toJD());
        return calender.formatDate("dd/mm/yyyy", changedDate);
    }
</script>
