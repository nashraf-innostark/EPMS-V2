@model  EPMS.Web.ViewModels.Request.EmployeeRequestViewModel
@{
    ViewBag.Title = Model.EmployeeRequest.RequestId > 0 ? "Update Request" : "Create Request";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- Navigation Bar -->
<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/HR/Request/Index">
                Requests List
            </a>
        </li>
        <li class="current">
            <a href="javascript:;">@ViewBag.Title</a>
        </li>
    </ul>
</div>
<!-- Page heading -->
<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@ViewBag.Title </small></h2>
</header>
<!--Notifications begin-->
@Html.Partial("_Alert")

<!-- Form starts.  -->
@using (Html.BeginForm("Create", "Request", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.EmployeeRequest.RequestId)
    @Html.HiddenFor(model => model.EmployeeRequest.RecCreatedBy)
    @Html.HiddenFor(model => model.EmployeeRequest.RecCreatedDt)
    <input type="hidden" id="UserRole" value="@ViewBag.UserRole" />
    <div class="container-fluid request">
        <!--Input Field of Request begin-->
        <div class="control-group row-fluid">
            <div class="span3">
                @Html.LabelFor(model => model.EmployeeRequest.Employee.EmployeeNameE, new { @class = "control-label" })
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeRequest.Employee.EmployeeNameE, new { @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.EmployeeRequest.Employee.EmployeeNameE)
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                @Html.LabelFor(model => model.EmployeeRequest.Employee.EmployeeId, new { @class = "control-label" })
            </div>
            <div class="span2">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeRequest.Employee.EmployeeId, new { @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.EmployeeRequest.Employee.EmployeeId)
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                @Html.LabelFor(model => model.EmployeeRequest.Employee.JobTitle.Department.DepartmentNameE, new { @class = "control-label" })
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeRequest.Employee.JobTitle.Department.DepartmentNameE, new { @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.EmployeeRequest.Employee.JobTitle.Department.DepartmentNameE)
                </div>
            </div>

        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                @Html.LabelFor(model => model.EmployeeRequest.RequestTopic, new { @class = "control-label" })
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeRequest.RequestTopic, new { @class = "toBeDisabled" })
                    @Html.ValidationMessageFor(model => model.EmployeeRequest.RequestTopic)
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                @Html.LabelFor(model => model.EmployeeRequestDetail.RequestDesc, new { @class = "control-label", @id="RequestDesc" })
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeRequestDetail.RequestDesc, new { @class = "toBeDisabled" })
                    @Html.ValidationMessageFor(model => model.EmployeeRequestDetail.RequestDesc)
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                @Html.LabelFor(model => model.EmployeeRequest.IsMonetary, new { @class = "control-label" })
            </div>
            <div class="span9 span-inset">
                <div data-on-label="YES" data-off-label="NO" class="switch switch-small" data-on="success" data-off="danger">
                    @Html.CheckBoxFor(model => model.EmployeeRequest.IsMonetary, new { @id = "IsMonetary", @class = "toBeDisabled" })
                </div>
            </div>
        </div>
        <!--End    --    Input Field of Request-->
        <!--Input Field of RequestDetail begin-->
        <div id="monetaryRequestControls" style="display: none">
            <div class="control-group row-fluid">
                <div class="span3">
                    @Html.LabelFor(model => model.EmployeeRequestDetail.LoanAmount, new { @class = "control-label" })
                </div>
                <div class="span2">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequestDetail.LoanAmount, new { @class = "toBeDisabled" })
                        @Html.ValidationMessageFor(model => model.EmployeeRequestDetail.LoanAmount)
                    </div>
                </div>
            </div>

            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">Loan Date (Hijri)</label>
                </div>
                <div class="span2">
                    <div class="controls">
                        @Html.TextBox("Loan Date", null, new { @class = "datepickerArabic cursorHand toBeDisabled", @id = "LoanDateAr", onchange = "HijriToGregorian(this,'#LoanDateEn')", @readonly = true })
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid">
                <div class="span3">
                    @Html.LabelFor(model => model.EmployeeRequestDetail.LoanDate, new { @class = "control-label" })
                </div>
                <div class="span2">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequestDetail.LoanDate, new { @class = "datepickerGregorian cursorHand toBeDisabled", @id = "LoanDateEn", onchange = "GregorianToHijri(this,'#LoanDateAr')", @readonly = true })
                        @Html.ValidationMessageFor(model => model.EmployeeRequestDetail.LoanDate)
                    </div>
                </div>
            </div>

            <div class="control-group row-fluid">
                <div class="span3">
                    @Html.LabelFor(model => model.EmployeeRequestDetail.InstallmentAmount, new { @class = "control-label" })
                </div>
                <div class="span2">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequestDetail.InstallmentAmount, new { @class = "toBeDisabled" })
                        @Html.ValidationMessageFor(model => model.EmployeeRequestDetail.InstallmentAmount)
                    </div>
                </div>
            </div>

            <div class="control-group row-fluid">
                <div class="span3">
                    @Html.LabelFor(model => model.EmployeeRequestDetail.NumberOfMonths, new { @class = "control-label" })
                </div>
                <div class="span2">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequestDetail.NumberOfMonths, new { @id = "NumberOfMonths", @class = "toBeDisabled" })
                        @Html.ValidationMessageFor(model => model.EmployeeRequestDetail.NumberOfMonths)
                    </div>
                </div>
            </div>

            <div class="control-group row-fluid">
                <div class="span3">
                    @Html.LabelFor(model => model.EmployeeRequestDetail.FirstInstallmentDate, new { @class = "control-label" })
                </div>
                <div class="span2">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequestDetail.FirstInstallmentDate, new { @class = "datepickerGregorian cursorHand toBeDisabled", @readonly = "readonly", @id = "FirstInstallmentDate" })
                        @Html.ValidationMessageFor(model => model.EmployeeRequestDetail.FirstInstallmentDate)
                    </div>
                </div>
            </div>

            <div class="control-group row-fluid">
                <div class="span3">
                    @Html.LabelFor(model => model.EmployeeRequestDetail.LastInstallmentDate, new { @class = "control-label" })
                </div>
                <div class="span2">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequestDetail.LastInstallmentDate, new { @class = "cursorHand toBeDisabled", @readonly = "readonly", @id = "LastInstallmentDate" })
                        @Html.ValidationMessageFor(model => model.EmployeeRequestDetail.LastInstallmentDate)
                    </div>
                </div>
            </div>
        </div>
        <div class="control-group row-fluid requestBtn">
            <div class="span3 span-inset">
                <button type="submit" class="btn toBeDisabled">@ViewBag.Title</button>
            </div>
        </div>
        <!--End    --    Input Field of RequestDetail-->
    </div>
    
        <!--Input Field of Request Reply begin-->
    <div id="requestReplyControls" style="display: none">
        <header>
            <i class="icon-big-notepad"></i>
            <h2><small>Request Reply </small></h2>
        </header>
        <div class="container-fluid requestReply">
            <div class="control-group row-fluid">
                <div class="span3">
                    @Html.LabelFor(model => model.EmployeeRequestReply.RequestDesc, new { @class = "control-label", @id = "RequestReply" })
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequestReply.RequestDesc, new { @class = "toBeDisabled" })
                        @Html.ValidationMessageFor(model => model.EmployeeRequestReply.RequestDesc)
                    </div>
                </div>
            </div>
            <div id="monetaryRequestReplyControls" style="display: none">
                <div class="control-group row-fluid">
                    <div class="span3">
                        @Html.LabelFor(model => model.EmployeeRequestReply.LoanAmount, new { @class = "control-label" })
                    </div>
                    <div class="span2">
                        <div class="controls">
                            @Html.TextBoxFor(model => model.EmployeeRequestReply.LoanAmount, new { @class = "toBeDisabled" })
                            @Html.ValidationMessageFor(model => model.EmployeeRequestReply.LoanAmount)
                        </div>
                    </div>
                </div>

                <div class="control-group row-fluid">
                    <div class="span3">
                        <label class="control-label">Loan Date (Hijri)</label>
                    </div>
                    <div class="span2">
                        <div class="controls">
                            @Html.TextBox("Loan Date", null, new { @class = "datepickerArabic cursorHand toBeDisabled", @id = "LoanDateAr", onchange = "HijriToGregorian(this,'#LoanDateEn')", @readonly = true })
                        </div>
                    </div>
                </div>
                <div class="control-group row-fluid">
                    <div class="span3">
                        @Html.LabelFor(model => model.EmployeeRequestReply.LoanDate, new { @class = "control-label" })
                    </div>
                    <div class="span2">
                        <div class="controls">
                            @Html.TextBoxFor(model => model.EmployeeRequestReply.LoanDate, new { @class = "datepickerGregorian cursorHand toBeDisabled", @id = "LoanDateEn", onchange = "GregorianToHijri(this,'#LoanDateAr')", @readonly = true })
                            @Html.ValidationMessageFor(model => model.EmployeeRequestReply.LoanDate)
                        </div>
                    </div>
                </div>

                <div class="control-group row-fluid">
                    <div class="span3">
                        @Html.LabelFor(model => model.EmployeeRequestReply.InstallmentAmount, new { @class = "control-label" })
                    </div>
                    <div class="span2">
                        <div class="controls">
                            @Html.TextBoxFor(model => model.EmployeeRequestReply.InstallmentAmount, new { @class = "toBeDisabled" })
                            @Html.ValidationMessageFor(model => model.EmployeeRequestReply.InstallmentAmount)
                        </div>
                    </div>
                </div>

                <div class="control-group row-fluid">
                    <div class="span3">
                        @Html.LabelFor(model => model.EmployeeRequestReply.NumberOfMonths, new { @class = "control-label" })
                    </div>
                    <div class="span2">
                        <div class="controls">
                            @Html.TextBoxFor(model => model.EmployeeRequestReply.NumberOfMonths, new { @id = "NumberOfMonths", @class = "toBeDisabled" })
                            @Html.ValidationMessageFor(model => model.EmployeeRequestReply.NumberOfMonths)
                        </div>
                    </div>
                </div>

                <div class="control-group row-fluid">
                    <div class="span3">
                        @Html.LabelFor(model => model.EmployeeRequestReply.FirstInstallmentDate, new { @class = "control-label" })
                    </div>
                    <div class="span2">
                        <div class="controls">
                            @Html.TextBoxFor(model => model.EmployeeRequestReply.FirstInstallmentDate, new { @class = "datepickerGregorian cursorHand toBeDisabled", @readonly = "readonly", @id = "FirstInstallmentDate" })
                            @Html.ValidationMessageFor(model => model.EmployeeRequestReply.FirstInstallmentDate)
                        </div>
                    </div>
                </div>

                <div class="control-group row-fluid">
                    <div class="span3">
                        @Html.LabelFor(model => model.EmployeeRequestReply.LastInstallmentDate, new { @class = "control-label" })
                    </div>
                    <div class="span2">
                        <div class="controls">
                            @Html.TextBoxFor(model => model.EmployeeRequestReply.LastInstallmentDate, new { @class = "cursorHand toBeDisabled", @readonly = "readonly", @id = "LastInstallmentDate" })
                            @Html.ValidationMessageFor(model => model.EmployeeRequestReply.LastInstallmentDate)
                        </div>
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid replyBtn">
                <div class="span3 span-inset">
                    <button type="submit" class="btn toBeDisabled">Reply</button>
                </div>
            </div>
        </div>
        <!--End    --    Input Field of Request Reply-->
    </div>
}
<script src="~/RichTextEditor/ckeditor.js"></script>
<script>
    $(document).ready(function () {
        CKEDITOR.replace('RequestDesc');
        CKEDITOR.replace('RequestReply');
        DivHideShow('IsMonetary', 'monetaryRequestControls');
        DivHideShow('IsMonetary', 'monetaryRequestReplyControls');
        //Set date format, remove time from date
        $('#LastInstallmentDate').mask('99/99/9999');
        //Convert Gregorian to Hijri
        if ($("#LoanDateEn").val() != null && $("#LoanDateEn").val() != "") {
            $("#LoanDateAr").val(ConvertDates($("#LoanDateEn").val(), "gregorian", "islamic"));
        }
       
        //If request has been approved, either by employee, or by admin, disable all fields, and just show records
        if ('@Model.EmployeeRequestDetail.IsApproved'=='True') {
            $('.request .toBeDisabled:input').attr('disabled', true);
            $("#requestReplyControls").hide();
            $(".requestBtn").hide();
        }
            //If user is Admin, Disable Request and enable Reply Fields
        else if ($("#UserRole").val() == "Admin") {
                $('.request .toBeDisabled:input').attr('disabled', true);
                $("#requestReplyControls").show();
                $(".requestBtn").hide();
        }
        else {
                $("#requestReplyControls").hide();
                $(".requestBtn").show();
            }
        
        
    });
    $('#FirstInstallmentDate').change(function () {
        $('#LastInstallmentDate').val(moment($('#FirstInstallmentDate').val()).add($('#NumberOfMonths').val(), 'months').format('MM/DD/YYYY'));
    });
    $('#NumberOfMonths').change(function () {
        $('#LastInstallmentDate').val(moment($('#FirstInstallmentDate').val()).add($('#NumberOfMonths').val(), 'months').format('MM/DD/YYYY'));
    });
    $('#IsMonetary').change(function () {
        DivHideShow('IsMonetary', 'monetaryRequestControls');
    });
    function DivHideShow(chk, div) {
        var divToBeAffected = '#' + div;
        if ($('#' + chk).is(":checked")) {
            $(divToBeAffected).show();
        } else {
            $(divToBeAffected).hide();
        }
    }
    //function DiableFields() {
    //    var fieldsList = $('.toBeDisabled');
    //        for (var i = 0; i < fieldsList.length; i++) {
    //            var control = fieldsList[i];
    //            var fieldvalue = $(control).val();
    //            if (fieldvalue == null || fieldvalue == "" || fieldvalue == "Select State") {
    //                $(control).prop('placeholder', 'required');
    //                $(control).addClass("Error");

    //            } else {
    //                $(control).removeClass("Error");
    //            }
    //        }
    //}
</script>
