@model  EPMS.Web.ViewModels.Request.EmployeeRequestViewModel
@{
    ViewBag.Title = Model.EmployeeRequest.RequestId > 0 ? EPMS.Web.Resources.HR.Request.UpdatePageTitle : EPMS.Web.Resources.HR.Request.CreatePageTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";

    var direction = EPMS.Web.Resources.Shared.Common.TextDirection;
}
<!-- Navigation Bar -->
<div class="breadcrumb-container" dir="ltr">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/HR/Request/Index">
                @EPMS.Web.Resources.HR.Request.Label
            </a>
        </li>
        <li class="current">
            <a href="javascript:;">@ViewBag.Title</a>
        </li>
    </ul>
</div>
<!-- Page heading -->
<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@ViewBag.Title </small></h2>
</header>
<!--Notifications begin-->
@Html.Partial("_Alert")

<!-- Form starts.  -->
@using (Html.BeginForm("Create", "Request", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.EmployeeRequest.RequestId)
    @Html.HiddenFor(model => model.EmployeeRequest.RecCreatedBy)
    @Html.HiddenFor(model => model.EmployeeRequest.RecCreatedDt)
    @Html.HiddenFor(model => model.EmployeeRequestDetail.IsReplied)
    <input type="hidden" id="UserRole" value="@ViewBag.UserRole" />
    <div class="container-fluid request">
        <!--Input Field of Request begin-->
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.Request.EmployeeName</label>
            </div>
            <div class="span9">
                @if (direction == "ltr")
                {
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequest.Employee.EmployeeNameE, new {@readonly = "readonly"})
                    </div>
                }
                else
                {
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequest.Employee.EmployeeNameA, new { @readonly = "readonly" })
                    </div>
                }
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.Request.EmployeeId</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeRequest.Employee.EmployeeId, new { @readonly = "readonly" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.Request.DepartmentName</label>
            </div>
            <div class="span9">
                @if (direction == "ltr")
                {
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequest.Employee.JobTitle.Department.DepartmentNameE, new { @readonly = "readonly" })
                    </div>
                }
                else
                {
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequest.Employee.JobTitle.Department.DepartmentNameA, new { @readonly = "readonly" })
                    </div>
                }
            </div>

        </div>
        
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.Request.RequestDate</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeRequest.RequestDate, new { @class = "toBeDisabled" })
                    @Html.ValidationMessageFor(model => model.EmployeeRequest.RequestDate)
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.Request.RequestTopic</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.EmployeeRequest.RequestTopic, new { @class = "toBeDisabled" })
                    @Html.ValidationMessageFor(model => model.EmployeeRequest.RequestTopic)
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.Request.RequestDesc</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextAreaFor(model => model.EmployeeRequestDetail.RequestDesc, new { @class = "toBeDisabled", @id = "RequestDesc" })
                    @Html.ValidationMessageFor(model => model.EmployeeRequestDetail.RequestDesc)
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.Request.Monetary</label>
            </div>
            <div class="span9 span-inset">
                <div data-on-label="YES" data-off-label="NO" class="switch switch-small" data-on="success" data-off="danger">
                    @Html.CheckBoxFor(model => model.EmployeeRequest.IsMonetary, new { @id = "IsMonetary", @class = "toBeDisabled" })
                </div>
            </div>
        </div>
        <!--End    --    Input Field of Request-->
        <!--Input Field of RequestDetail begin-->
        <div id="monetaryRequestControls" style="display: none">
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">@EPMS.Web.Resources.HR.Request.LoanAmount</label>
                </div>
                <div class="span2">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequestDetail.LoanAmount, new { @class = "toBeDisabled" })
                        @Html.ValidationMessageFor(model => model.EmployeeRequestDetail.LoanAmount)
                    </div>
                </div>
            </div>

            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">@EPMS.Web.Resources.HR.Request.LoanDateHj</label>
                </div>
                <div class="span2">
                    <div class="controls">
                        @Html.TextBox("Loan Date", null, new { @class = "datepickerArabic cursorHand toBeDisabled", @id = "LoanDateAr", onchange = "HijriToGregorian(this,'#LoanDateEn')", @readonly = true })
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">@EPMS.Web.Resources.HR.Request.LoanDateGr</label>
                </div>
                <div class="span2">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequestDetail.LoanDate, new { @class = "datepickerGregorian cursorHand toBeDisabled", @id = "LoanDateEn", onchange = "GregorianToHijri(this,'#LoanDateAr')", @readonly = true })
                        @Html.ValidationMessageFor(model => model.EmployeeRequestDetail.LoanDate)
                    </div>
                </div>
            </div>

            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">@EPMS.Web.Resources.HR.Request.InstallmentAmount</label>
                </div>
                <div class="span2">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequestDetail.InstallmentAmount, new { @class = "toBeDisabled" })
                        @Html.ValidationMessageFor(model => model.EmployeeRequestDetail.InstallmentAmount)
                    </div>
                </div>
            </div>

            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">@EPMS.Web.Resources.HR.Request.NumberOfMonths</label>
                </div>
                <div class="span2">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequestDetail.NumberOfMonths, new { @id = "NumberOfMonths", @class = "toBeDisabled" })
                        @Html.ValidationMessageFor(model => model.EmployeeRequestDetail.NumberOfMonths)
                    </div>
                </div>
            </div>

            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">@EPMS.Web.Resources.HR.Request.FirstInstallmentDate</label>
                </div>
                <div class="span2">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequestDetail.FirstInstallmentDate, new { @class = "datepickerGregorian cursorHand toBeDisabled", @readonly = "readonly", @id = "FirstInstallmentDate" })
                        @Html.ValidationMessageFor(model => model.EmployeeRequestDetail.FirstInstallmentDate)
                    </div>
                </div>
            </div>

            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">@EPMS.Web.Resources.HR.Request.LastInstallmentDate</label>
                </div>
                <div class="span2">
                    <div class="controls">
                        @Html.TextBoxFor(model => model.EmployeeRequestDetail.LastInstallmentDate, new { @class = "cursorHand toBeDisabled", @readonly = "readonly", @id = "LastInstallmentDate" })
                        @Html.ValidationMessageFor(model => model.EmployeeRequestDetail.LastInstallmentDate)
                    </div>
                </div>
            </div>
        </div>
        <div class="control-group row-fluid requestBtn">
            <div class="span3 span-inset">
                <button type="submit" class="btn toBeDisabled">@ViewBag.Title</button>
            </div>
        </div>
        <!--End    --    Input Field of RequestDetail-->
    </div>
    
        <!--Input Field of Request Reply begin-->
    <div id="requestReplyControls" style="display: none">
        <header>
            <i class="icon-big-notepad"></i>
            <h2><small>Request Reply </small></h2>
        </header>

        <div class="container-fluid">
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label">@EPMS.Web.Resources.HR.Request.Approved</label>
                </div>
                <div class="span9 span-inset">
                    <div data-on-label="YES" data-off-label="NO" class="switch switch-small" data-on="success" data-off="danger">
                        @Html.CheckBoxFor(model => model.EmployeeRequestReply.IsApproved, new { @id = "RequestApproved"})
                    </div>
                </div>
            </div>
            <div id="requestDetailReplyControls">
                <div class="control-group row-fluid">
                    <div class="span3">
                        <label class="control-label">@EPMS.Web.Resources.HR.Request.ReplyDesc</label>
                    </div>
                    <div class="span9">
                        <div class="controls">
                            @Html.TextAreaFor(model => model.EmployeeRequestReply.RequestReply, new { @class = "toBeDisabled", @id = "RequestReply" })
                            @Html.ValidationMessageFor(model => model.EmployeeRequestReply.RequestReply)
                        </div>
                    </div>
                </div>
                <div id="monetaryRequestReplyControls" style="display: none">
                    <div class="control-group row-fluid">
                        <div class="span3">
                            <label class="control-label">@EPMS.Web.Resources.HR.Request.LoanAmount</label>
                        </div>
                        <div class="span2">
                            <div class="controls">
                                @Html.TextBoxFor(model => model.EmployeeRequestReply.LoanAmount, new { @class = "toBeDisabled" })
                                @Html.ValidationMessageFor(model => model.EmployeeRequestReply.LoanAmount)
                            </div>
                        </div>
                    </div>

                    <div class="control-group row-fluid">
                        <div class="span3">
                            <label class="control-label">@EPMS.Web.Resources.HR.Request.LoanDateHj</label>
                        </div>
                        <div class="span2">
                            <div class="controls">
                                @Html.TextBox("Loan Date", null, new { @class = "datepickerArabic cursorHand toBeDisabled", @id = "LoanDateArREPLY", onchange = "HijriToGregorian(this,'#LoanDateEnREPLY')", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="control-group row-fluid">
                        <div class="span3">
                            <label class="control-label">@EPMS.Web.Resources.HR.Request.LoanDateGr</label>
                        </div>
                        <div class="span2">
                            <div class="controls">
                                @Html.TextBoxFor(model => model.EmployeeRequestReply.LoanDate, new { @class = "datepickerGregorian cursorHand toBeDisabled", @id = "LoanDateEnREPLY", onchange = "GregorianToHijri(this,'#LoanDateArREPLY')", @readonly = true })
                                @Html.ValidationMessageFor(model => model.EmployeeRequestReply.LoanDate)
                            </div>
                        </div>
                    </div>

                    <div class="control-group row-fluid">
                        <div class="span3">
                            <label class="control-label">@EPMS.Web.Resources.HR.Request.InstallmentAmount</label>
                        </div>
                        <div class="span2">
                            <div class="controls">
                                @Html.TextBoxFor(model => model.EmployeeRequestReply.InstallmentAmount, new { @class = "toBeDisabled" })
                                @Html.ValidationMessageFor(model => model.EmployeeRequestReply.InstallmentAmount)
                            </div>
                        </div>
                    </div>

                    <div class="control-group row-fluid">
                        <div class="span3">
                            <label class="control-label">@EPMS.Web.Resources.HR.Request.NumberOfMonths</label>
                        </div>
                        <div class="span2">
                            <div class="controls">
                                @Html.TextBoxFor(model => model.EmployeeRequestReply.NumberOfMonths, new { @id = "NumberOfMonthsREPLY", @class = "toBeDisabled" })
                                @Html.ValidationMessageFor(model => model.EmployeeRequestReply.NumberOfMonths)
                            </div>
                        </div>
                    </div>

                    <div class="control-group row-fluid">
                        <div class="span3">
                            <label class="control-label">@EPMS.Web.Resources.HR.Request.FirstInstallmentDate</label>
                        </div>
                        <div class="span2">
                            <div class="controls">
                                @Html.TextBoxFor(model => model.EmployeeRequestReply.FirstInstallmentDate, new { @class = "datepickerGregorian cursorHand toBeDisabled", @readonly = "readonly", @id = "FirstInstallmentDateREPLY" })
                                @Html.ValidationMessageFor(model => model.EmployeeRequestReply.FirstInstallmentDate)
                            </div>
                        </div>
                    </div>

                    <div class="control-group row-fluid">
                        <div class="span3">
                            <label class="control-label">@EPMS.Web.Resources.HR.Request.LastInstallmentDate</label>
                        </div>
                        <div class="span2">
                            <div class="controls">
                                @Html.TextBoxFor(model => model.EmployeeRequestReply.LastInstallmentDate, new { @class = "cursorHand toBeDisabled", @readonly = "readonly", @id = "LastInstallmentDateREPLY" })
                                @Html.ValidationMessageFor(model => model.EmployeeRequestReply.LastInstallmentDate)
                            </div>
                        </div>
                    </div>
                </div>
            </div>            
            <div class="control-group row-fluid replyBtn">
                <div class="span3 span-inset">
                    <button type="submit" class="btn toBeDisabled">@EPMS.Web.Resources.HR.Request.ReplyBtn</button>
                </div>
            </div>
        </div>
        <!--End    --    Input Field of Request Reply-->
    </div>
}
<script src="~/RichTextEditor/ckeditor.js"></script>
<script>
    $(document).ready(function () {
        CKEDITOR.replace('RequestDesc');
        CKEDITOR.replace('RequestReply');
        DivHideShow('IsMonetary', 'monetaryRequestControls');
        DivHideShow('IsMonetary', 'monetaryRequestReplyControls');
       
        //If request has been approved, either by employee, or by admin, disable all fields, and just show records
        if ('@Model.EmployeeRequestDetail.IsApproved'=='True') {
            $('.request .toBeDisabled:input').attr('readonly', true);
            $("#requestReplyControls").hide();
            $(".requestBtn").hide();
        }
            //If user is Admin, Disable Request and enable Reply Fields
        else if ($("#UserRole").val() == "Admin") {
            $('.request .toBeDisabled:input').attr('readonly', true);
                $("#requestReplyControls").show();
                $(".requestBtn").hide();
        }
        else {
                $("#requestReplyControls").hide();
                $(".requestBtn").show();
        }

        //Set date format, remove time from date
        $('#LastInstallmentDate').mask('99/99/9999');
        //Convert Gregorian to Hijri
        if ($("#LoanDateEn").val() != null && $("#LoanDateEn").val() != "") {
            $("#LoanDateAr").val(ConvertDates($("#LoanDateEn").val(), "gregorian", "islamic"));
        }

        // REPLY DATES   Set date format, remove time from date
        $('#LastInstallmentDateREPLY').mask('99/99/9999');
        //Convert Gregorian to Hijri
        if ($("#LoanDateEnREPLY").val() != null && $("#LoanDateEnREPLY").val() != "") {
            $("#LoanDateArREPLY").val(ConvertDates($("#LoanDateEnREPLY").val(), "gregorian", "islamic"));
        }
    });
    $('#FirstInstallmentDate').change(function () {
        $('#LastInstallmentDate').val(moment($('#FirstInstallmentDate').val(), "MM/DD/YYYY").add($('#NumberOfMonths').val(), 'months').format('MM/DD/YYYY'));
    });
    $('#NumberOfMonths').change(function () {
        $('#LastInstallmentDate').val(moment($('#FirstInstallmentDate').val(), "MM/DD/YYYY").add($('#NumberOfMonths').val(), 'months').format('MM/DD/YYYY'));
    });
    // REPLY DATES   
    $('#FirstInstallmentDateREPLY').change(function () {
        $('#LastInstallmentDateREPLY').val(moment($('#FirstInstallmentDateREPLY').val(), "MM/DD/YYYY").add($('#NumberOfMonthsREPLY').val(), 'months').format('MM/DD/YYYY'));
    });
    $('#NumberOfMonthsREPLY').change(function () {
        $('#LastInstallmentDateREPLY').val(moment($('#FirstInstallmentDateREPLY').val(), "MM/DD/YYYY").add($('#NumberOfMonthsREPLY').val(), 'months').format('MM/DD/YYYY'));
    });
    $('#IsMonetary').change(function () {
        DivHideShow('IsMonetary', 'monetaryRequestControls');
    });
    $('#RequestApproved').change(function () {
        if ($('#RequestApproved').is(":checked")) {
            $("#monetaryRequestReplyControls").hide();
        } else {
            DivHideShow('IsMonetary', 'monetaryRequestReplyControls');
        }
    });
    function DivHideShow(chk, div) {
        var divToBeAffected = '#' + div;
        if ($('#' + chk).is(":checked")) {
            $(divToBeAffected).show();
        } else {
            $(divToBeAffected).hide();
        }
    }
</script>
