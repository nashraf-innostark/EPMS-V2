@using System.Configuration
@model EPMS.WebModels.ViewModels.JobTitle.JobTitleViewModel

@{
    ViewBag.Title = Model.JobTitle.JobTitleId > 0 ? EPMS.WebModels.Resources.HR.JobTitle.UpdatePageTitle : EPMS.WebModels.Resources.HR.JobTitle.CreatePageTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.MessageVM = TempData["message"];
    var direction = EPMS.WebModels.Resources.Shared.Common.TextDirection;
}
<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/HR/Jobtitle/Index">
                @EPMS.WebModels.Resources.HR.JobTitle.Label
            </a>
        </li>
        <li class="current">
            <a href="">
                @ViewBag.Title
            </a>
        </li>
    </ul>
</div>

<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@ViewBag.Title</small></h2>
</header>

<!--Notifications begin-->
@Html.Partial("_Alert")
<!--Notifications end-->
@using (Html.BeginForm("Create", "JobTitle", FormMethod.Post, new { @id = "JobTitleForm", @class = "form-horizontal", role = "form" }))
{
    <div class="container-fluid">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.JobTitle.JobTitleId)
        @Html.HiddenFor(m => m.JobTitle.RecCreatedBy)
        @Html.HiddenFor(m => m.JobTitle.RecCreatedDt)
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="JobTitleName">@EPMS.WebModels.Resources.HR.JobTitle.NameOnCreateE</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.JobTitle.JobTitleNameE, new { @dir = "ltr", id = "JobTitleNameE", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.JobTitle.JobTitleNameE, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="JobTitleName">@EPMS.WebModels.Resources.HR.JobTitle.NameOnCreateA</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.JobTitle.JobTitleNameA, new { id = "JobTitleNameA", @class = "tbdisable toBeRequired", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.JobTitle.JobTitleNameA, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid jobTitleDDL">
            <div class="span3">
                <label class="control-label" for="departmentId">@EPMS.WebModels.Resources.HR.JobTitle.DepartmentOnCreate</label>
            </div>
            <div class="span2">
                @if (direction == "ltr")
                {
                    <div class="controls">
                        @Html.DropDownListFor(x => x.JobTitle.DepartmentId, new SelectList(Model.DepartmentList, "DepartmentId", "DepartmentNameE"), EPMS.WebModels.Resources.HR.JobTitle.SelectDepartment, new { @class = "select2me", id = "departmentId" })
                    </div>
                }
                else
                {
                    <div class="controls">
                        @Html.DropDownListFor(x => x.JobTitle.DepartmentId, new SelectList(Model.DepartmentList, "DepartmentId", "DepartmentNameA"), EPMS.WebModels.Resources.HR.JobTitle.SelectDepartment, new { @class = "select2me", id = "departmentId" })
                    </div>
                }
            </div>
            <div class="span4">
                <label id="departmentvalidate" style="margin-top: 20px; margin-left: 20px"></label>
            </div>
        </div>
        <div id="Descp">
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="JobTitleDesc">@EPMS.WebModels.Resources.HR.JobTitle.DescriptionOnCreateE</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        <input type="text" id="descpEn" readonly="readonly" />
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="JobTitleDesc">@EPMS.WebModels.Resources.HR.JobTitle.DescriptionOnCreateA</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        <input type="text" id="descpAr" readonly="readonly" />
                    </div>
                </div>
            </div>
        </div>
        <div id="CKEditorDescp">
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="JobTitleDesc">@EPMS.WebModels.Resources.HR.JobTitle.DescriptionOnCreateE</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextAreaFor(m => m.JobTitle.JobTitleDescE, new { @dir = "ltr", id = "JobTitleDescE", @class = "tbdisable", @ViewBag.Disabled })
                        @Html.ValidationMessageFor(m => m.JobTitle.JobTitleDescE, "", new { @class = "required" })
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="JobTitleDesc">@EPMS.WebModels.Resources.HR.JobTitle.DescriptionOnCreateA</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextAreaFor(m => m.JobTitle.JobTitleDescA, new { id = "JobTitleDescA", @class = "tbdisable", @ViewBag.Disabled })
                        @Html.ValidationMessageFor(m => m.JobTitle.JobTitleDescA, "", new { @class = "required" })
                    </div>
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="BasicSalary">@EPMS.WebModels.Resources.HR.JobTitle.BasicSalaryOnCreate</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.JobTitle.BasicSalary, new { id = "BasicSalary", @class = "tbdisable", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(m => m.JobTitle.BasicSalary, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <div class="span3 span-inset">
                    <button id="edit" class="btn">@EPMS.WebModels.Resources.HR.JobTitle.EditButton</button>
                    <button id="savebtn" class="btn" type="submit" onclick="validateJobTitle(event)">@EPMS.WebModels.Resources.HR.JobTitle.SaveButton</button>
                </div>
                <div class="span3 span-inset">
                    <button id="cancel" class="btn" onclick="window.location.href = '@(ConfigurationManager.AppSettings["SiteURL"])/HR/JobTitle/Index'" type="reset">@EPMS.WebModels.Resources.HR.JobTitle.CancelButton</button>
                </div>
            </div>
        </div>

    </div>
}
<script src="~/RTB/ckfinder.js"></script>
<script src="~/RTE/ckeditor.js"></script>
<script>
    var editor;
    $(document).ready(function () {
        var siteUrl = $("#siteURL").val();
        $("#JobTitleForm").validate({
            errorElement: "span",
            errorClass: "error",
            onclick: true,
            rules: {
                "req": {
                    required: true
                },
                "numbers": {
                    required: false,
                    digits: true
                },
                "email": {
                    email: true
                },
                "url": {
                    url: true
                },
                "date": {
                    date: true
                }
            }
        });

        var id = $('#JobTitle_JobTitleId').val();
        if (id == 0) {
            $("#Descp").hide();
            $("#CKEditorDescp").show();
        } else {
            var descpE = '@Html.Raw(Model.JobTitle.JobTitleDescE)';
            var regex = /(<([^>]+)>)/ig;
            var result = descpE.replace(regex, "");
            $("#descpEn").val(result);
            var descpA = '@Html.Raw(Model.JobTitle.JobTitleDescA)';
            regex = /(<([^>]+)>)/ig;
            result = descpA.replace(regex, "");
            $("#descpAr").val(result);
            $("#Descp").show();
            $("#CKEditorDescp").hide();
        }
        $("[readonly='false']").removeAttr("readonly");
        if (id == 0) {
            editor = CKEDITOR.replace('JobTitleDescE', {
                filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
                filebrowserUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Files&currentFolder=/archive/',
                filebrowserImageUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Images&currentFolder=/cars/',
                filebrowserFlashUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Flash',
            });
            editor = CKEDITOR.replace('JobTitleDescA', {
                filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
                filebrowserUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Files&currentFolder=/archive/',
                filebrowserImageUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Images&currentFolder=/cars/',
                filebrowserFlashUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Flash',
            });
            $('#departmentId').select2('enable');
            $('.' + 'tbdisable' + ':input').attr('disabled', false);
            $("#savebtn").show();
            $("#cancel").show();
            $("#edit").hide();
        } else {
            $('#departmentId').select2('disable');
            $('.' + 'tbdisable' + ':input').attr('disabled', true);
            $("#savebtn").hide();
            $("#cancel").hide();
            $("#edit").show();
        }

    });

    $("#edit").click(function (event) {
        editor = CKEDITOR.replace('JobTitleDescE', {
            filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
            filebrowserUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Files&currentFolder=/archive/',
            filebrowserImageUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Images&currentFolder=/cars/',
            filebrowserFlashUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Flash',
        });
        editor = CKEDITOR.replace('JobTitleDescA', {
            filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
            filebrowserUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Files&currentFolder=/archive/',
            filebrowserImageUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Images&currentFolder=/cars/',
            filebrowserFlashUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Flash',
        });
        $('#departmentId').select2('enable');
        $('.' + 'tbdisable' + ':input').attr('disabled', false);
        $("#savebtn").show();
        $("#cancel").show();
        $("#edit").hide();
        $("#Descp").hide();
        $("#CKEditorDescp").show();
        event.preventDefault();
    });

    function validateJobTitle(event) {
        var counter = 0;
        if ($("#departmentId").val() == null || $("#departmentId").val() == "") {
            $("#departmentvalidate").text("Please Select Department");
            $("#departmentvalidate").addClass("required");
            counter++;

        } else {
            $("#departmentvalidate").text("");
            $("#departmentvalidate").removeClass("required");
        }
        if (counter > 0) {
            $('html,body').animate({
                scrollTop: $(".jobTitleDDL").offset().top
            }, 'slow');
            event.preventDefault();
            return false;
        }
        return true;
    };
    //function updateValue(id, value) {
    //    var dialog = CKEDITOR.dialog.getCurrent();
    //    dialog.setValueOf('info', 'txtUrl', value);
    //}
</script>