@model EPMS.Web.ViewModels.JobApplicant.JobApplicantViewModel

@{
    //ViewBag.Title = Model.JobOffered.JobTitleId > 0 ? EPMS.Web.Resources.HR.JobTitle.UpdatePageTitle : EPMS.Web.Resources.HR.JobTitle.CreatePageTitle;
    ViewBag.Title = "Job Opening";
    Layout = "~/Views/Shared/_ApplicantLayout.cshtml";
    ViewBag.MessageVM = TempData["message"];
    var direction = EPMS.Web.Resources.Shared.Common.TextDirection;
}

<div class="container-fluid dashboard dashboard-title">
    <div class="row-fluid">
        <div class="span12">
            <h1>
                @(direction == "ltr" ? Model.JobOffered.JobTitleNameE : Model.JobOffered.JobTitleNameA)
            </h1>
        </div>
    </div>
</div>

@using (Html.BeginForm("Apply", "JobApplicant", FormMethod.Post, new { @class = "form-horizontal", role = "form"}))
{
    <div class="container-fluid">
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
        @Html.TextBoxFor(model => model.JobOffered.JobOfferedId, new { style = "display: none;", @id = "departmentName", })
        
        @Html.HiddenFor(model => model.JobApplicant.ApplicantCvPath, new { @id = "CvPath" })
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.JobApplicant.ApplicantName</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.JobApplicant.ApplicantName, new { @id = "applicantName", @class="toBeRequired" })
                    @Html.ValidationMessageFor(model => model.JobApplicant.ApplicantName, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.JobApplicant.Department</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @if (direction == "ltr")
                    {
                        @Html.TextBoxFor(model => model.JobOffered.DepartmentNameE, new {@disabled = true, @id = "departmentNameE"})
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.JobOffered.DepartmentNameA, new {@disabled = true, @id = "departmentNameA"})
                    }
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.JobApplicant.JobDescription</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @if (direction == "ltr")
                    {
                        @Html.TextBoxFor(model => model.JobOffered.JobTitleDescE, new {@disabled = true, @id = "jobTitleDescE"})
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.JobOffered.JobTitleDescA, new { @disabled = true, @id = "jobTitleDescA" })
                    }
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.JobApplicant.Age</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.JobApplicant.ApplicantAge, new { @id = "applicantAge" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.JobApplicant.MobileNumber</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.JobApplicant.ApplicantMobile, new { @id = "applicantMobile", @class="toBeRequired" })
                    @Html.ValidationMessageFor(model => model.JobApplicant.ApplicantMobile, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.JobApplicant.Email</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.JobApplicant.ApplicantEmail, new { @id = "applicantEmail", @class="toBeRequired" })
                    @Html.ValidationMessageFor(model => model.JobApplicant.ApplicantEmail, "", new { @class = "required" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.JobApplicant.MaritalStatus</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @Html.DropDownListFor(model => model.JobApplicant.MaritalStatus,
                        new List<SelectListItem> {
                            new SelectListItem { Value = "0" , Text = "Single" },
                            new SelectListItem { Value = "1" , Text = "Married" },
                        }, new { @id = "applicantMaritalStatus" })
                </div>
            </div>

        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.JobApplicant.Nationality</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @Html.DropDownListFor(model => model.JobApplicant.Nationality,
                        new List<SelectListItem> {
                            new SelectListItem { Value = "0" , Text = "Saudi Arabia" },
                            new SelectListItem { Value = "1" , Text = "Pakistan" },
                            new SelectListItem { Value = "2" , Text = "UAE" },
                            new SelectListItem { Value = "3" , Text = "USA" },
                            new SelectListItem { Value = "4" , Text = "UK" },
                        },
                        new { @id = "applicantNationality" })
                </div>
            </div>

        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.JobApplicant.IqamaNo</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.JobApplicant.IqamaOrNationalIdNo, new { @id = "applicantIqama" })
                </div>
            </div>

        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.Web.Resources.HR.JobApplicant.DrivingLicense</label>
            </div>
            <div class="span1 span-inset">
                <div data-on-label="YES" data-off-label="NO" class="switch switch-small" data-on="success" data-off="danger" style="height:24px !important">
                    @Html.CheckBoxFor(model => model.JobApplicant.DrivingLicense, new { @id = "DrivingLicense" })
                </div>
            </div>
        </div>
        <!--Drag And Drop Upload begin-->
        <div id="Drag_And_Drop_Upload" class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="inputField">
                    Photo<a href="javascript:;" class="bootstrap-tooltip" data-placement="top" data-original-title="file size shouldn't exceed 1MB"><i class="icon-photon info-circle"></i></a>
                </label>
            </div>
            <div class="span9 row-fluid">
                <div class="upload-boxes row-fluid">
                    <div class="span3" id="upload"></div>
                    <div class="span9" id="uploaded"></div>
                </div>
            </div>
        </div>
        <!--Drag And Drop Upload end-->
        <div class="control-group row-fluid">
            <div class="span3">
                <div class="span3 span-inset">
                    <button class="btn" type="submit" onclick="validateForm()">Apply</button>
                </div>
            </div>
        </div>

    </div>
}

<script>
    $().ready(function () {
        var url = "/HR/JobApplicant/UploadCv";
        var errors = "";
        $('#upload').mfupload({
               type: 'pdf,doc,docx,txt', // type: '', for all types
                maxsize: 1, //file size in MBs
                post_upload: url,
                folder: "./",
                ini_text: "Drag your file here or click (max: 1MB)",
                over_text: "Drop Here",
                over_col: '#666666',
                over_bkcol: '#f0f0f0',

                init: function() {
                    $("#uploaded").empty();
                },

                start: function(result) {
                    $("#uploaded").append("<div id='FILE" + result.fileno + "' class='files'>" + result.filename + "<div class='progress progress-info progress-thin'><div class='bar' id='PRO" + result.fileno + "'></div></div></div>");
                },

                loaded: function(result) {
                    $("#PRO" + result.fileno).remove();
                    $("#FILE" + result.fileno).html("Uploaded: " + result.filename + " (" + result.size + ")");
                    $('#CvPath').val(result.filename);
                },

                progress: function(result) {
                    $("#PRO" + result.fileno).css("width", result.perc + "%");
                },

                error: function(error) {
                    errors += error.filename + ": " + error.err_des + "\n";
                },

                completed: function() {
                    if (errors != "") {
                        alert(errors);
                        errors = "";
                    }
                }
            });
    });
    function validateForm() {
        var listSimple = $('.toBeRequired');
        var counter = 0;
        for (var i = 0; i < (listSimple.length) ; i++) {
            var control = listSimple[i];
            var fieldvalue = $(control).val();
            if (fieldvalue == null || fieldvalue == "") {
                $(control).prop('placeholder', 'Required');
                counter++;
                $(control).addClass("Error");

            } else {
                $(control).removeClass("Error");
            }

        }
        
        if (counter > 0) {
            //implementing focus back to error
            if ($(".Error").length > 0) {
                var divId = $(".Error")[0].id;
                if ($("#" + divId).length > 0)
                    $("#" + divId).focus();
                event.preventDefault();
                return false;
            }
        }
        if ($(".files").length == 0) {
            $("#uploaded").text("Attach your CV.");
            event.preventDefault();
            return false;
        }
        return true;
    };

</script>
