@model EPMS.Web.ViewModels.Payroll.PayrollViewModel

@{
    ViewBag.Title = Model.Employee.EmployeeNameE + " Payroll";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Navigation Bar -->
<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="dashboard-En.html">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/HR/Payroll/Index">
                Payroll List
            </a>
        </li>
        <li>
            @ViewBag.Title
        </li>
    </ul>
</div>
<!-- Page heading -->
<header>
    <i class="icon-big-notepad"></i>
    <h2><small>Payroll</small></h2>
    <h3><small>@Model.Employee.EmployeeNameE</small></h3>
</header>
<!-- Page heading ends -->
@using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-horizontal", @id = "PayrollForm", role = "form", enctype = "multipart/form-data" }))
{
    <div class="container-fluid">
        
        @Html.HiddenFor(model => model.Id)
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Date">Date</label>
            </div>
            <div class="span3">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Date, new { @id = "Date", @class="datepicker" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Employeeid">Employee ID</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Employee.EmployeeId, new { @id = "EmployeeId", @disabled = "disabled" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="JobTitle">Job Title</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Employee.JobTitle.JobTitleNameE, new { @id = "JobTitle", @disabled = "disabled" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="BasicSalary">Basic Salary</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Employee.JobTitle.BasicSalary, new { @id = "BasicSalary", @disabled = "disabled", @class = "empty" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allowance1">Allowance1</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Allowances.Allowance1, new { @id = "Allowance1", @disabled = "disabled", @class = "empty" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allowance2">Allowance2</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Allowances.Allowance2, new { @id = "Allowance2", @disabled = "disabled", @class = "empty" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allowance3">Allowance3</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Allowances.Allowance3, new { @id = "Allowance3", @disabled = "disabled", @class = "empty" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allowance4">Allowance4</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Allowances.Allowance4, new { @id = "Allowance4", @disabled = "disabled", @class = "empty" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allowance5">Allowance5</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Allowances.Allowance5, new { @id = "Allowance5", @disabled = "disabled", @class = "empty" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Deduction1">Deduction1</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Deduction1, new { @id = "Deduction1", @disabled = "disabled", @class = "empty" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Deduction2">Deduction2</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Deduction2, new { @id = "Deduction2", @disabled = "disabled", @class = "empty" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Total">Total</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Total, new { @id = "Total", @disabled = "disabled", @class="empty" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3 span-inset">
                <button type="button" class="btn">Print</button>
            </div>
        </div>
    </div>
}
<script src="~/Scripts/plugins/jquery.blockUI.js"></script>
<script>
    $(document).ready(function() {
        $(".datepicker").mask('99/99/9999');
        $(".datepicker").datepicker({
            changeMonth: true,
            changeYear: true,
            showButtonPanel: true,
            onSelect: function (date) {
                $.blockUI({ message: '<img src="/Images/Gallery/ajax_loader.gif" style="width:100px; height:100px"/>' });
                getPayrollDetails(date);
            },
        });
    });

    function getPayrollDetails(date) {
        var callUrl = "/Payroll/Detail?id=" + $("#EmployeeId").val() + "&date=" + date;
        $.ajax({
            type: "POST",
            datatype: "json",
            url: '@Url.Action("Detail", "Payroll")',
            data: $('#PayrollForm').serialize(),
            success: function (data) {
                // Set values
                setControlsValues(data);
            },
            error: callError
        });
    }
    function setControlsValues(data) {
        $("#EmployeeId").val(data["Employee"].EmployeeId);
        $("#JobTitle").val(data["Employee"].JobTitle.JobTitleNameE);
        $("#BasicSalary").val(data["Employee"].JobTitle.BasicSalary);
        $("#Allowance1").val(data["Allowances"].Allowance1);
        $("#Allowance2").val(data["Allowances"].Allowance2);
        $("#Allowance3").val(data["Allowances"].Allowance3);
        $("#Allowance4").val(data["Allowances"].Allowance4);
        $("#Allowance5").val(data["Allowances"].Allowance5);
        $("#Deduction1").val(data["Deduction1"]);
        $("#Deduction1").val(data["Deduction1"]);
        $("#Total").val(data["Total"]);
        $.unblockUI();
    }
    function callError(e, a) {
        alert("No Data Available");
        $('.empty').val(0);
    }
</script>