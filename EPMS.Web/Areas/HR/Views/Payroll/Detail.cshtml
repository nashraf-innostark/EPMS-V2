@model EPMS.Web.ViewModels.Payroll.PayrollViewModel

@{
    ViewBag.Title = Model.Employee.EmployeeNameE + " Payroll";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Navigation Bar -->
<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="dashboard-En.html">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/HR/Payroll/Index">
                Payroll List
            </a>
        </li>
        <li>
            @ViewBag.Title
        </li>
    </ul>
</div>
<!-- Page heading -->
<header>
    <i class="icon-big-notepad"></i>
    <h2><small>Payroll</small></h2>
    <h3><small>@Model.Employee.EmployeeNameE</small></h3>
</header>
<!-- Page heading ends -->
@using (Html.BeginForm("", "Payroll", FormMethod.Post, new { @class = "form-horizontal", @id = "AddEditEmployeeForm", role = "form", enctype = "multipart/form-data" }))
{
    <div class="container-fluid">
        @Html.AntiForgeryToken()

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Date">Date</label>
            </div>
            <div class="span9">
                <div class="controls">
                    <input id="Date" type="text" name="inputField" class="datepicker">
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Employeeid">Employee ID</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Employee.EmployeeId, new { @id = "Employeeid", @disabled = "disabled" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="JobTitle">Job Title</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Employee.JobTitle.JobTitleNameE, new { @id = "JobTitle", @disabled = "disabled" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="BasicSalary">Basic Salary</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Employee.JobTitle.BasicSalary, new { @id = "BasicSalary", @disabled = "disabled" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allowance1">Allowance1</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Allowances.Allowance1, new { @id = "Allowance1", @disabled = "disabled" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allowance2">Allowance2</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Allowances.Allowance2, new { @id = "Allowance2", @disabled = "disabled" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allowance3">Allowance3</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Allowances.Allowance3, new { @id = "Allowance3", @disabled = "disabled" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allowance4">Allowance4</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Allowances.Allowance4, new { @id = "Allowance4", @disabled = "disabled" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Allowance5">Allowance5</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Allowances.Allowance5, new { @id = "Allowance5", @disabled = "disabled" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Deduction1">Deduction1</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Deduction1, new { @id = "Deduction1", @disabled = "disabled" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Deduction2">Deduction2</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Deduction2, new { @id = "Deduction2", @disabled = "disabled" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Total">Total</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Total, new { @id = "Total", @disabled = "disabled" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3 span-inset">
                <button type="button" class="btn">Print</button>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        $(".datepicker").mask('99/99/9999');
        $(".datepicker").datepicker({
            changeMonth: true,
            changeYear: true
        });
        @*var allowList = '@Html.Raw(Json.Encode(Model.Employee.Allowances))';
        var allows = JSON.parse(allowList);
        $.each(allows, function (key, value) {
            if (value.Allowance1 != null) {
                $("#Allowance1").val(value.Allowance1);
            } else {
                $("#Allowance1").val(0);
            }
            if (value.Allowance2 != null) {
                $("#Allowance2").val(value.Allowance2);
            } else {
                $("#Allowance2").val(0);
            }
            if (value.Allowance2 != null) {
                $("#Allowance3").val(value.Allowance3);
            } else {
                $("#Allowance3").val(0);
            }
            if (value.Allowance4 != null) {
                $("#Allowance4").val(value.Allowance4);
            } else {
                $("#Allowance4").val(0);
            }
            if (value.Allowance5 != null) {
                $("#Allowance5").val(value.Allowance5);
            } else {
                $("#Allowance5").val(0);
            }
        });
        
        var deductionList = '@Html.Raw(Json.Encode(Model.Deduction))';
        var deducts = JSON.parse(deductionList);
        debugger
        if (deducts) {
            var deduc1 = deducts[0].InstallmentAmount.toFixed(2);
            var deduc2 = deducts[1].InstallmentAmount.toFixed(2);
            if (deduc1 > 0) {
                $("#Deduction1").val(deduc1);
            }
            if (deduc2 > 0) {
                $("#Deduction2").val(deduc2);
            }
        } else {
            $("#Deduction1").val(0);
            $("#Deduction2").val(0);
        }

        // Total Salary
        var totalSalary = (parseFloat($("#BasicSalary").val()) + parseFloat($("#Allowance1").val()) + parseFloat($("#Allowance2").val()) + parseFloat($("#Allowance3").val()) + parseFloat($("#Allowance4").val()) + parseFloat($("#Allowance5").val())) - (parseFloat($("#Deduction1").val()) + parseFloat($("#Deduction2").val()));
        $("#Total").val(totalSalary.toFixed(2));*@
    });
</script>