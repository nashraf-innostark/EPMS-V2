@model EPMS.WebModels.ViewModels.Product.ProductListViewModel

@{
    ViewBag.Title = EPMS.WebModels.Resources.Website.Product.ProductIndex.PageTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.MessageVM = TempData["message"];
    var direction = EPMS.WebModels.Resources.Shared.Common.TextDirection;
    var serial = 0;
}

<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="">
                @ViewBag.Title
            </a>
        </li>
    </ul>
</div>

<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@ViewBag.Title</small></h2>
</header>

<!--Notifications begin-->
@Html.Partial("_Alert")
<!--Notifications end-->

<form class="form-horizontal" id="validation_form">
    <div class="container-fluid">
        <div class="alert alert-info alert-block">
            <i class="icon-alert icon-alert-info"></i>
            <strong>@ViewBag.Title</strong>
            <a href="~/Website/Product/Create">@EPMS.WebModels.Resources.Website.Product.ProductIndex.AddNew</a>
            <br />
            <a href="#" id="TreeSelector">@EPMS.WebModels.Resources.Website.Product.ProductIndex.ImportFromInventory</a>
        </div>

        <div class="row-fluid">
            <div class="span12">
                <table id="Product" class="table table-striped table-responsive">
                    <thead>
                        <tr>
                            <th>@EPMS.WebModels.Resources.Website.Product.ProductIndex.Serial</th>
                            <th>@EPMS.WebModels.Resources.Website.Product.ProductIndex.Name</th>
                            <th>@EPMS.WebModels.Resources.Website.Product.ProductIndex.Price</th>
                            <th>@EPMS.WebModels.Resources.Website.Product.ProductIndex.DiscountedPrice</th>
                            <th>@EPMS.WebModels.Resources.Website.Product.ProductIndex.Description</th>
                            <th>@EPMS.WebModels.Resources.Website.Product.ProductIndex.Specification</th>
                            <th>@EPMS.WebModels.Resources.Website.Product.ProductIndex.Delete</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Products.ToList())
                        {
                            serial = serial + 1;
                            <tr>
                                <td>@serial</td>
                                <td>
                                    <a href="~/Website/Product/Create/@item.ProductId">
                                        @(direction == "ltr" ? item.ProductNameEn : item.ProductNameAr)
                                    </a>
                                </td>
                                <td>@item.ProductPrice</td>
                                <td>@item.DiscountedPrice</td>
                                <td class="descp_@item.ProductId"></td>
                                <script>
                                    var descp;
                                    if ('@direction' == 'ltr') {
                                        descp = '@Html.Raw(item.ProductDescEn)';
                                    } else {
                                        descp = '@Html.Raw(item.ProductDescAr)';
                                    }
                                    regex = /(<([^>]+)>)/ig;
                                    result = descp.replace(regex, "");
                                    $(".descp_@item.ProductId").text(result);
                                </script>
                                <td class="specify_@item.ProductId">@(direction == "ltr" ? item.ProductSpecificationEn : item.ProductSpecificationAr)</td>
                                <script>
                                    var descp;
                                    if ('@direction' == 'ltr') {
                                        descp = '@Html.Raw(item.ProductSpecificationEn)';
                                    } else {
                                        descp = '@Html.Raw(item.ProductSpecificationAr)';
                                    }
                                    regex = /(<([^>]+)>)/ig;
                                    result = descp.replace(regex, "");
                                    $(".specify_@item.ProductId").text(result);
                                </script>

                                <td class="delete"><a href="#" id="delete" onclick="deleteRow(@item.ProductId, this)">Delete</a></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</form>

@section popups
{
    @Html.Partial("_InventoryDepartmentItems")
}

<script src="~/Scripts/plugins/jquery.blockUI.js"></script>
<link href="~/Content/CSS/jsTreeCheckbox/style.css" rel="stylesheet" />
<script>
    var siteUrl;
    var selectedChildNodes;
    var selectedParentNodes;
    var url;
    var divId = "jstree";
    var dir;
    $(function () {
        siteUrl = $('#siteURL').val();
        dir = '@direction';
        $.blockUI({
            message: '<img src="' + siteUrl + '/Images/Gallery/ajax_loader.gif" style="width:75px; height:75"/>',
            css: { backgroundColor: '#FFFAFA', left: "47%", width: "6%" }
        });
        url = siteUrl + "/Website/Product/GetTreeData/";
        populateTreeJson(url, divId, dir);
        $('#Product').dataTable({
            "sPaginationType": "bootstrap",
            "aoColumns": [
                null,
                null,
                null,
                null,
                null,
                null,
                null
            ],
            "fnInitComplete": function () {
                $(".dataTables_wrapper select").select2({
                    dropdownCssClass: 'noSearch'
                });
            },
        });
        $("#simpleSelectBox").select2({
            dropdownCssClass: 'noSearch'
        });


        $("#TreeSelector").click(function (event) {
            $('#itemTreeSelector').modal('show');
            event.preventDefault();
            $.fn.modal.Constructor.prototype.enforceFocus = function () { };
            
        });
        $("#import").click(function (event) {
            selectedChildNodes = new Array();
            selectedParentNodes = new Array();
            $.blockUI({
                message: '<img src="' + siteUrl + '/Images/Gallery/ajax_loader.gif" style="width:75px; height:75"/>',
                css: { backgroundColor: '#FFFAFA', left: "47%", width: "6%" }
            });
            var selectedNodes = $("#jstree").jstree("get_checked", true, true);
            $.each(selectedNodes, function (key, value) {
                if (value.children.length == 0) {
                    selectedChildNodes.push(value.id);
                    if (value.parents.length > 1) {
                        var isContains = $.inArray(value.parents[0], selectedParentNodes) > -1;
                        if (isContains == false && value.parents[1] == "#") {
                            selectedParentNodes.push(value.parents[0]);
                        }
                    }
                }
            });
            if (selectedChildNodes.length > 0 || selectedParentNodes.length > 0) {
                var url = siteUrl + "/Website/Product/ImportProducts";
                saveImportedProducts(url);
            }
            $.unblockUI();
        });
    });

    function deleteRow(productId, elem) {
        if (confirm('@EPMS.WebModels.Resources.Website.Common.Common.DeleteConfirmation') == false) {
            return;
        }

        var serviceUrl = '/Website/Product/DeleteIt';
        $.ajax({
            url: serviceUrl,
            type: "POST",
            dataType: "json",
            data: {
                productId: productId
            },
            success: function (data) {
                if (data.response == "OK") {
                    var row = $(elem).parent().parent().get(0);
                    var atable = $('#Product').dataTable();
                    var pos = atable.fnGetPosition(row);
                    atable.fnDeleteRow(pos);
                    $.pnotify({
                        title: 'Success',
                        type: 'info',
                        text: '@EPMS.WebModels.Resources.Website.Common.Common.DeleteSuccessMsg'
                    });
                }
                if (data.response == "ASSOCIATED") {
                    $.pnotify({
                        title: 'Failure',
                        type: 'error',
                        text: 'Error deleting record because it is associated'
                    });
                }
                if (data.response == "ERROR") {
                    $.pnotify({
                        title: 'Failure',
                        type: 'error',
                        text: '@EPMS.WebModels.Resources.Website.Common.Common.DeleteErrorMsg'
                    });
                }
            },
            error: function () {
                $.pnotify({
                    title: 'Failure',
                    type: 'error',
                    text: '@EPMS.WebModels.Resources.Website.Common.Common.DeleteErrorMsg'
                });
            }
        });
    }
    function saveImportedProducts(url) {
        $.ajax({
            url: url,
            type: 'POST',
            dataType: 'json',
            traditional: true,
            data: {
                itemVariationIds: selectedChildNodes,
                sectionIds: selectedParentNodes
            },
            success: function (data) {
                $.unblockUI();
                if (data == "Success") {
                    window.location.href = siteUrl + "/Website/Product/Index";
                }
            },
            error: function (e) {
                alert('Error=' + e.toString());
                $(".tempLoader").click();
                $.unblockUI();
            }
        });
    }

</script>
