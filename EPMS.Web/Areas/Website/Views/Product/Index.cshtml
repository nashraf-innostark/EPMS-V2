@model EPMS.WebModels.ViewModels.Product.ProductListViewModel

@{
    ViewBag.Title = EPMS.WebModels.Resources.Website.Product.ProductIndex.PageTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.MessageVM = TempData["message"];
    var direction = EPMS.WebModels.Resources.Shared.Common.TextDirection;
    var serial = 0;
}

<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="">
                @ViewBag.Title
            </a>
        </li>
    </ul>
</div>

<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@ViewBag.Title</small></h2>
</header>

<!--Notifications begin-->
@Html.Partial("_Alert")
<!--Notifications end-->

<form class="form-horizontal" id="validation_form">
    <div class="container-fluid">
        <div class="alert alert-info alert-block">
            <i class="icon-alert icon-alert-info"></i>
            <strong>@ViewBag.Title</strong>
            <a href="~/Website/Product/Create">@EPMS.WebModels.Resources.Website.Product.ProductIndex.AddNew</a>
            <br />
            <a href="#" id="TreeSelector">@EPMS.WebModels.Resources.Website.Product.ProductIndex.ImportFromInventory</a>
        </div>
        
        @Html.HiddenFor(model => model.SearchRequest.SearchString, new { id = "searchString" })

        <div class="row-fluid">
            <div class="span12">
                <table id="Products" class="table table-striped table-responsive">
                    <thead>
                        <tr>
                            <th>@EPMS.WebModels.Resources.Website.Product.ProductIndex.Serial</th>
                            <th>@EPMS.WebModels.Resources.Website.Product.ProductIndex.Name</th>
                            <th>@EPMS.WebModels.Resources.Website.Product.ProductIndex.Price</th>
                            <th>@EPMS.WebModels.Resources.Website.Product.ProductIndex.DiscountedPrice</th>
                            <th>@EPMS.WebModels.Resources.Website.Product.ProductIndex.Description</th>
                            <th>@EPMS.WebModels.Resources.Website.Product.ProductIndex.Specification</th>
                            <th>@EPMS.WebModels.Resources.Website.Product.ProductIndex.Delete</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</form>

@section popups
{
    @Html.Partial("_InventoryDepartmentItems")
}

<script src="~/Scripts/plugins/jquery.blockUI.js"></script>
<link href="~/Content/CSS/jsTreeCheckbox/style.css" rel="stylesheet" />
<script>
    
    $(document).ready(function () {
        var oTable = $('#Products').dataTable({
            "sPaginationType": "bootstrap",
            "bProcessing": true,
            "bServerSide": true,
            "aoColumns": [
                {
                    "aTargets": [0],
                    "sDefaultContent": "",
                    "bVisible": true,
                    "bSortable": false
                },
                {
                    "aTargets": [1],
                    "sDefaultContent": "",
                    "mRender": function (data, type, full) {
                        var name = full["ProductNameEn"];
                        var id = full["ProductId"];
                        var element = '<a href="Create/' + id + '">' + name + '</a>';
                        return element;
                    },
                    "bSortable": true
                },
                {
                    "aTargets": [2],
                    "sDefaultContent": "",
                    "mRender": function (data, type, full) {
                        return full["ProductPrice"];
                    },
                    "bSortable": true
                },
                {
                    "aTargets": [3],
                    "sDefaultContent": "",
                    "mRender": function (data, type, full) {
                        return full["DiscountedPrice"];
                    },
                    "bSortable": true
                },
                {
                    "aTargets": [4],
                    "sDefaultContent": "",
                    "mRender": function (data, type, full) {
                        return full["ProductDescEn"];
                    },
                    "bSortable": false
                },
                {
                    "aTargets": [5],
                    "sDefaultContent": "",
                    "mRender": function (data, type, full) {
                        return full["ProductSpecificationEn"];
                    },
                    "bSortable": false
                },
                {
                    "aTargets": [6],
                    "sDefaultContent": "",
                    "mRender": function (data, type, full) {
                        var name = "Delete";
                        var id = full["ProductId"];
                        var ele = '<a><span class="cursorHand" onclick="deleteRow(' + id + ')">' + name + '</span></a>';
                        return ele;
                    },
                    "bSortable": true
                }
            ],
            "fnServerParams": function (aaData) {
                aaData.push({ "name": "search", "value": $('input').val() });
            },
            "sAjaxSource": "/Website/Product/Index",
            "sServerMethod": "POST",
            "oLanguage": {
                "sLoadingRecords": "Please wait - loading records...",
                "sZeroRecords": "No records to display.",
                "sProcessing": "Processing...",
                "sInfoEmpty": "No entries to display."
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $("td:first", nRow).html(iDisplayIndex + 1);
                return nRow;
            },
        });

        $(".dataTables_length select").select2({
            dropdownCssClass: 'noSearch'
        });
        $(".dataTables_filter input").unbind()
            .bind("input", function (e) {
                // Bind our desired behavior
                if (this.value.length >= 3 || e.keyCode == 13) {
                    $("#searchString").val(this.value);
                    oTable.fnDraw();
                }
                if (this.value == "") {
                    $("#searchString").val(this.value);
                    oTable.fnDraw();
                }
                return;
            });
    });

    var siteUrl;
    var selectedChildNodes;
    var selectedParentNodes;
    var url;
    var divId = "jstree";
    var dir;
    $(function () {
        siteUrl = $('#siteURL').val();
        dir = '@direction';
        $.blockUI({
            message: '<img src="' + siteUrl + '/Images/Gallery/ajax_loader.gif" style="width:75px; height:75"/>',
            css: { backgroundColor: '#FFFAFA', left: "47%", width: "6%" }
        });
        url = siteUrl + "/Website/Product/GetTreeData/";
        populateTreeJson(url, divId, dir);
        $('#Product').dataTable({
            "sPaginationType": "bootstrap",
            "aoColumns": [
                null,
                null,
                null,
                null,
                null,
                null,
                null
            ],
            "fnInitComplete": function () {
                $(".dataTables_wrapper select").select2({
                    dropdownCssClass: 'noSearch'
                });
            },
        });
        $("#simpleSelectBox").select2({
            dropdownCssClass: 'noSearch'
        });


        $("#TreeSelector").click(function (event) {
            $('#itemTreeSelector').modal('show');
            event.preventDefault();
            $.fn.modal.Constructor.prototype.enforceFocus = function () { };
            
        });
        $("#import").click(function (event) {
            selectedChildNodes = new Array();
            selectedParentNodes = new Array();
            $.blockUI({
                message: '<img src="' + siteUrl + '/Images/Gallery/ajax_loader.gif" style="width:75px; height:75"/>',
                css: { backgroundColor: '#FFFAFA', left: "47%", width: "6%" }
            });
            var selectedNodes = $("#jstree").jstree("get_checked", true, true);
            $.each(selectedNodes, function (key, value) {
                if (value.children.length == 0) {
                    selectedChildNodes.push(value.id);
                    if (value.parents.length > 1) {
                        var isContains = $.inArray(value.parents[0], selectedParentNodes) > -1;
                        if (isContains == false && value.parents[1] == "#") {
                            selectedParentNodes.push(value.parents[0]);
                        }
                    }
                }
            });
            if (selectedChildNodes.length > 0 || selectedParentNodes.length > 0) {
                var url = siteUrl + "/Website/Product/ImportProducts";
                saveImportedProducts(url);
            }
            $.unblockUI();
        });
    });

    function deleteRow(productId, elem) {
        if (confirm('@EPMS.WebModels.Resources.Website.Common.Common.DeleteConfirmation') == false) {
            return;
        }

        var serviceUrl = '/Website/Product/DeleteIt';
        $.ajax({
            url: serviceUrl,
            type: "POST",
            dataType: "json",
            data: {
                productId: productId
            },
            success: function (data) {
                if (data.response == "OK") {
                    var row = $(elem).parent().parent().get(0);
                    var atable = $('#Product').dataTable();
                    var pos = atable.fnGetPosition(row);
                    atable.fnDeleteRow(pos);
                    $.pnotify({
                        title: 'Success',
                        type: 'info',
                        text: '@EPMS.WebModels.Resources.Website.Common.Common.DeleteSuccessMsg'
                    });
                }
                if (data.response == "ASSOCIATED") {
                    $.pnotify({
                        title: 'Failure',
                        type: 'error',
                        text: 'Error deleting record because it is associated'
                    });
                }
                if (data.response == "ERROR") {
                    $.pnotify({
                        title: 'Failure',
                        type: 'error',
                        text: '@EPMS.WebModels.Resources.Website.Common.Common.DeleteErrorMsg'
                    });
                }
            },
            error: function () {
                $.pnotify({
                    title: 'Failure',
                    type: 'error',
                    text: '@EPMS.WebModels.Resources.Website.Common.Common.DeleteErrorMsg'
                });
            }
        });
    }
    function saveImportedProducts(url) {
        $.ajax({
            url: url,
            type: 'POST',
            dataType: 'json',
            traditional: true,
            data: {
                itemVariationIds: selectedChildNodes,
                sectionIds: selectedParentNodes
            },
            success: function (data) {
                $.unblockUI();
                if (data == "Success") {
                    window.location.href = siteUrl + "/Website/Product/Index";
                }
            },
            error: function (e) {
                alert('Error=' + e.toString());
                $(".tempLoader").click();
                $.unblockUI();
            }
        });
    }

</script>
