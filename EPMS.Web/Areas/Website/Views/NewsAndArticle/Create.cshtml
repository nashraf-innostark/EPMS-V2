@using System.Configuration
@model EPMS.WebModels.ViewModels.NewsAndArticle.NewsAndArticleViewModel

@{
    ViewBag.Title = Model.NewsAndArticle.NewsArticleId > 0 ? EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.UpdatePageTitle : EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.AddPageTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.MessageVM = TempData["message"];
    var direction = EPMS.WebModels.Resources.Shared.Common.TextDirection;
}

<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/Website/NewsAndArticle/Index">
                @EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticlesList.PageTitle
            </a>
        </li>
        <li class="current">
            <a href="">
                @ViewBag.Title
            </a>
        </li>
    </ul>
</div>

<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@ViewBag.Title</small></h2>
</header>

<!--Notifications begin-->
@Html.Partial("_Alert")
<!--Notifications end-->


@using (Html.BeginForm("Create", "NewsAndArticle", FormMethod.Post, new { @id = "NewsAndArticleForm", @class = "form-horizontal", role = "form" }))
{
    <div class="container-fluid">
        
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.NewsAndArticle.NewsArticleId)
        @Html.HiddenFor(m => m.NewsAndArticle.RecCreatedBy)
        @Html.HiddenFor(m => m.NewsAndArticle.RecCreatedDt)
        @Html.HiddenFor(model => model.NewsAndArticle.ImagePath, new { @id = "NewsAndArticleImage" })
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
        
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.Order</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.NewsAndArticle.SortOrder, new { @dir = "ltr", id = "SortOrder", @class = "tbdisable toBeRequired" })
                    @Html.ValidationMessageFor(m => m.NewsAndArticle.SortOrder, "", new { @class = "required" })
                </div>
            </div>
        </div>
        
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.Type</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @if (direction == "ltr")
                    {
                        @Html.DropDownListFor(model => model.NewsAndArticle.Type, new[]
                        {
                            new SelectListItem {Value = "True", Text = @EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.Article},
                            new SelectListItem {Value = "False", Text = @EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.News}
                        }, new { @id = "Type", @class = "select2me" })
                    }
                </div>
            </div>
        </div>
        
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.TitleEn</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.NewsAndArticle.TitleEn, new { @dir = "ltr", id = "TitleEn", @class = "tbdisable toBeRequired" })
                    @Html.ValidationMessageFor(m => m.NewsAndArticle.TitleEn, "", new { @class = "required" })
                </div>
            </div>
        </div>
        
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.TitleAr</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.NewsAndArticle.TitleAr, new { @dir = "ltr", id = "TitleAr", @class = "tbdisable toBeRequired" })
                    @Html.ValidationMessageFor(m => m.NewsAndArticle.TitleAr, "", new { @class = "required" })
                </div>
            </div>
        </div>
        
        <div id="Drag_And_Drop_Upload" class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">
                    @EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.Image<a href="javascript:;" class="bootstrap-tooltip" data-placement="top" data-original-title="file size shouldn't exceed 1MB"><i class="icon-photon info-circle"></i></a>
                </label>
            </div>
            <div class="span9 row-fluid">
                <div class="upload-boxes row-fluid">
                    <div class="span3" id="upload"></div>
                    <div class="span9" id="uploaded"></div>
                </div>
            </div>
        </div>
        
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.AuthorNameEn</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.NewsAndArticle.AuthorNameEn, new { @dir = "ltr", id = "AuthorNameEn", @class = "tbdisable toBeRequired" })
                    @Html.ValidationMessageFor(m => m.NewsAndArticle.AuthorNameEn, "", new { @class = "required" })
                </div>
            </div>
        </div>
        
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.AuthorNameAr</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.NewsAndArticle.AuthorNameAr, new { @dir = "ltr", id = "AuthorNameAr", @class = "tbdisable toBeRequired" })
                    @Html.ValidationMessageFor(m => m.NewsAndArticle.AuthorNameAr, "", new { @class = "required" })
                </div>
            </div>
        </div>
        
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.ContentEn</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.NewsAndArticle.ContentEn, new { @dir = "ltr", id = "ContentEn", @class = "tbdisable toBeRequired" })
                    @Html.ValidationMessageFor(m => m.NewsAndArticle.ContentEn, "", new { @class = "required" })
                </div>
            </div>
        </div>
        
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.ContentAr</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.NewsAndArticle.ContentAr, new { @dir = "ltr", id = "ContentAr", @class = "tbdisable toBeRequired" })
                    @Html.ValidationMessageFor(m => m.NewsAndArticle.ContentAr, "", new { @class = "required" })
                </div>
            </div>
        </div>
        
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">Meta Keywords</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.NewsAndArticle.MetaKeywords, new { @dir = "ltr", id = "MetaKeywords", @class = "tbdisable toBeRequired" })
                    @Html.ValidationMessageFor(m => m.NewsAndArticle.MetaKeywords, "", new { @class = "required" })
                </div>
            </div>
        </div>
        
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">Meta Keywords Arabic</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.NewsAndArticle.MetaKeywordsAr, new { @dir = "ltr", id = "MetaKeywordsAr", @class = "tbdisable toBeRequired" })
                    @Html.ValidationMessageFor(m => m.NewsAndArticle.MetaKeywordsAr, "", new { @class = "required" })
                </div>
            </div>
        </div>
        
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">Meta Description</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.NewsAndArticle.MetaDesc, new { @dir = "ltr", id = "MetaDesc", @class = "tbdisable toBeRequired" })
                    @Html.ValidationMessageFor(m => m.NewsAndArticle.MetaDesc, "", new { @class = "required" })
                </div>
            </div>
        </div>
        
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">Meta Description Arabic</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.NewsAndArticle.MetaDescAr, new { @dir = "ltr", id = "MetaDescAr", @class = "tbdisable toBeRequired" })
                    @Html.ValidationMessageFor(m => m.NewsAndArticle.MetaDescAr, "", new { @class = "required" })
                </div>
            </div>
        </div>
        
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.ShowToPublic</label>
            </div>
            <div class="span9 span-inset">
                <div data-on-label="YES" data-off-label="NO" class="switch switch-small" data-on="success" data-off="danger">
                    @Html.CheckBoxFor(model => model.NewsAndArticle.ShowToPublic, new { @id = "ShowToPublic", @class = "tbdisable toBeRequired" })
                </div>
            </div>
        </div>
        
        <div class="control-group row-fluid">
            <div class="span3">
                <div class="span3 span-inset">
                    <button id="edit" class="btn">@EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.EditButton</button>
                    <button id="savebtn" class="btn" type="submit">@EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.SaveButton</button>
                </div>
                <div class="span3 span-inset">
                    <button id="cancel" class="btn" onclick="window.location.href = '@(ConfigurationManager.AppSettings["SiteURL"])/Website/NewsAndArticle/Index'" type="reset">@EPMS.WebModels.Resources.Website.NewsAndArticles.NewsAndArticleCreate.CancelButton</button>
                </div>
            </div>
        </div>

    </div>
}

<script>

    $(document).ready(function() {
        var siteUrl = $("#siteURL").val();
        $("#JobTitleForm").validate({
            errorElement: "span",
            errorClass: "error",
            onclick: true,
            rules: {
                "req": {
                    required: true
                },
                "numbers": {
                    required: false,
                    digits: true
                },
                "email": {
                    email: true
                },
                "url": {
                    url: true
                },
                "date": {
                    date: true
                }
            }
        });

        var id = $('#NewsAndArticle_NewsArticleId').val();
        if (id == 0 || id == "") {
            $('.' + 'tbdisable' + ':input').attr('disabled', false);
            $("#savebtn").show();
            $("#cancel").show();
            $("#edit").hide();
        } else {
            $('.' + 'tbdisable' + ':input').attr('disabled', true);
            $("#savebtn").hide();
            $("#cancel").hide();
            $("#edit").show();
        }
        $("#edit").click(function(event) {
            $('.' + 'tbdisable' + ':input').attr('disabled', false);
            $("#savebtn").show();
            $("#cancel").show();
            $("#edit").hide();
            event.preventDefault();
        });
    });

    // upload Image
    var errors = "";
    var siteUrl = $('#siteURL').val();
    var url = "/Website/NewsAndArticle/UploadImage";
    $('#upload').mfupload({
        type: 'jpg,png,tif,jpeg', //all types
        maxsize: 10,
        post_upload: url,
        folder: "./",
        ini_text: "Drag your file here or click (max: 1MB)",
        over_text: "Drop Here",
        over_col: '#666666',
        over_bkcol: '#f0f0f0',

        init: function () {
            $("#uploaded").empty();
        },

        start: function (result) {
            $("#uploaded").append("<div id='FILE" + result.fileno + "' class='files'>" + result.filename + "<div class='progress progress-info progress-thin'><div class='bar' id='PRO" + result.fileno + "'></div></div></div>");
        },

        loaded: function (result) {
            $("#PRO" + result.fileno).remove();
            $("#FILE" + result.fileno).html("Uploaded: " + result.filename + " (" + result.size + ")");
            $("#NewsAndArticleImage").val(result.filename);
        },

        progress: function (result) {
            $("#PRO" + result.fileno).css("width", result.perc + "%");
        },

        error: function (error) {
            errors += error.filename + ": " + error.err_des + "\n";
        },

        completed: function () {
            if (errors != "") {
                alert(errors);
                errors = "";
            }
        }
    });

</script>