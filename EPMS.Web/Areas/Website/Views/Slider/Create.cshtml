@model EPMS.WebModels.ViewModels.Slider.SliderViewModel

@{
    ViewBag.Title = Model.ImageSlider.SliderId > 0 ? "Website Slider Updation" : "Website Slider Addition";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string[] userPermissionsSet = (string[])HttpContext.Current.Session["UserPermissionSet"];
}

<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/Website/Home/Index">
                Website Main Page
            </a>
        </li>
        <li class="current">
            <a href="javascript:;">
                @ViewBag.Title
            </a>
        </li>
    </ul>
</div>

<header>
    <i class="icon-big-notepad"></i>
    @if (Model.ImageSlider.SliderId > 0)
    {
        <h2><small>Website Slider Edit</small></h2>
    }
    else
    {
        <h2><small>Website Slider Add</small></h2>
    }
</header>

@using (Html.BeginForm("Create", "Slider", FormMethod.Post, new { @class = "form-horizontal", @id = "AddEditSliderForm", role = "form", enctype = "multipart/form-data" }))
{
    <div class="container-fluid">
        @Html.HiddenFor(model => model.ImageSlider.SliderId)
        @Html.HiddenFor(model => model.ImageSlider.RecCreatedBy)
        @Html.HiddenFor(model => model.ImageSlider.RecCreatedDate)
        @Html.HiddenFor(model => model.ImageSlider.ImageName, new { @id = "ImageName" })
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Order">Order</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.ImageSlider.ImageOrder, new { @id = "Order", @class = "toBeDisable" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="TitleEn">Title</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.ImageSlider.TitleEn, new { @id = "TitleEn", @class = "toBeDisable" })
                    @Html.ValidationMessageFor(m => m.ImageSlider.TitleEn, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="TitleAr">Title Arabic</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.ImageSlider.TitleAr, new { @id = "TitleAr", @class = "toBeDisable" })
                    @Html.ValidationMessageFor(m => m.ImageSlider.TitleAr, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="SubTitleEn">Sub Title</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.ImageSlider.SubTitleEn, new { @id = "SubTitleEn", @class = "toBeDisable" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="SubTitleAr">Sub Title Arabic</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.ImageSlider.SubTitleAr, new { @id = "SubTitleAr", @class = "toBeDisable" })
                </div>
            </div>
        </div>
        <div id="Drag_And_Drop_Upload" class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="inputField">
                    Image<a href="javascript:;" class="bootstrap-tooltip" data-placement="top" data-original-title="file size shouldn't exceed 1MB"><i class="icon-photon info-circle"></i></a>
                </label>
            </div>
            <div class="span9 row-fluid" id="image">
                <div class="upload-boxes row-fluid">
                    <div class="span3" id="upload"></div>
                    <div class="span9" id="uploaded"></div>
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Position"> Position </label>
            </div>
            <div class="span2">
                <div class="controls">
                    @Html.DropDownListFor(model => model.ImageSlider.Position,
                                        new SelectList(Model.Position, "Value", "Text", Model.ImageSlider.Position),
                             new { @id = "Position", @class = "select2me disableSelect" })
                </div>
            </div>
        </div>

        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="Link">Link</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.ImageSlider.Link, new { @id = "Link", @class = "toBeDisable" })
                </div>
            </div>
        </div>
        <div id="Descp">
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="descp">Description</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        <input type="text" id="descp" readonly="readonly" />
                    </div>
                </div>
            </div>
        </div>
        <div id="CKEditorDescp">
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="Description">Description</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextAreaFor(model => model.ImageSlider.Description, new { @id = "Description", @class = "" })
                    </div>
                </div>
            </div>
        </div>
        <div id="Edit" style="display: none">
            <div class="control-group row-fluid">
                <div class="span3 span-inset">
                    <button type="button" class="btn" id="edit">Edit</button>
                </div>
            </div>
        </div>
        <div id="Create" style="display: none">
            <div class="control-group row-fluid">
                <div class="span3 span-inset">
                    <button type="submit" class="btn">Create</button>
                </div>
            </div>
        </div>
        <div id="Update" style="display: none">
            <div class="control-group row-fluid">
                <div class="span3 span-inset">
                    <button type="submit" class="btn" name="Update">Update</button>
                </div>
            </div>
        </div>
        @if (Model.ImageSlider.SliderId > 0 && userPermissionsSet.Contains("DeleteSlider"))
        {
            <div id="Delete" style="display: none">
                <div class="control-group row-fluid">
                    <div class="span3 span-inset">
                        <button type="submit" class="btn" name="Delete">Delete</button>
                    </div>
                </div>
            </div>
        }
    </div>
}

<script src="~/RTE/ckeditor.js"></script>
<script type="text/javascript">
    $().ready(function () {
        if (parseInt('@Model.ImageSlider.SliderId') > 0 || '@userPermissionsSet.Contains("SliderCreate")' == 'False') {
            $('.' + 'toBeDisable' + ':input').attr('disabled', true);
            $('.disableSelect').select2('disable');
            $('#image').addClass('disableList');
            var descpE = '@Html.Raw(Model.ImageSlider.Description)';
            var regex = /(<([^>]+)>)/ig;
            var res = descpE.replace(regex, "");
            $("#descp").val(res);
            $("#Descp").show();
            $("#CKEditorDescp").hide();
            var val = '@userPermissionsSet.Contains("SliderCreate")';
            if (val == 'True') {
                $("#Edit").show();
            } else {

            }
        } else {
            $("#Descp").hide();
            CKEDITOR.replace('Description', {
                filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
            });
            $("#CKEditorDescp").show();
            $("#Create").show();
        }



        var errors = "";
        var url = $('#siteURL').val() + "/Website/Slider/UploadImage";
        $('#upload').mfupload({
            type: '', //all types
            maxsize: 1,
            post_upload: url,
            folder: "./",
            ini_text: "Drag your file here or click (max: 1MB)",
            over_text: "Drop Here",
            over_col: '#666666',
            over_bkcol: '#f0f0f0',
            init: function () {
                $("#uploaded").empty();
            },
            start: function (result) {
                $("#uploaded").append("<div id='FILE" + result.fileno + "' class='files'>" + result.filename + "<div class='progress progress-info progress-thin'><div class='bar' id='PRO" + result.fileno + "'></div></div></div>");
            },
            loaded: function (result) {
                $("#PRO" + result.fileno).remove();
                $("#FILE" + result.fileno).html("Uploaded: " + result.filename + " (" + result.size + ")");
                $("#ImageName").val(result.filename);
            },
            progress: function (result) {
                $("#PRO" + result.fileno).css("width", result.perc + "%");
            },
            error: function (error) {
                errors += error.filename + ": " + error.err_des + "\n";
            },
            completed: function () {
                if (errors != "") {
                    alert(errors);
                    errors = "";
                }
            }
        });

    });
    $("#edit").click(function (event) {
        $('.' + 'toBeDisable' + ':input').attr('disabled', false);
        // CK Editor
        CKEDITOR.replace('Description', {
            filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
        });
        $('.disableSelect').select2('enable');
        $('#image').removeClass('disableList');
        $("#Descp").hide();
        $("#CKEditorDescp").show();
        $("#Edit").hide();
        $("#Update").show();
        $("#Delete").show();
    });
</script>