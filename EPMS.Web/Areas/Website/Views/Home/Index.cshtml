@using System.Configuration
@using EPMS.WebModels.WebsiteModels
@model EPMS.WebModels.ViewModels.HomePage.HomePageViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Website Main Page Create";
    var direction = EPMS.WebModels.Resources.Shared.Common.TextDirection;
    string[] userPermissionsSet = (string[])HttpContext.Current.Session["UserPermissionSet"];
    int i = 0;
    int j = 0;
    int k = 0;
}

<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="">
                Website Home Page
            </a>
        </li>
        <li class="current">
            <a href="javascript:;">
                Home Page Create
            </a>
        </li>
    </ul>
</div>

<header>
    <i class="icon-big-notepad"></i>
    <h2><small>Website Home Page Create</small></h2>
</header>
<!--Notifications begin-->
@Html.Partial("_Alert")
<!--Notifications end-->

<form class="form-horizontal" id="validation_form">
    <div class="container-fluid">
        <div id="Drag_And_Drop_Upload" class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="inputField">
                    Logo<a href="javascript:;" class="bootstrap-tooltip" data-placement="top" data-original-title="file size shouldn't exceed 1MB"><i class="icon-photon info-circle"></i></a>
                </label>
            </div>
            <div class="span9 row-fluid">
                <div class="upload-boxes row-fluid">
                    <div class="span3" id="upload"></div>
                    <div class="span9" id="uploaded"></div>
                </div>
            </div>
        </div>

        <div class="alert alert-info alert-block">
            <i class="icon-alert icon-alert-info"></i>
            <strong>Slider</strong>
            @if (userPermissionsSet.Contains("SliderCreate"))
            {
                <a href="~/Website/Slider/Create">Create New Slider Image</a>
            }
        </div>

        <div class="row-fluid">
            <div class="span12">
                <table class="table table-striped table-responsive" id="tableSortableSlider">
                    <thead>
                        <tr>
                            <th> Serial</th>
                            <th>Image</th>
                            <th>Image Order</th>
                            <th>Title</th>
                            <th>Sub Title</th>
                            <th>Description</th>
                            <th>Link</th>
                            <th>Position</th>
                            <th>Delete</th>
                        </tr>
                    </thead>
                    <tbody class="sliderTableRows">
                        @foreach (ImageSlider imageSlider in Model.ImageSlider)
                        {
                            <tr class="gradeX">
                                <td class="sliderSerialNumber">@(i + 1)</td>
                                <td><img src='@Url.Content(ConfigurationManager.AppSettings["SliderImage"] + imageSlider.ImageName)' alt="" /></td>
                                <td>@imageSlider.ImageOrder</td>
                                @if (direction == "ltr")
                                {
                                    <td><a href="~/Website/Slider/Create/@imageSlider.SliderId">@imageSlider.TitleEn</a></td>
                                    <td>@imageSlider.SubTitleEn</td>
                                }
                                else
                                {
                                    <td><a href="~/Website/Slider/Create/@imageSlider.SliderId">@imageSlider.TitleAr</a></td>
                                    <td>@imageSlider.SubTitleAr</td>
                                }
                                <td class="@imageSlider.SliderId"></td>
                                <script>
                                    var info = '@Html.Raw(imageSlider.Description)';
                                    var regex = /(<([^>]+)>)/ig;
                                    var result = info.replace(regex, "");
                                    $("." + '@imageSlider.SliderId').text(result);
                                </script>

                                <td>@imageSlider.Link</td>
                                <td>
                                    <div class="span8">
                                        <div class="controls">
                                            @Html.DropDownListFor(model => model.ImageSlider[i].Position,
                                            new SelectList(Model.Position, "Value", "Text", Model.ImageSlider[i].Position),
                                            new { @class = "select2me tableDbM" })
                                        </div>
                                    </div>
                                </td>
                                <td><a href="#" class="deleteSliderRow" onclick="deleteSliderRow(@imageSlider.SliderId, '@imageSlider.ImageName')">Delete</a></td>
                            </tr>
                                i++;
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="alert alert-info alert-block">
            <i class="icon-alert icon-alert-info"></i>
            <strong>Departments</strong>
            @if (userPermissionsSet.Contains("WebsiteDepartmentCreate"))
            {
                <a href="~/Website/Department/Create">Create New Department</a>
            }
        </div>

        <div class="row-fluid">
            <div class="span12">
                <table class="table table-striped table-responsive" id="tableSortableDepartments">
                    <thead>
                        <tr>
                            <th> Serial</th>
                            <th>Image</th>
                            <th>Department Order</th>
                            <th>Department Name</th>
                            <th>Description</th>
                            <th>Link</th>
                            <th>Delete</th>
                        </tr>
                    </thead>
                    <tbody class="departmentTableRows">
                        @foreach (WebsiteDepartment websiteDepartment in Model.WebsiteDepartments)
                        {
                            <tr class="gradeX">
                                <td class="departmentSerialNumber">@(j + 1)</td>
                                <td><img src='@Url.Content(ConfigurationManager.AppSettings["DepartmentImage"] + websiteDepartment.ImageName)' alt="" /></td>
                                <td>@websiteDepartment.DepartmentOrder</td>
                                @if (direction == "ltr")
                                {
                                    <td><a href="~/Website/Department/Create/@websiteDepartment.DepartmentId">@websiteDepartment.NameEn</a></td>
                                }
                                else
                                {
                                    <td><a href="~/Website/Department/Create/@websiteDepartment.DepartmentId">@websiteDepartment.NameAr</a></td>
                                }
                                <td class="@websiteDepartment.DepartmentId"></td>
                                <script>
                                    var info = '@Html.Raw(websiteDepartment.Description)';
                                    var regex = /(<([^>]+)>)/ig;
                                    var result = info.replace(regex, "");
                                    $("." + '@websiteDepartment.DepartmentId').text(result);
                                </script>
                                <td>@websiteDepartment.Link</td>
                                <td><a href="#" class="deleteDepartmentRow" onclick="deleteDepartmentRow(@websiteDepartment.DepartmentId, '@websiteDepartment.ImageName')">Delete</a></td>
                            </tr>
                                j++;
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="alert alert-info alert-block">
            <i class="icon-alert icon-alert-info"></i>
            <strong>Partners</strong>
            @if (userPermissionsSet.Contains("PartnerCreate"))
            {
                <a href="~/Website/Partner/Create">Create New Partner</a>
            }
        </div>

        <div class="row-fluid">
            <div class="span12">
                <table class="table table-striped table-responsive" id="tableSortablePartners">
                    <thead>
                        <tr>
                            <th>Serial</th>
                            <th>Image</th>
                            <th>Order</th>
                            <th>Partner Name</th>
                            <th>Link</th>
                            <th>Delete</th>
                        </tr>
                    </thead>
                    <tbody class="partnerTableRows">
                        @foreach (Partner partner in Model.Partners)
                        {

                            <tr class="gradeX">
                                <td class="partnerSerialNumber">@(k + 1)</td>
                                <td><img src='@Url.Content(ConfigurationManager.AppSettings["PartnerImage"] + partner.ImageName)' alt="" /></td>
                                <td>@partner.ImageOrder</td>
                                @if (direction == "ltr")
                                {
                                    <td><a href="~/Website/Partner/Create/@partner.PartnerId">@partner.NameEn</a></td>
                                }
                                else
                                {
                                    <td><a href="~/Website/Partner/Create/@partner.PartnerId">@partner.NameAr</a></td>
                                }
                                <td>@partner.Link</td>
                                <td><a href="#" class="deletePartnerRoW" onclick="deletePartnerRoW(@partner.PartnerId, '@partner.ImageName')">Delete</a></td>
                            </tr>
                                k++;
                        }
                    </tbody>
                </table>
            </div>
        </div>

        @*<div class="control-group row-fluid">
            <div class="span3 span-inset">
                <button type="button" class="btn">Create</button>
            </div>
        </div>*@
    </div>
</form>

<script>
    var sliderRow;
    var partnerRow;
    var departmentRow;
    $(document).ready(function () {
        var errors = "";

        $('#upload').mfupload({

            type: '',   //all types
            maxsize: 10,
            post_upload: "./file-uploader.html",
            folder: "./",
            ini_text: "Drag your file here or click (max: 1MB)",
            over_text: "Drop Here",
            over_col: '#666666',
            over_bkcol: '#f0f0f0',

            init: function () {
                $("#uploaded").empty();
            },
            start: function (result) {
                $("#uploaded").append("<div id='FILE" + result.fileno + "' class='files'>" + result.filename + "<div class='progress progress-info progress-thin'><div class='bar' id='PRO" + result.fileno + "'></div></div></div>");
            },
            loaded: function (result) {
                $("#PRO" + result.fileno).remove();
                $("#FILE" + result.fileno).html("Uploaded: " + result.filename + " (" + result.size + ")");
            },
            progress: function (result) {
                $("#PRO" + result.fileno).css("width", result.perc + "%");
            },
            error: function (error) {
                errors += error.filename + ": " + error.err_des + "\n";
            },
            completed: function () {
                if (errors != "") {
                    alert(errors);
                    errors = "";
                }
            }
        });
        $('#tableSortableSlider').dataTable({
            "sPaginationType": "bootstrap",
            "aoColumns": [
                null,
                { "bSortable": false },
                null,
                null,
                null,
                null,
                null,
                { "bSortable": false },
                { "bSortable": false }
            ],
            "fnInitComplete": function () {
                $(".dataTables_wrapper select").select2({
                    dropdownCssClass: 'noSearch'
                });
            }
        });
        $('#tableSortableDepartments').dataTable({
            "sPaginationType": "bootstrap",
            "aoColumns": [
                null,
                { "bSortable": false },
                null,
                null,
                null,
                null,
                { "bSortable": false }
            ],
            "fnInitComplete": function () {
                $(".dataTables_wrapper select").select2({
                    dropdownCssClass: 'noSearch'
                });
            }
        });
        $('#tableSortablePartners').dataTable({
            "sPaginationType": "bootstrap",
            "aoColumns": [
                null,
                { "bSortable": false },
                null,
                null,
                null,
                { "bSortable": false }
            ],
            "fnInitComplete": function () {
                $(".dataTables_wrapper select").select2({
                    dropdownCssClass: 'noSearch'
                });
            }
        });
    });
    $('.deleteSliderRow').on("click", function () {
        sliderRow = $(this).parent().parent().get(0);
    });
    function deleteSliderRow(sliderId, imageName) {
        if ('@userPermissionsSet.Contains("DeleteSlider")' == 'False') {
            var m = $(".alert-error");
            m.children("span").text("You have no permission to delete");
            m.show();
            return;
        }
        if (confirm("Are you sure to delete this row ?") == false) {
            return;
        }

        var serviceUrl = '/Website/Slider/DeleteSliderImage';
        $.ajax({
            url: serviceUrl,
            type: "POST",
            dataType: "json",
            data: {
                sliderId: sliderId,
                imageName: imageName
            },
            success: function (result) {
                if (result == "Deleted") {
                    if (sliderRow != null || sliderRow != "" || sliderRow != undefined) {
                        // remove row from table
                        var atable = $('#tableSortableSlider').dataTable();
                        var pos = atable.fnGetPosition(sliderRow);
                        atable.fnDeleteRow(pos);
                        reActivateSliderSerial();
                    }
                    var m = $(".alert-success");
                    m.children("span").text("Record has been Deleted");
                    m.show();
                }
                if (result == "Error") {
                    var m = $(".alert-error");
                    m.children("span").text("Error deleting record");
                    m.show();
                }
            },
            error: function () {
                var m = $(".alert-error");
                m.children("span").text("Error deleting record");
                m.show();
            }
        });
    }
    $('.deleteDepartmentRow').on("click", function () {
        departmentRow = $(this).parent().parent().get(0);
    });
    function deleteDepartmentRow(departmentId, imageName) {
        if ('@userPermissionsSet.Contains("WebsiteDepartmentDelete")' == 'False') {
            var m = $(".alert-error");
            m.children("span").text("You have no permission to delete");
            m.show();
            return;
        }
        if (confirm("Are you sure to delete this row ?") == false) {
            return;
        }

        var serviceUrl = '/Website/Department/DeleteDepartment';
        $.ajax({
            url: serviceUrl,
            type: "POST",
            dataType: "json",
            data: {
                departmentId: departmentId,
                imageName: imageName
            },
            success: function (result) {
                if (result == "Deleted") {
                    if (departmentRow != null || departmentRow != "" || departmentRow != undefined) {
                        // remove row from table
                        var atable = $('#tableSortableDepartments').dataTable();
                        var pos = atable.fnGetPosition(departmentRow);
                        atable.fnDeleteRow(pos);
                        reActivateDepartmentSerial();
                    }
                    var m = $(".alert-success");
                    m.children("span").text("Record has been Deleted");
                    m.show();
                }
                if (result == "Error") {
                    var m = $(".alert-error");
                    m.children("span").text("Error deleting record");
                    m.show();
                }
            },
            error: function () {
                var m = $(".alert-error");
                m.children("span").text("Error deleting record");
                m.show();
            }
        });
    }
    $('.deletePartnerRoW').on("click", function () {
        partnerRow = $(this).parent().parent().get(0);
    });
    function deletePartnerRoW(partnerId, imageName) {
        if ('@userPermissionsSet.Contains("DeletePartner")' == 'False') {
            var m = $(".alert-error");
            m.children("span").text("You have no permission to delete");
            m.show();
            return;
        }
        if (confirm("Are you sure to delete this row ?") == false) {
            return;
        }

        var serviceUrl = '/Website/Partner/DeletePartner';
        $.ajax({
            url: serviceUrl,
            type: "POST",
            dataType: "json",
            data: {
                partnerId: partnerId,
                imageName: imageName
            },
            success: function (result) {
                if (result == "Deleted") {
                    if (partnerRow != null || partnerRow != "" || partnerRow != undefined) {
                        // remove row from table
                        var atable = $('#tableSortablePartners').dataTable();
                        var pos = atable.fnGetPosition(partnerRow);
                        atable.fnDeleteRow(pos);
                        reActivatePartnerSerial();
                    }
                    var m = $(".alert-success");
                    m.children("span").text("Record has been Deleted");
                    m.show();
                }
                if (result == "Error") {
                    var m = $(".alert-error");
                    m.children("span").text("Error deleting record");
                    m.show();
                }
            },
            error: function () {
                var m = $(".alert-error");
                m.children("span").text("Error deleting record");
                m.show();
            }
        });
    }
    function reActivateSliderSerial() {
        var add = 0;
        $('.sliderTableRows tr').each(function () {
            add++;
            $(this).find(".sliderSerialNumber").text(add);
        });
    }
    function reActivatePartnerSerial() {
        var add = 0;
        $('.partnerTableRows tr').each(function () {
            add++;
            $(this).find(".partnerSerialNumber").text(add);
        });
    }
    function reActivateDepartmentSerial() {
        var add = 0;
        $('.departmentTableRows tr').each(function () {
            add++;
            $(this).find(".departmentSerialNumber").text(add);
        });
    }
</script>