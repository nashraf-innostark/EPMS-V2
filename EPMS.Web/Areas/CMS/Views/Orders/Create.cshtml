@model EPMS.Web.ViewModels.Orders.OrdersCreateViewModel

@{
    ViewBag.Title = Model.PageTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.MessageVM = TempData["message"];
    string backUrl = "";
    if (ViewBag.backUrl.ToString() != "")
    {
        backUrl = ViewBag.backUrl.ToString();
    }
    if (String.IsNullOrEmpty(backUrl))
    {
        backUrl = "~/CMS/Orders/Index";
    }
}

<!-- Navigation Bar -->
<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/CMS/Orders/Index">
                @EPMS.Web.Resources.CMS.Order.PTIndex
            </a>
        </li>
        <li>
            @ViewBag.Title
        </li>
    </ul>
</div>
<!-- Page heading -->
<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@ViewBag.Title</small></h2>
</header>
<!--Notifications begin-->
@Html.Partial("_Alert")
<!--Notifications end-->
<!-- Page heading ends -->
@using (Html.BeginForm("Create", "Orders", FormMethod.Post, new { @class = "form-horizontal", @id = "AddEditOrdersForm", role = "form", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.Orders.OrderId)
    @Html.HiddenFor(model => model.Orders.CustomerId)
    @Html.HiddenFor(model => model.Orders.OrderStatus)
    <div class="container-fluid">
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="createdBy">@EPMS.Web.Resources.CMS.Order.OrderNo</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Orders.OrderNo, new { @id = "OrderNumber", @class = "", @readonly = "true" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="description">@EPMS.Web.Resources.CMS.Order.Description</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextAreaFor(model => model.Orders.OrderDescription, new { @id = "OrderDescription", @class = "" })
                    @Html.ValidationMessageFor(m => m.Orders.OrderDescription, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="ExtraInformation">@EPMS.Web.Resources.CMS.Order.Notes</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextAreaFor(model => model.Orders.OrderNotes, new { @id = "OrderNotes", @class = "" })
                    @Html.ValidationMessageFor(m => m.Orders.OrderNotes, String.Empty, new { @class = "required" })
                </div>
            </div>
        </div>
        @if (Model.RoleName == "Customer" || Model.Orders.OrderId == 0)
        {
            <div class="control-group row-fluid">
                <div class="span3 span-inset">
                    <button type="submit" class="btn">@Model.BtnText</button>
                </div>
            </div>
        }
        @if (Model.RoleName == "Admin" && Model.Orders.OrderId > 0)
        {
            <div class="control-group row-fluid">
                <div class="span3 span-inset">
                    <a class="btn" href="@backUrl">@EPMS.Web.Resources.CMS.Order.BtnBack</a>
                </div>
            </div>
        }
    </div>
}

<script src="~/RichTextEditor/ckeditor.js"></script>
<script>
    $(document).ready(function() {
        CKEDITOR.replace('OrderDescription');
        CKEDITOR.replace('OrderNotes');
    });
</script>