@model EPMS.Web.ViewModels.Orders.OrdersCreateViewModel

@{
    ViewBag.Title = Model.PageTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.MessageVM = TempData["message"];
    string backUrl = "";
    if (ViewBag.backUrl.ToString() != "")
    {
        backUrl = ViewBag.backUrl.ToString();
    }
    if (String.IsNullOrEmpty(backUrl))
    {
        backUrl = "/CMS/Orders/Index";
    }
    string[] userPermissionsSet = (string[])HttpContext.Current.Session["UserPermissionSet"];
    long customerId = Convert.ToInt64(Session["CustomerID"]);
    var isDetailView = customerId != Model.Orders.CustomerId;
}

<!-- Navigation Bar -->
<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/CMS/Orders/Index">
                @EPMS.Web.Resources.CMS.Order.PTIndex
            </a>
        </li>
        <li>
            @ViewBag.Title
        </li>
    </ul>
</div>
<!-- Page heading -->
<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@ViewBag.Title</small></h2>
</header>
<!--Notifications begin-->
@Html.Partial("_Alert")
<!--Notifications end-->
<!-- Page heading ends -->
@using (Html.BeginForm("Create", "Orders", FormMethod.Post, new { @class = "form-horizontal", @id = "AddEditOrdersForm", role = "form", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.Orders.OrderId)
    @Html.HiddenFor(model => model.Orders.CustomerId)
    @Html.HiddenFor(model => model.Orders.OrderStatus)
    @Html.HiddenFor(model => model.Orders.OrderDate)
    @Html.HiddenFor(model => model.Orders.RecCreatedBy)
    @Html.HiddenFor(model => model.Orders.RecCreatedDt)
    <div class="container-fluid">
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="createdBy">@EPMS.Web.Resources.CMS.Order.OrderNo</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Orders.OrderNo, new { @id = "OrderNumber", @class = "", @readonly = "true" })
                </div>
            </div>
        </div>
        <div id="Descp">
            <div class="control-group row-fluid descriptionArea">
                <div class="span3">
                    <label class="control-label" for="descp">@EPMS.Web.Resources.CMS.Order.Description</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        <input type="text" id="descp" readonly="readonly" />
                    </div>
                </div>
            </div>
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="notes">@EPMS.Web.Resources.CMS.Order.Notes</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        <input type="text" id="notes" readonly="readonly" />
                    </div>
                </div>
            </div>
        </div>
        <div id="CKEditorDescp">
            <div class="control-group row-fluid descriptionArea">
                <div class="span3">
                    <label class="control-label" for="OrderDescription">@EPMS.Web.Resources.CMS.Order.Description</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextAreaFor(model => model.Orders.OrderDescription, new { @id = "OrderDescription", @class = "" })
                    </div>
                    <label id="descriptionValidation" style="margin-top: 5px; margin-bottom: 5px"></label>
                </div>
            </div>
            <div class="control-group row-fluid">
                <div class="span3">
                    <label class="control-label" for="OrderNotes">@EPMS.Web.Resources.CMS.Order.Notes</label>
                </div>
                <div class="span9">
                    <div class="controls">
                        @Html.TextAreaFor(model => model.Orders.OrderNotes, new { @id = "OrderNotes", @class = "" })
                    </div>
                </div>
            </div>
        </div>
        @if (userPermissionsSet.Contains("OrderCreate"))
        {
            if (!isDetailView)
            {
                <div class="control-group row-fluid">
                    <div class="span3 span-inset">
                        <button type="submit" class="btn" onclick=" validateForm(event) ">@Model.BtnText</button>
                    </div>
                </div>
            }
        }
        @if (userPermissionsSet.Contains("OrderDetails"))
        {
            <div class="control-group row-fluid">
                <div class="span3 span-inset">
                    <a class="btn" href="@backUrl">@EPMS.Web.Resources.CMS.Order.BtnBack</a>
                </div>
            </div>
        }
    </div>
}

<script src="~/RTE/ckeditor.js"></script>
<script>
    $(document).ready(function () {
        var isDetail;
        var val = '@userPermissionsSet.Contains("OrderCreate")';
        if (val == 'True') {
            isDetail = false;
        } else {
            isDetail = true;
        }
        if (isDetail == true) {
            var descpE = '@Html.Raw(Model.Orders.OrderDescription)';
            var regex = /(<([^>]+)>)/ig;
            var result = descpE.replace(regex, "");
            $("#descp").val(result);
            var descpA = '@Html.Raw(Model.Orders.OrderNotes)';
            regex = /(<([^>]+)>)/ig;
            result = descpA.replace(regex, "");
            $("#notes").val(result);
            $("#Descp").show();
            $("#CKEditorDescp").hide();
        }
        if (isDetail == false) {
            // CK Editor
            editor = CKEDITOR.replace('OrderDescription', {
                filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
                filebrowserUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Files&currentFolder=/archive/',
                filebrowserImageUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Images&currentFolder=/cars/',
                filebrowserFlashUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Flash',
            });
            editor = CKEDITOR.replace('OrderNotes', {
                filebrowserBrowseUrl: $("#siteURL").val() + '/RTB/ckfinder.html',
                filebrowserUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Files&currentFolder=/archive/',
                filebrowserImageUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Images&currentFolder=/cars/',
                filebrowserFlashUploadUrl: $("#siteURL").val() + '/RTB/core/connector/aspx/connector.aspx?command=QuickUpload&type=Flash',
            });
            $("#Descp").hide();
            $("#CKEditorDescp").show();
        }
    });
    function validateForm(event) {
        var counter = 0;
        var orderDescription = CKEDITOR.instances['OrderDescription'].getData();
        var orderNotes = CKEDITOR.instances['OrderNotes'].getData();
        if (orderDescription == "" || orderDescription == null) {
            $("#descriptionValidation").text("Please enter Order description.");
            $("#descriptionValidation").addClass("required");
            counter ++;
        } else {
            $("#descriptionValidation").text("");
            $("#descriptionValidation").removeClass("required");
        }
        if (counter > 0) {
            $('html,body').animate({
                scrollTop: $(".descriptionArea").offset().top
            }, 'slow');
            event.preventDefault();
            return false;
        }
        return true;
    }
</script>