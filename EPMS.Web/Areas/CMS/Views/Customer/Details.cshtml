@model EPMS.WebModels.ViewModels.Customer.CustomerViewModel

@{
    ViewBag.Title = EPMS.WebModels.Resources.CMS.Customer.Details;
    Layout = "~/Views/Shared/_Layout.cshtml";
    string ReturnUrl = "";
    if (ViewBag.ReturnUrl != null)
    {
        ReturnUrl = ViewBag.ReturnUrl.ToString();
    }
    if (string.IsNullOrEmpty(ReturnUrl))
    {
        ReturnUrl = "/CMS/Customer/Index";
    }
    var direction = EPMS.WebModels.Resources.Shared.Common.TextDirection;
}

<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/CMS/Customer/Index">
                Customer List
            </a>
        </li>
        <li class="current">
            <a href="">
                @ViewBag.Title
            </a>
        </li>
    </ul>
</div>

<!-- Page heading begin-->
<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@ViewBag.Title </small></h2>
</header>
<!-- Page heading end-->
<!-- Form starts.  -->
@using (Html.BeginForm("Details", "Customer", FormMethod.Post, new { @id = "customerForm", @class = "form-horizontal", role = "form" }))
{
    <div class="container-fluid">
        @Html.HiddenFor(model => model.Customer.CustomerId, new { @class = "CustomerId" })
        @Html.HiddenFor(model => model.User.Id)
        <input type="hidden" id="UserRole" value="@ViewBag.UserRole" />
        @Html.TextBoxFor(model => model.User.Id, new { style = "display: none;" })

        <div class="control-group row-fluid employee-div" style="display: none">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.CMS.Customer.Employee</label>
            </div>
            <div class="span2">
                <div class="controls">
                    @if (direction == "ltr")
                    {
                        @Html.DropDownListFor(model => model.Customer.EmployeeId, new SelectList(Model.Employees, "EmployeeId", "EmployeeNameE"), "--Select--", new { @class = "select2me", @id = "Employee" })
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.Customer.EmployeeId, new SelectList(Model.Employees, "EmployeeId", "EmployeeNameA"), "--Select--", new { @class = "select2me", @id = "Employee" })
                    }
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.CMS.Customer.NameEn</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Customer.CustomerNameE, new { id = "CustomerName", @class = "tbdisable", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(model => model.Customer.CustomerNameE, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.CMS.Customer.NameAr</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Customer.CustomerNameA, new { id = "CustomerNameA", @class = "tbdisable", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(model => model.Customer.CustomerNameE, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.CMS.Customer.Email</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.User.Email, new { id = "CustomerEmail", @class = "readonly" })
                    @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.CMS.Customer.CustomerAddress</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Customer.CustomerAddress, new { id = "CustomerAddress", @class = "tbdisable", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(model => model.Customer.CustomerAddress, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label">@EPMS.WebModels.Resources.CMS.Customer.CustomerMobile</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(model => model.Customer.CustomerMobile, new { id = "CustomerMobile", @class = "tbdisable", @ViewBag.Disabled })
                    @Html.ValidationMessageFor(model => model.Customer.CustomerMobile, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <div class="span3 span-inset">
                    <button id="edit" class="btn">Edit</button>
                    <button id="savebtn" class="btn" type="submit">Save</button>
                    <a id="cancel" class="btn" href="@ReturnUrl">Back</a>
                </div>
                @*<div class="span3 span-inset">
                        <button id="cancel" class="btn" onclick="window.location.href='/CMS/Customer/Index'" type="reset">Back</button>
                    </div>*@
            </div>
        </div>

    </div>
}

<script>
    $(document).ready(function () {
        // Disable Email
        $('.readonly:input').attr('readonly', true);
        if ('@ViewBag.UserRole' == 'Admin') {
            $(".employee-div").show();
        }
        if ($("#UserRole").val() == "Customer" || $("#UserRole").val() == "Admin") {
            $("#savebtn").hide();
            $("#edit").show();
            $("#cancel").hide();
            $('#Employee').select2('disable');
        } else {
            $("#savebtn").hide();
            $("#edit").hide();
            $("#cancel").show();
        }
    });

    $("#edit").click(function (event) {
        $('.' + 'tbdisable' + ':input').attr('disabled', false);
        $("#savebtn").show();
        $("#edit").hide();
        $("#cancel").hide();
        $('#Employee').select2('enable');
        event.preventDefault();
    });
</script>


