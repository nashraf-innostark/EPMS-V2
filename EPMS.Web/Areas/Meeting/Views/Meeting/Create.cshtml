@model EPMS.Web.ViewModels.Meeting.MeetingViewModel

@{
    ViewBag.Title = "Create Meeting";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="breadcrumb-container">
    <ul class="xbreadcrumbs">
        <li>
            <a href="~/Dashboard/Index">
                <i class="icon-photon home"></i>
            </a>
        </li>
        <li>
            <a href="~/Meeting/Meeting/Index">
                Meeting List
            </a>
        </li>
        <li class="current">
            <a href="">
                @ViewBag.Title
            </a>
        </li>
    </ul>
</div>

<header>
    <i class="icon-big-notepad"></i>
    <h2><small>@ViewBag.Title</small></h2>
</header>

@using (Html.BeginForm("Create", "Meeting", FormMethod.Post, new { @id = "meetingForm", @class = "form-horizontal", role = "form" }))
{
    <div class="container-fluid">
        @Html.HiddenFor(m => m.Meeting.MeetingId)
        @Html.HiddenFor(m => m.Meeting.RecCreatedBy)
        @Html.HiddenFor(m => m.Meeting.RecCreatedDt)
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="department">Topic Name</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.Meeting.TopicName, new { @dir = "ltr", id = "topicName", @class = "topicName" })
                    @Html.ValidationMessageFor(m => m.Meeting.TopicName, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="departmenta">Topic Name arabic</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.Meeting.TopicNameAr, new { @dir = "ltr", id = "topicNameAr", @class = "topicNameAr" })
                    @Html.ValidationMessageFor(m => m.Meeting.TopicNameAr, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="project">Related Project</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.TextBoxFor(m => m.Meeting.RelatedProject, new { @dir = "ltr", id = "relatedProject", @class = "relatedProject" })
                    @Html.ValidationMessageFor(m => m.Meeting.RelatedProject, "", new { @class = "required" })
                </div>
            </div>
        </div>
        <div id="Dual_Multi_Select_with_Filter_Search" class="control-group row-fluid">
            <div class="span3">
                <label class="control-label" for="dualMulti">Attendees (Emloyees)</label>
            </div>
            <div class="span9">
                <div class="controls">
                    @Html.ListBoxFor(m => m.EmployeeId, new MultiSelectList(Model.Employees, "EmployeeId", "EmployeeNameE"), new { @name = "dualMultiEmployee", @id = "dualMultiEmployee" })
                </div>
            </div>
        </div>
        @if (Model.MeetingAttendee != null)
        {
            if (Model.MeetingAttendees != null)
            {
                <div id="Dual_Multi_Select_with_Filter_Search2" class="control-group row-fluid">
                    <div class="span3">
                        <label class="control-label">Absences (Emloyees)</label>
                    </div>
                    <div class="span9">
                        <div class="controls">

                            @Html.ListBoxFor(m => m.EmployeeId, new MultiSelectList(Model.MeetingAttendees, "EmployeeId", "EmployeeNameE"), new { @name = "dualMultiAttendee", @id = "dualMultiAttendee" })

                        </div>
                    </div>

                </div>
            }

        }
    </div>
}

<script>
    $().ready(function () {
        //Dual for Employees
        $("#dualMultiEmployee").pickList({
            sourceListLabel: "Emloyees",
            targetListLabel: "Attending Employees",
        });
        $("#dualMulti2Employee").pickList({
            sourceListLabel: "Employees ",
            targetListLabel: "Absent Employees",
        });

        //Dual for Atendees
        $("#dualMultiAttendee").pickList({
            sourceListLabel: "Emloyees",
            targetListLabel: "Attending Employees",
        });
        $("#dualMulti2Attendee").pickList({
            sourceListLabel: "Employees ",
            targetListLabel: "Absent Employees",
        });
    });
</script>



